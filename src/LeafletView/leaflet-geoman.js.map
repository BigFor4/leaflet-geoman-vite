{
  "version": 3,
  "sources": ["../src/js/polyfills.js", "../package.json", "../src/assets/translations/en.json", "../src/assets/translations/de.json", "../src/assets/translations/it.json", "../src/assets/translations/id.json", "../src/assets/translations/ro.json", "../src/assets/translations/ru.json", "../src/assets/translations/es.json", "../src/assets/translations/nl.json", "../src/assets/translations/fr.json", "../src/assets/translations/zh.json", "../src/assets/translations/zh_tw.json", "../src/assets/translations/pt_br.json", "../src/assets/translations/pt_pt.json", "../src/assets/translations/pl.json", "../src/assets/translations/sv.json", "../src/assets/translations/el.json", "../src/assets/translations/hu.json", "../src/assets/translations/da.json", "../src/assets/translations/no.json", "../src/assets/translations/fa.json", "../src/assets/translations/ua.json", "../src/assets/translations/tr.json", "../src/assets/translations/cz.json", "../src/assets/translations/ja.json", "../src/assets/translations/fi.json", "../src/assets/translations/ko.json", "../src/assets/translations/ky.json", "../src/assets/translations/index.js", "../src/js/Mixins/Modes/Mode.Edit.js", "../src/js/Mixins/Modes/Mode.Drag.js", "../src/js/Mixins/Modes/Mode.Removal.js", "../src/js/Mixins/Modes/Mode.Rotate.js", "../src/js/Mixins/Events.js", "../src/js/Mixins/Keyboard.js", "../src/js/helpers/index.js", "../src/js/L.PM.Map.js", "../src/js/Toolbar/L.Controls.js", "../src/js/Toolbar/L.PM.Toolbar.js", "../src/js/Mixins/Snapping.js", "../src/js/Draw/L.PM.Draw.js", "../src/js/Draw/L.PM.Draw.Marker.js", "../src/js/Draw/L.PM.Draw.Line.js", "../src/js/Draw/L.PM.Draw.Polygon.js", "../src/js/Draw/L.PM.Draw.Rectangle.js", "../src/js/Draw/L.PM.Draw.CircleMarker.js", "../src/js/Draw/L.PM.Draw.Circle.js", "../src/js/helpers/turfHelper.js", "../src/js/Draw/L.PM.Draw.Cut.js", "../src/js/Draw/L.PM.Draw.Text.js", "../src/js/Mixins/Dragging.js", "../src/js/helpers/ModeHelper.js", "../src/js/Mixins/Rotating.js", "../src/js/Edit/L.PM.Edit.js", "../src/js/Edit/L.PM.Edit.LayerGroup.js", "../src/js/Edit/L.PM.Edit.Marker.js", "../src/js/Mixins/MarkerLimits.js", "../src/js/Edit/L.PM.Edit.Line.js", "../src/js/Edit/L.PM.Edit.Polygon.js", "../src/js/Edit/L.PM.Edit.Rectangle.js", "../src/js/Edit/L.PM.Edit.CircleMarker.js", "../src/js/Edit/L.PM.Edit.Circle.js", "../src/js/Edit/L.PM.Edit.ImageOverlay.js", "../src/js/Edit/L.PM.Edit.Text.js", "../src/js/helpers/Matrix.js", "../src/js/L.PM.Utils.js", "../src/js/L.PM.js"],
  "sourcesContent": ["/* eslint-disable */\r\n\r\n// Array.findIndex Polyfill\r\nArray.prototype.findIndex =\r\n  Array.prototype.findIndex ||\r\n  function (callback) {\r\n    if (this === null) {\r\n      throw new TypeError(\r\n        'Array.prototype.findIndex called on null or undefined'\r\n      );\r\n    } else if (typeof callback !== 'function') {\r\n      throw new TypeError('callback must be a function');\r\n    }\r\n    var list = Object(this);\r\n    // Makes sures is always has an positive integer as length.\r\n    var length = list.length >>> 0;\r\n    var thisArg = arguments[1];\r\n    for (var i = 0; i < length; i++) {\r\n      if (callback.call(thisArg, list[i], i, list)) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n\r\n// Array.find Polyfill for IE<12.\r\n// Requested here: https://github.com/geoman-io/leaflet-geoman/issues/173\r\nArray.prototype.find =\r\n  Array.prototype.find ||\r\n  function (callback) {\r\n    if (this === null) {\r\n      throw new TypeError('Array.prototype.find called on null or undefined');\r\n    } else if (typeof callback !== 'function') {\r\n      throw new TypeError('callback must be a function');\r\n    }\r\n    var list = Object(this);\r\n    // Makes sures is always has an positive integer as length.\r\n    var length = list.length >>> 0;\r\n    var thisArg = arguments[1];\r\n    for (var i = 0; i < length; i++) {\r\n      var element = list[i];\r\n      if (callback.call(thisArg, element, i, list)) {\r\n        return element;\r\n      }\r\n    }\r\n  };\r\n\r\n// Polyfill for Object.assign()\r\n// https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\r\nif (typeof Object.assign != 'function') {\r\n  Object.assign = function (target) {\r\n    'use strict';\r\n    if (target == null) {\r\n      throw new TypeError('Cannot convert undefined or null to object');\r\n    }\r\n\r\n    target = Object(target);\r\n    for (var index = 1; index < arguments.length; index++) {\r\n      var source = arguments[index];\r\n      if (source != null) {\r\n        for (var key in source) {\r\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n            target[key] = source[key];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  };\r\n}\r\n\r\n// Polyfill for Element.remove()\r\n// https://developer.mozilla.org/de/docs/Web/API/ChildNode/remove#Polyfill\r\n(function (arr) {\r\n  arr.forEach(function (item) {\r\n    if (item.hasOwnProperty('remove')) {\r\n      return;\r\n    }\r\n    Object.defineProperty(item, 'remove', {\r\n      configurable: true,\r\n      enumerable: true,\r\n      writable: true,\r\n      value: function remove() {\r\n        this.parentNode.removeChild(this);\r\n      },\r\n    });\r\n  });\r\n})([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\r\n\r\n// Polyfill for Array.includes()\r\n// https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#Polyfill\r\nif (!Array.prototype.includes) {\r\n  Object.defineProperty(Array.prototype, 'includes', {\r\n    value: function (searchElement, fromIndex) {\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      // 1. Let O be ? ToObject(this value).\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If len is 0, return false.\r\n      if (len === 0) {\r\n        return false;\r\n      }\r\n\r\n      // 4. Let n be ? ToInteger(fromIndex).\r\n      //    (If fromIndex is undefined, this step produces the value 0.)\r\n      var n = fromIndex | 0;\r\n\r\n      // 5. If n \u2265 0, then\r\n      //  a. Let k be n.\r\n      // 6. Else n < 0,\r\n      //  a. Let k be len + n.\r\n      //  b. If k < 0, let k be 0.\r\n      var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n\r\n      function sameValueZero(x, y) {\r\n        return (\r\n          x === y ||\r\n          (typeof x === 'number' &&\r\n            typeof y === 'number' &&\r\n            isNaN(x) &&\r\n            isNaN(y))\r\n        );\r\n      }\r\n\r\n      // 7. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n        // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n        if (sameValueZero(o[k], searchElement)) {\r\n          return true;\r\n        }\r\n        // c. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 8. Return false\r\n      return false;\r\n    },\r\n  });\r\n}\r\n", "{\r\n  \"name\": \"@geoman-io/leaflet-geoman-free\",\r\n  \"version\": \"2.17.0\",\r\n  \"description\": \"A Leaflet Plugin For Editing Geometry Layers in Leaflet 1.0\",\r\n  \"keywords\": [\r\n    \"leaflet\",\r\n    \"geoman\",\r\n    \"polygon management\",\r\n    \"geometry editing\",\r\n    \"map data\",\r\n    \"map overlay\",\r\n    \"polygon\",\r\n    \"geojson\",\r\n    \"leaflet-draw\",\r\n    \"data-field-geojson\",\r\n    \"ui-leaflet-draw\"\r\n  ],\r\n  \"files\": [\r\n    \"dist\"\r\n  ],\r\n  \"main\": \"dist/leaflet-geoman.js\",\r\n  \"types\": \"dist/leaflet-geoman.d.ts\",\r\n  \"dependencies\": {\r\n    \"@turf/boolean-contains\": \"^6.5.0\",\r\n    \"@turf/kinks\": \"^6.5.0\",\r\n    \"@turf/line-intersect\": \"^6.5.0\",\r\n    \"@turf/line-split\": \"^6.5.0\",\r\n    \"lodash\": \"4.17.21\",\r\n    \"polyclip-ts\": \"^0.16.5\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/leaflet\": \"^1.7.9\",\r\n    \"cross-env\": \"^7.0.3\",\r\n    \"cypress\": \"6.9.1\",\r\n    \"cypress-wait-until\": \"1.7.1\",\r\n    \"esbuild\": \"^0.20.0\",\r\n    \"eslint\": \"8.56.0\",\r\n    \"eslint-config-airbnb-base\": \"15.0.0\",\r\n    \"eslint-config-prettier\": \"9.1.0\",\r\n    \"eslint-plugin-cypress\": \"2.15.1\",\r\n    \"eslint-plugin-import\": \"2.29.1\",\r\n    \"husky\": \"^9.0.7\",\r\n    \"leaflet\": \"1.9.3\",\r\n    \"lint-staged\": \"^15.2.1\",\r\n    \"prettier\": \"3.2.4\",\r\n    \"prosthetic-hand\": \"1.3.1\",\r\n    \"ts-node\": \"^10.9.2\"\r\n  },\r\n  \"peerDependencies\": {\r\n    \"leaflet\": \"^1.2.0\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"pnpm run dev\",\r\n    \"dev\": \"cross-env DEV=true ts-node bundle.mjs\",\r\n    \"build\": \"ts-node bundle.mjs\",\r\n    \"test\": \"cypress run\",\r\n    \"cypress\": \"cypress open\",\r\n    \"prepare\": \"pnpm run build && husky\",\r\n    \"eslint-check\": \"eslint --print-config . | eslint-config-prettier-check\",\r\n    \"eslint\": \"eslint \\\"{src,cypress,demo}/**/*.js\\\" --fix \",\r\n    \"prettier\": \"prettier --write \\\"{src,cypress,demo}/**/*.{js,css}\\\" --log-level=warn\",\r\n    \"lint\": \"pnpm run eslint && pnpm run prettier\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git://github.com/geoman-io/leaflet-geoman.git\"\r\n  },\r\n  \"author\": {\r\n    \"name\": \"Geoman.io\",\r\n    \"email\": \"sales@geoman.io\",\r\n    \"url\": \"http://geoman.io\"\r\n  },\r\n  \"license\": \"MIT\",\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/geoman-io/leaflet-geoman/issues\"\r\n  },\r\n  \"homepage\": \"https://geoman.io\",\r\n  \"prettier\": {\r\n    \"trailingComma\": \"es5\",\r\n    \"tabWidth\": 2,\r\n    \"semi\": true,\r\n    \"singleQuote\": true\r\n  },\r\n  \"lint-staged\": {\r\n    \"*.js\": \"eslint \\\"{src,cypress,demo}/**/*.js\\\" --fix\",\r\n    \"*.{js,css,md}\": \"prettier --write \\\"{src,cypress,demo}/**/*.{js,css}\\\"\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Click to place marker\",\r\n    \"firstVertex\": \"Click to place first vertex\",\r\n    \"continueLine\": \"Click to continue drawing\",\r\n    \"finishLine\": \"Click any existing marker to finish\",\r\n    \"finishPoly\": \"Click first marker to finish\",\r\n    \"finishRect\": \"Click to finish\",\r\n    \"startCircle\": \"Click to place circle center\",\r\n    \"finishCircle\": \"Click to finish circle\",\r\n    \"placeCircleMarker\": \"Click to place circle marker\",\r\n    \"placeText\": \"Click to place text\",\r\n    \"selectFirstLayerFor\": \"Select first layer for {action}\",\r\n    \"selectSecondLayerFor\": \"Select second layer for {action}\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Finish\",\r\n    \"cancel\": \"Cancel\",\r\n    \"removeLastVertex\": \"Remove Last Vertex\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Draw Marker\",\r\n    \"drawPolyButton\": \"Draw Polygons\",\r\n    \"drawLineButton\": \"Draw Polyline\",\r\n    \"drawCircleButton\": \"Draw Circle\",\r\n    \"drawRectButton\": \"Draw Rectangle\",\r\n    \"editButton\": \"Edit Layers\",\r\n    \"dragButton\": \"Drag Layers\",\r\n    \"cutButton\": \"Cut Layers\",\r\n    \"deleteButton\": \"Remove Layers\",\r\n    \"drawCircleMarkerButton\": \"Draw Circle Marker\",\r\n    \"snappingButton\": \"Snap dragged marker to other layers and vertices\",\r\n    \"pinningButton\": \"Pin shared vertices together\",\r\n    \"rotateButton\": \"Rotate Layers\",\r\n    \"drawTextButton\": \"Draw Text\",\r\n    \"scaleButton\": \"Scale Layers\",\r\n    \"autoTracingButton\": \"Auto trace Line\",\r\n    \"snapGuidesButton\": \"Show SnapGuides\",\r\n    \"unionButton\": \"Union layers\",\r\n    \"differenceButton\": \"Subtract layers\"\r\n  },\r\n  \"measurements\": {\r\n    \"totalLength\": \"Length\",\r\n    \"segmentLength\": \"Segment length\",\r\n    \"area\": \"Area\",\r\n    \"radius\": \"Radius\",\r\n    \"perimeter\": \"Perimeter\",\r\n    \"height\": \"Height\",\r\n    \"width\": \"Width\",\r\n    \"coordinates\": \"Position\",\r\n    \"coordinatesMarker\": \"Position Marker\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Platziere den Marker mit Klick\",\r\n    \"firstVertex\": \"Platziere den ersten Marker mit Klick\",\r\n    \"continueLine\": \"Klicke, um weiter zu zeichnen\",\r\n    \"finishLine\": \"Beende mit Klick auf existierenden Marker\",\r\n    \"finishPoly\": \"Beende mit Klick auf ersten Marker\",\r\n    \"finishRect\": \"Beende mit Klick\",\r\n    \"startCircle\": \"Platziere das Kreiszentrum mit Klick\",\r\n    \"finishCircle\": \"Beende den Kreis mit Klick\",\r\n    \"placeCircleMarker\": \"Platziere den Kreismarker mit Klick\",\r\n    \"placeText\": \"Platziere den Text mit Klick\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Beenden\",\r\n    \"cancel\": \"Abbrechen\",\r\n    \"removeLastVertex\": \"Letzten Vertex l\u00F6schen\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Marker zeichnen\",\r\n    \"drawPolyButton\": \"Polygon zeichnen\",\r\n    \"drawLineButton\": \"Polyline zeichnen\",\r\n    \"drawCircleButton\": \"Kreis zeichnen\",\r\n    \"drawRectButton\": \"Rechteck zeichnen\",\r\n    \"editButton\": \"Layer editieren\",\r\n    \"dragButton\": \"Layer bewegen\",\r\n    \"cutButton\": \"Layer schneiden\",\r\n    \"deleteButton\": \"Layer l\u00F6schen\",\r\n    \"drawCircleMarkerButton\": \"Kreismarker zeichnen\",\r\n    \"snappingButton\": \"Bewegter Layer an andere Layer oder Vertexe einhacken\",\r\n    \"pinningButton\": \"Vertexe an der gleichen Position verkn\u00FCpfen\",\r\n    \"rotateButton\": \"Layer drehen\",\r\n    \"drawTextButton\": \"Text zeichnen\",\r\n    \"scaleButton\": \"Layer skalieren\",\r\n    \"autoTracingButton\": \"Linie automatisch nachzeichen\"\r\n  },\r\n  \"measurements\": {\r\n    \"totalLength\": \"L\u00E4nge\",\r\n    \"segmentLength\": \"Segment L\u00E4nge\",\r\n    \"area\": \"Fl\u00E4che\",\r\n    \"radius\": \"Radius\",\r\n    \"perimeter\": \"Umfang\",\r\n    \"height\": \"H\u00F6he\",\r\n    \"width\": \"Breite\",\r\n    \"coordinates\": \"Position\",\r\n    \"coordinatesMarker\": \"Position Marker\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Clicca per posizionare un Marker\",\r\n    \"firstVertex\": \"Clicca per posizionare il primo vertice\",\r\n    \"continueLine\": \"Clicca per continuare a disegnare\",\r\n    \"finishLine\": \"Clicca qualsiasi marker esistente per terminare\",\r\n    \"finishPoly\": \"Clicca il primo marker per terminare\",\r\n    \"finishRect\": \"Clicca per terminare\",\r\n    \"startCircle\": \"Clicca per posizionare il punto centrale del cerchio\",\r\n    \"finishCircle\": \"Clicca per terminare il cerchio\",\r\n    \"placeCircleMarker\": \"Clicca per posizionare un Marker del cherchio\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Termina\",\r\n    \"cancel\": \"Annulla\",\r\n    \"removeLastVertex\": \"Rimuovi l'ultimo vertice\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Disegna Marker\",\r\n    \"drawPolyButton\": \"Disegna Poligoni\",\r\n    \"drawLineButton\": \"Disegna Polilinea\",\r\n    \"drawCircleButton\": \"Disegna Cerchio\",\r\n    \"drawRectButton\": \"Disegna Rettangolo\",\r\n    \"editButton\": \"Modifica Livelli\",\r\n    \"dragButton\": \"Sposta Livelli\",\r\n    \"cutButton\": \"Ritaglia Livelli\",\r\n    \"deleteButton\": \"Elimina Livelli\",\r\n    \"drawCircleMarkerButton\": \"Disegna Marker del Cerchio\",\r\n    \"snappingButton\": \"Snap ha trascinato il pennarello su altri strati e vertici\",\r\n    \"pinningButton\": \"Pin condiviso vertici insieme\",\r\n    \"rotateButton\": \"Ruota livello\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Klik untuk menempatkan marker\",\r\n    \"firstVertex\": \"Klik untuk menempatkan vertex pertama\",\r\n    \"continueLine\": \"Klik untuk meneruskan digitasi\",\r\n    \"finishLine\": \"Klik pada sembarang marker yang ada untuk mengakhiri\",\r\n    \"finishPoly\": \"Klik marker pertama untuk mengakhiri\",\r\n    \"finishRect\": \"Klik untuk mengakhiri\",\r\n    \"startCircle\": \"Klik untuk menempatkan titik pusat lingkaran\",\r\n    \"finishCircle\": \"Klik untuk mengakhiri lingkaran\",\r\n    \"placeCircleMarker\": \"Klik untuk menempatkan penanda lingkarann\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Selesai\",\r\n    \"cancel\": \"Batal\",\r\n    \"removeLastVertex\": \"Hilangkan Vertex Terakhir\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Digitasi Marker\",\r\n    \"drawPolyButton\": \"Digitasi Polygon\",\r\n    \"drawLineButton\": \"Digitasi Polyline\",\r\n    \"drawCircleButton\": \"Digitasi Lingkaran\",\r\n    \"drawRectButton\": \"Digitasi Segi Empat\",\r\n    \"editButton\": \"Edit Layer\",\r\n    \"dragButton\": \"Geser Layer\",\r\n    \"cutButton\": \"Potong Layer\",\r\n    \"deleteButton\": \"Hilangkan Layer\",\r\n    \"drawCircleMarkerButton\": \"Digitasi Penanda Lingkaran\",\r\n    \"snappingButton\": \"Jepretkan penanda yang ditarik ke lapisan dan simpul lain\",\r\n    \"pinningButton\": \"Sematkan simpul bersama bersama\",\r\n    \"rotateButton\": \"Putar lapisan\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Adaug\u0103 un punct\",\r\n    \"firstVertex\": \"Apas\u0103 aici pentru a ad\u0103uga primul Vertex\",\r\n    \"continueLine\": \"Apas\u0103 aici pentru a continua desenul\",\r\n    \"finishLine\": \"Apas\u0103 pe orice obiect pentru a finisa desenul\",\r\n    \"finishPoly\": \"Apas\u0103 pe primul obiect pentru a finisa\",\r\n    \"finishRect\": \"Apas\u0103 pentru a finisa\",\r\n    \"startCircle\": \"Apas\u0103 pentru a desena un cerc\",\r\n    \"finishCircle\": \"Apas\u0103 pentru a finisa un cerc\",\r\n    \"placeCircleMarker\": \"Adaug\u0103 un punct\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Termin\u0103\",\r\n    \"cancel\": \"Anuleaz\u0103\",\r\n    \"removeLastVertex\": \"\u0218terge ultimul Vertex\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Adaug\u0103 o bulin\u0103\",\r\n    \"drawPolyButton\": \"Deseneaz\u0103 un poligon\",\r\n    \"drawLineButton\": \"Deseneaz\u0103 o linie\",\r\n    \"drawCircleButton\": \"Deseneaz\u0103 un cerc\",\r\n    \"drawRectButton\": \"Deseneaz\u0103 un dreptunghi\",\r\n    \"editButton\": \"Editeaz\u0103 straturile\",\r\n    \"dragButton\": \"Mut\u0103 straturile\",\r\n    \"cutButton\": \"Taie straturile\",\r\n    \"deleteButton\": \"\u0218terge straturile\",\r\n    \"drawCircleMarkerButton\": \"Deseneaz\u0103 marcatorul cercului\",\r\n    \"snappingButton\": \"Fixa\u021Bi marcatorul glisat pe alte straturi \u0219i v\u00E2rfuri\",\r\n    \"pinningButton\": \"Fixa\u021Bi v\u00E2rfurile partajate \u00EEmpreun\u0103\",\r\n    \"rotateButton\": \"Roti\u021Bi stratul\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"\u041D\u0430\u0436\u043C\u0438\u0442\u0435, \u0447\u0442\u043E\u0431\u044B \u043D\u0430\u043D\u0435\u0441\u0442\u0438 \u043C\u0430\u0440\u043A\u0435\u0440\",\r\n    \"firstVertex\": \"\u041D\u0430\u0436\u043C\u0438\u0442\u0435, \u0447\u0442\u043E\u0431\u044B \u043D\u0430\u043D\u0435\u0441\u0442\u0438 \u043F\u0435\u0440\u0432\u044B\u0439 \u043E\u0431\u044A\u0435\u043A\u0442\",\r\n    \"continueLine\": \"\u041D\u0430\u0436\u043C\u0438\u0442\u0435, \u0447\u0442\u043E\u0431\u044B \u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0438\u0442\u044C \u0440\u0438\u0441\u043E\u0432\u0430\u043D\u0438\u0435\",\r\n    \"finishLine\": \"\u041D\u0430\u0436\u043C\u0438\u0442\u0435 \u043B\u044E\u0431\u043E\u0439 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0439 \u043C\u0430\u0440\u043A\u0435\u0440 \u0434\u043B\u044F \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u044F\",\r\n    \"finishPoly\": \"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u043F\u0435\u0440\u0432\u0443\u044E \u0442\u043E\u0447\u043A\u0443, \u0447\u0442\u043E\u0431\u044B \u0437\u0430\u043A\u043E\u043D\u0447\u0438\u0442\u044C\",\r\n    \"finishRect\": \"\u041D\u0430\u0436\u043C\u0438\u0442\u0435, \u0447\u0442\u043E\u0431\u044B \u0437\u0430\u043A\u043E\u043D\u0447\u0438\u0442\u044C\",\r\n    \"startCircle\": \"\u041D\u0430\u0436\u043C\u0438\u0442\u0435, \u0447\u0442\u043E\u0431\u044B \u0434\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0446\u0435\u043D\u0442\u0440 \u043A\u0440\u0443\u0433\u0430\",\r\n    \"finishCircle\": \"\u041D\u0430\u0436\u043C\u0438\u0442\u0435, \u0447\u0442\u043E\u0431\u044B \u0437\u0430\u0434\u0430\u0442\u044C \u0440\u0430\u0434\u0438\u0443\u0441\",\r\n    \"placeCircleMarker\": \"\u041D\u0430\u0436\u043C\u0438\u0442\u0435, \u0447\u0442\u043E\u0431\u044B \u043D\u0430\u043D\u0435\u0441\u0442\u0438 \u043A\u0440\u0443\u0433\u043E\u0432\u043E\u0439 \u043C\u0430\u0440\u043A\u0435\u0440\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044C\",\r\n    \"cancel\": \"\u041E\u0442\u043C\u0435\u043D\u0438\u0442\u044C\",\r\n    \"removeLastVertex\": \"\u041E\u0442\u043C\u0435\u043D\u0438\u0442\u044C \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u043C\u0430\u0440\u043A\u0435\u0440\",\r\n    \"drawPolyButton\": \"\u0420\u0438\u0441\u043E\u0432\u0430\u0442\u044C \u043F\u043E\u043B\u0438\u0433\u043E\u043D\",\r\n    \"drawLineButton\": \"\u0420\u0438\u0441\u043E\u0432\u0430\u0442\u044C \u043A\u0440\u0438\u0432\u0443\u044E\",\r\n    \"drawCircleButton\": \"\u0420\u0438\u0441\u043E\u0432\u0430\u0442\u044C \u043A\u0440\u0443\u0433\",\r\n    \"drawRectButton\": \"\u0420\u0438\u0441\u043E\u0432\u0430\u0442\u044C \u043F\u0440\u044F\u043C\u043E\u0443\u0433\u043E\u043B\u044C\u043D\u0438\u043A\",\r\n    \"editButton\": \"\u0420\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0441\u043B\u043E\u0439\",\r\n    \"dragButton\": \"\u041F\u0435\u0440\u0435\u043D\u0435\u0441\u0442\u0438 \u0441\u043B\u043E\u0439\",\r\n    \"cutButton\": \"\u0412\u044B\u0440\u0435\u0437\u0430\u0442\u044C \u0441\u043B\u043E\u0439\",\r\n    \"deleteButton\": \"\u0423\u0434\u0430\u043B\u0438\u0442\u044C \u0441\u043B\u043E\u0439\",\r\n    \"drawCircleMarkerButton\": \"\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u043A\u0440\u0443\u0433\u043E\u0432\u043E\u0439 \u043C\u0430\u0440\u043A\u0435\u0440\",\r\n    \"snappingButton\": \"\u041F\u0440\u0438\u0432\u044F\u0437\u0430\u0442\u044C \u043F\u0435\u0440\u0435\u0442\u0430\u0441\u043A\u0438\u0432\u0430\u0435\u043C\u044B\u0439 \u043C\u0430\u0440\u043A\u0435\u0440 \u043A \u0434\u0440\u0443\u0433\u0438\u043C \u0441\u043B\u043E\u044F\u043C \u0438 \u0432\u0435\u0440\u0448\u0438\u043D\u0430\u043C\",\r\n    \"pinningButton\": \"\u0421\u0432\u044F\u0437\u0430\u0442\u044C \u043E\u0431\u0449\u0438\u0435 \u0442\u043E\u0447\u043A\u0438 \u0432\u043C\u0435\u0441\u0442\u0435\",\r\n    \"rotateButton\": \"\u041F\u043E\u0432\u043E\u0440\u043E\u0442 \u0441\u043B\u043E\u044F\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Presiona para colocar un marcador\",\r\n    \"firstVertex\": \"Presiona para colocar el primer v\u00E9rtice\",\r\n    \"continueLine\": \"Presiona para continuar dibujando\",\r\n    \"finishLine\": \"Presiona cualquier marcador existente para finalizar\",\r\n    \"finishPoly\": \"Presiona el primer marcador para finalizar\",\r\n    \"finishRect\": \"Presiona para finalizar\",\r\n    \"startCircle\": \"Presiona para colocar el centro del c\u00EDrculo\",\r\n    \"finishCircle\": \"Presiona para finalizar el c\u00EDrculo\",\r\n    \"placeCircleMarker\": \"Presiona para colocar un marcador de c\u00EDrculo\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Finalizar\",\r\n    \"cancel\": \"Cancelar\",\r\n    \"removeLastVertex\": \"Eliminar \u00FAltimo v\u00E9rtice\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Dibujar Marcador\",\r\n    \"drawPolyButton\": \"Dibujar Pol\u00EDgono\",\r\n    \"drawLineButton\": \"Dibujar L\u00EDnea\",\r\n    \"drawCircleButton\": \"Dibujar C\u00EDrculo\",\r\n    \"drawRectButton\": \"Dibujar Rect\u00E1ngulo\",\r\n    \"editButton\": \"Editar Capas\",\r\n    \"dragButton\": \"Arrastrar Capas\",\r\n    \"cutButton\": \"Cortar Capas\",\r\n    \"deleteButton\": \"Eliminar Capas\",\r\n    \"drawCircleMarkerButton\": \"Dibujar Marcador de C\u00EDrculo\",\r\n    \"snappingButton\": \"El marcador de Snap arrastrado a otras capas y v\u00E9rtices\",\r\n    \"pinningButton\": \"Fijar juntos los v\u00E9rtices compartidos\",\r\n    \"rotateButton\": \"Rotar capa\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Klik om een marker te plaatsen\",\r\n    \"firstVertex\": \"Klik om het eerste punt te plaatsen\",\r\n    \"continueLine\": \"Klik om te blijven tekenen\",\r\n    \"finishLine\": \"Klik op een bestaand punt om te be\u00EBindigen\",\r\n    \"finishPoly\": \"Klik op het eerst punt om te be\u00EBindigen\",\r\n    \"finishRect\": \"Klik om te be\u00EBindigen\",\r\n    \"startCircle\": \"Klik om het middelpunt te plaatsen\",\r\n    \"finishCircle\": \"Klik om de cirkel te be\u00EBindigen\",\r\n    \"placeCircleMarker\": \"Klik om een marker te plaatsen\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Bewaar\",\r\n    \"cancel\": \"Annuleer\",\r\n    \"removeLastVertex\": \"Verwijder laatste punt\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Plaats Marker\",\r\n    \"drawPolyButton\": \"Teken een vlak\",\r\n    \"drawLineButton\": \"Teken een lijn\",\r\n    \"drawCircleButton\": \"Teken een cirkel\",\r\n    \"drawRectButton\": \"Teken een vierkant\",\r\n    \"editButton\": \"Bewerk\",\r\n    \"dragButton\": \"Verplaats\",\r\n    \"cutButton\": \"Knip\",\r\n    \"deleteButton\": \"Verwijder\",\r\n    \"drawCircleMarkerButton\": \"Plaats Marker\",\r\n    \"snappingButton\": \"Snap gesleepte marker naar andere lagen en hoekpunten\",\r\n    \"pinningButton\": \"Speld gedeelde hoekpunten samen\",\r\n    \"rotateButton\": \"Laag roteren\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Cliquez pour placer un marqueur\",\r\n    \"firstVertex\": \"Cliquez pour placer le premier sommet\",\r\n    \"continueLine\": \"Cliquez pour continuer \u00E0 dessiner\",\r\n    \"finishLine\": \"Cliquez sur n'importe quel marqueur pour terminer\",\r\n    \"finishPoly\": \"Cliquez sur le premier marqueur pour terminer\",\r\n    \"finishRect\": \"Cliquez pour terminer\",\r\n    \"startCircle\": \"Cliquez pour placer le centre du cercle\",\r\n    \"finishCircle\": \"Cliquez pour finir le cercle\",\r\n    \"placeCircleMarker\": \"Cliquez pour placer le marqueur circulaire\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Terminer\",\r\n    \"cancel\": \"Annuler\",\r\n    \"removeLastVertex\": \"Retirer le dernier sommet\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Placer des marqueurs\",\r\n    \"drawPolyButton\": \"Dessiner des polygones\",\r\n    \"drawLineButton\": \"Dessiner des polylignes\",\r\n    \"drawCircleButton\": \"Dessiner un cercle\",\r\n    \"drawRectButton\": \"Dessiner un rectangle\",\r\n    \"editButton\": \"\u00C9diter des calques\",\r\n    \"dragButton\": \"D\u00E9placer des calques\",\r\n    \"cutButton\": \"Couper des calques\",\r\n    \"deleteButton\": \"Supprimer des calques\",\r\n    \"drawCircleMarkerButton\": \"Dessiner un marqueur circulaire\",\r\n    \"snappingButton\": \"Glisser le marqueur vers d'autres couches et sommets\",\r\n    \"pinningButton\": \"\u00C9pingler ensemble les sommets partag\u00E9s\",\r\n    \"rotateButton\": \"Tourner des calques\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"\u5355\u51FB\u653E\u7F6E\u6807\u8BB0\",\r\n    \"firstVertex\": \"\u5355\u51FB\u653E\u7F6E\u9996\u4E2A\u9876\u70B9\",\r\n    \"continueLine\": \"\u5355\u51FB\u7EE7\u7EED\u7ED8\u5236\",\r\n    \"finishLine\": \"\u5355\u51FB\u4EFB\u4F55\u5B58\u5728\u7684\u6807\u8BB0\u4EE5\u5B8C\u6210\",\r\n    \"finishPoly\": \"\u5355\u51FB\u7B2C\u4E00\u4E2A\u6807\u8BB0\u4EE5\u5B8C\u6210\",\r\n    \"finishRect\": \"\u5355\u51FB\u5B8C\u6210\",\r\n    \"startCircle\": \"\u5355\u51FB\u653E\u7F6E\u5706\u5FC3\",\r\n    \"finishCircle\": \"\u5355\u51FB\u5B8C\u6210\u5706\u5F62\",\r\n    \"placeCircleMarker\": \"\u70B9\u51FB\u653E\u7F6E\u5706\u5F62\u6807\u8BB0\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"\u5B8C\u6210\",\r\n    \"cancel\": \"\u53D6\u6D88\",\r\n    \"removeLastVertex\": \"\u79FB\u9664\u6700\u540E\u7684\u9876\u70B9\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"\u7ED8\u5236\u6807\u8BB0\",\r\n    \"drawPolyButton\": \"\u7ED8\u5236\u591A\u8FB9\u5F62\",\r\n    \"drawLineButton\": \"\u7ED8\u5236\u7EBF\u6BB5\",\r\n    \"drawCircleButton\": \"\u7ED8\u5236\u5706\u5F62\",\r\n    \"drawRectButton\": \"\u7ED8\u5236\u957F\u65B9\u5F62\",\r\n    \"editButton\": \"\u7F16\u8F91\u56FE\u5C42\",\r\n    \"dragButton\": \"\u62D6\u62FD\u56FE\u5C42\",\r\n    \"cutButton\": \"\u526A\u5207\u56FE\u5C42\",\r\n    \"deleteButton\": \"\u5220\u9664\u56FE\u5C42\",\r\n    \"drawCircleMarkerButton\": \"\u753B\u5706\u5708\u6807\u8BB0\",\r\n    \"snappingButton\": \"\u5C06\u62D6\u52A8\u7684\u6807\u8BB0\u6355\u6349\u5230\u5176\u4ED6\u56FE\u5C42\u548C\u9876\u70B9\",\r\n    \"pinningButton\": \"\u5C06\u5171\u4EAB\u9876\u70B9\u56FA\u5B9A\u5728\u4E00\u8D77\",\r\n    \"rotateButton\": \"\u65CB\u8F6C\u56FE\u5C42\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"\u55AE\u64CA\u653E\u7F6E\u6A19\u8A18\",\r\n    \"firstVertex\": \"\u55AE\u64CA\u653E\u7F6E\u7B2C\u4E00\u500B\u9802\u9EDE\",\r\n    \"continueLine\": \"\u55AE\u64CA\u7E7C\u7E8C\u7E6A\u88FD\",\r\n    \"finishLine\": \"\u55AE\u64CA\u4EFB\u4F55\u5B58\u5728\u7684\u6A19\u8A18\u4EE5\u5B8C\u6210\",\r\n    \"finishPoly\": \"\u55AE\u64CA\u7B2C\u4E00\u500B\u6A19\u8A18\u4EE5\u5B8C\u6210\",\r\n    \"finishRect\": \"\u55AE\u64CA\u5B8C\u6210\",\r\n    \"startCircle\": \"\u55AE\u64CA\u653E\u7F6E\u5713\u5FC3\",\r\n    \"finishCircle\": \"\u55AE\u64CA\u5B8C\u6210\u5713\u5F62\",\r\n    \"placeCircleMarker\": \"\u9EDE\u64CA\u653E\u7F6E\u5713\u5F62\u6A19\u8A18\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"\u5B8C\u6210\",\r\n    \"cancel\": \"\u53D6\u6D88\",\r\n    \"removeLastVertex\": \"\u79FB\u9664\u6700\u5F8C\u4E00\u500B\u9802\u9EDE\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"\u653E\u7F6E\u6A19\u8A18\",\r\n    \"drawPolyButton\": \"\u7E6A\u88FD\u591A\u908A\u5F62\",\r\n    \"drawLineButton\": \"\u7E6A\u88FD\u7DDA\u6BB5\",\r\n    \"drawCircleButton\": \"\u7E6A\u88FD\u5713\u5F62\",\r\n    \"drawRectButton\": \"\u7E6A\u88FD\u65B9\u5F62\",\r\n    \"editButton\": \"\u7DE8\u8F2F\u5716\u5F62\",\r\n    \"dragButton\": \"\u79FB\u52D5\u5716\u5F62\",\r\n    \"cutButton\": \"\u88C1\u5207\u5716\u5F62\",\r\n    \"deleteButton\": \"\u522A\u9664\u5716\u5F62\",\r\n    \"drawCircleMarkerButton\": \"\u756B\u5713\u5708\u6A19\u8A18\",\r\n    \"snappingButton\": \"\u5C07\u62D6\u52D5\u7684\u6A19\u8A18\u5C0D\u9F4A\u5230\u5176\u4ED6\u5716\u5C64\u548C\u9802\u9EDE\",\r\n    \"pinningButton\": \"\u5C07\u5171\u4EAB\u9802\u9EDE\u56FA\u5B9A\u5728\u4E00\u8D77\",\r\n    \"rotateButton\": \"\u65CB\u8F49\u5716\u5F62\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Clique para posicionar o marcador\",\r\n    \"firstVertex\": \"Clique para posicionar o primeiro v\u00E9rtice\",\r\n    \"continueLine\": \"Clique para continuar desenhando\",\r\n    \"finishLine\": \"Clique em qualquer marcador existente para finalizar\",\r\n    \"finishPoly\": \"Clique no primeiro marcador para finalizar\",\r\n    \"finishRect\": \"Clique para finalizar\",\r\n    \"startCircle\": \"Clique para posicionar o centro do c\u00EDrculo\",\r\n    \"finishCircle\": \"Clique para finalizar o c\u00EDrculo\",\r\n    \"placeCircleMarker\": \"Clique para posicionar o marcador circular\",\r\n    \"placeText\": \"Clique para inserir texto\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Finalizar\",\r\n    \"cancel\": \"Cancelar\",\r\n    \"removeLastVertex\": \"Remover \u00FAltimo v\u00E9rtice\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Desenhar Marcador\",\r\n    \"drawPolyButton\": \"Desenhar Pol\u00EDgonos\",\r\n    \"drawLineButton\": \"Desenhar Linha Poligonal\",\r\n    \"drawCircleButton\": \"Desenhar C\u00EDrculo\",\r\n    \"drawRectButton\": \"Desenhar Ret\u00E2ngulo\",\r\n    \"editButton\": \"Editar Camadas\",\r\n    \"dragButton\": \"Arrastar Camadas\",\r\n    \"cutButton\": \"Recortar Camadas\",\r\n    \"deleteButton\": \"Remover Camadas\",\r\n    \"drawCircleMarkerButton\": \"Desenhar Marcador de C\u00EDrculo\",\r\n    \"snappingButton\": \"Ajustar marcador arrastado a outras camadas e v\u00E9rtices\",\r\n    \"pinningButton\": \"Unir v\u00E9rtices compartilhados\",\r\n    \"rotateButton\": \"Rotacionar Camadas\",\r\n    \"drawTextButton\": \"Desenhar Texto\",\r\n    \"scaleButton\": \"Redimensionar Camadas\",\r\n    \"autoTracingButton\": \"Tra\u00E7ado Autom\u00E1tico de Linha\"\r\n  },\r\n  \"measurements\": {\r\n    \"totalLength\": \"Comprimento\",\r\n    \"segmentLength\": \"Comprimento do Segmento\",\r\n    \"area\": \"\u00C1rea\",\r\n    \"radius\": \"Raio\",\r\n    \"perimeter\": \"Per\u00EDmetro\",\r\n    \"height\": \"Altura\",\r\n    \"width\": \"Largura\",\r\n    \"coordinates\": \"Posi\u00E7\u00E3o\",\r\n    \"coordinatesMarker\": \"Marcador de Posi\u00E7\u00E3o\"\r\n  }\r\n}", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Clique para colocar marcador\",\r\n    \"firstVertex\": \"Clique para colocar primeiro v\u00E9rtice\",\r\n    \"continueLine\": \"Clique para continuar a desenhar\",\r\n    \"finishLine\": \"Clique num marcador existente para terminar\",\r\n    \"finishPoly\": \"Clique no primeiro marcador para terminar\",\r\n    \"finishRect\": \"Clique para terminar\",\r\n    \"startCircle\": \"Clique para colocar o centro do c\u00EDrculo\",\r\n    \"finishCircle\": \"Clique para terminar o c\u00EDrculo\",\r\n    \"placeCircleMarker\": \"Clique para colocar marcador de c\u00EDrculo\",\r\n    \"placeText\": \"Clique para colocar texto\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Terminar\",\r\n    \"cancel\": \"Cancelar\",\r\n    \"removeLastVertex\": \"Remover \u00DAltimo V\u00E9rtice\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Desenhar Marcador\",\r\n    \"drawPolyButton\": \"Desenhar Pol\u00EDgonos\",\r\n    \"drawLineButton\": \"Desenhar Polilinha\",\r\n    \"drawCircleButton\": \"Desenhar C\u00EDrculo\",\r\n    \"drawRectButton\": \"Desenhar Ret\u00E2ngulo\",\r\n    \"editButton\": \"Editar Camadas\",\r\n    \"dragButton\": \"Arrastar Camadas\",\r\n    \"cutButton\": \"Cortar Camadas\",\r\n    \"deleteButton\": \"Remover Camadas\",\r\n    \"drawCircleMarkerButton\": \"Desenhar Marcador de C\u00EDrculo\",\r\n    \"snappingButton\": \"Ajustar marcador arrastado a outras camadas e v\u00E9rtices\",\r\n    \"pinningButton\": \"Unir v\u00E9rtices partilhados\",\r\n    \"rotateButton\": \"Rodar Camadas\",\r\n    \"drawTextButton\": \"Desenhar Texto\",\r\n    \"scaleButton\": \"Escalar Camadas\",\r\n    \"autoTracingButton\": \"Tra\u00E7ado Autom\u00E1tico de Linha\"\r\n  },\r\n  \"measurements\": {\r\n    \"totalLength\": \"Comprimento\",\r\n    \"segmentLength\": \"Comprimento do Segmento\",\r\n    \"area\": \"\u00C1rea\",\r\n    \"radius\": \"Raio\",\r\n    \"perimeter\": \"Per\u00EDmetro\",\r\n    \"height\": \"Altura\",\r\n    \"width\": \"Largura\",\r\n    \"coordinates\": \"Posi\u00E7\u00E3o\",\r\n    \"coordinatesMarker\": \"Marcador de Posi\u00E7\u00E3o\"\r\n  }\r\n}", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Kliknij, aby umie\u015Bci\u0107 znacznik\",\r\n    \"firstVertex\": \"Kliknij, aby umie\u015Bci\u0107 pierwszy wierzcho\u0142ek\",\r\n    \"continueLine\": \"Kliknij, aby kontynuowa\u0107 rysowanie\",\r\n    \"finishLine\": \"Kliknij dowolny istniej\u0105cy znacznik, aby zako\u0144czy\u0107\",\r\n    \"finishPoly\": \"Kliknij pierwszy znacznik, aby zako\u0144czy\u0107\",\r\n    \"finishRect\": \"Kliknij, aby zako\u0144czy\u0107\",\r\n    \"startCircle\": \"Kliknij, aby umie\u015Bci\u0107 \u015Brodek okr\u0119gu\",\r\n    \"finishCircle\": \"Kliknij, aby zako\u0144czy\u0107 okr\u0105g\",\r\n    \"placeCircleMarker\": \"Kliknij, aby umie\u015Bci\u0107 znacznik okr\u0119gu\",\r\n    \"placeText\": \"Kliknij, aby umie\u015Bci\u0107 tekst\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Zako\u0144cz\",\r\n    \"cancel\": \"Anuluj\",\r\n    \"removeLastVertex\": \"Usu\u0144 ostatni wierzcho\u0142ek\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Rysuj znacznik\",\r\n    \"drawPolyButton\": \"Rysuj wielok\u0105t\",\r\n    \"drawLineButton\": \"Rysuj lini\u0119\",\r\n    \"drawCircleButton\": \"Rysuj okr\u0105g\",\r\n    \"drawRectButton\": \"Rysuj prostok\u0105t\",\r\n    \"editButton\": \"Edytuj warstwy\",\r\n    \"dragButton\": \"Przeci\u0105gnij warstwy\",\r\n    \"cutButton\": \"Wytnij warstwy\",\r\n    \"deleteButton\": \"Usu\u0144 warstwy\",\r\n    \"drawCircleMarkerButton\": \"Rysuj znacznik okr\u0105g\u0142y\",\r\n    \"snappingButton\": \"Przyci\u0105gnij przenoszony znacznik do innych warstw i wierzcho\u0142k\u00F3w\",\r\n    \"pinningButton\": \"Przypnij wsp\u00F3lne wierzcho\u0142ki razem\",\r\n    \"rotateButton\": \"Obr\u00F3\u0107 warstwy\",\r\n    \"drawTextButton\": \"Rysuj tekst\",\r\n    \"scaleButton\": \"Skaluj warstwy\",\r\n    \"autoTracingButton\": \"Automatyczne \u015Bledzenie linii\"\r\n  },\r\n  \"measurements\": {\r\n    \"totalLength\": \"D\u0142ugo\u015B\u0107\",\r\n    \"segmentLength\": \"D\u0142ugo\u015B\u0107 odcinka\",\r\n    \"area\": \"Obszar\",\r\n    \"radius\": \"Promie\u0144\",\r\n    \"perimeter\": \"Obw\u00F3d\",\r\n    \"height\": \"Wysoko\u015B\u0107\",\r\n    \"width\": \"Szeroko\u015B\u0107\",\r\n    \"coordinates\": \"Pozycja\",\r\n    \"coordinatesMarker\": \"Znacznik pozycji\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Klicka f\u00F6r att placera mark\u00F6r\",\r\n    \"firstVertex\": \"Klicka f\u00F6r att placera f\u00F6rsta h\u00F6rnet\",\r\n    \"continueLine\": \"Klicka f\u00F6r att forts\u00E4tta rita\",\r\n    \"finishLine\": \"Klicka p\u00E5 en existerande punkt f\u00F6r att slutf\u00F6ra\",\r\n    \"finishPoly\": \"Klicka p\u00E5 den f\u00F6rsta punkten f\u00F6r att slutf\u00F6ra\",\r\n    \"finishRect\": \"Klicka f\u00F6r att slutf\u00F6ra\",\r\n    \"startCircle\": \"Klicka f\u00F6r att placera cirkelns centrum\",\r\n    \"finishCircle\": \"Klicka f\u00F6r att slutf\u00F6ra cirkeln\",\r\n    \"placeCircleMarker\": \"Klicka f\u00F6r att placera cirkelmark\u00F6r\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Slutf\u00F6r\",\r\n    \"cancel\": \"Avbryt\",\r\n    \"removeLastVertex\": \"Ta bort sista h\u00F6rnet\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Rita Mark\u00F6r\",\r\n    \"drawPolyButton\": \"Rita Polygoner\",\r\n    \"drawLineButton\": \"Rita Linje\",\r\n    \"drawCircleButton\": \"Rita Cirkel\",\r\n    \"drawRectButton\": \"Rita Rektangel\",\r\n    \"editButton\": \"Redigera Lager\",\r\n    \"dragButton\": \"Dra Lager\",\r\n    \"cutButton\": \"Klipp i Lager\",\r\n    \"deleteButton\": \"Ta bort Lager\",\r\n    \"drawCircleMarkerButton\": \"Rita Cirkelmark\u00F6r\",\r\n    \"snappingButton\": \"Sn\u00E4pp dra mark\u00F6ren till andra lager och h\u00F6rn\",\r\n    \"pinningButton\": \"F\u00E4st delade h\u00F6rn tillsammans\",\r\n    \"rotateButton\": \"Rotera lagret\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"\u039A\u03AC\u03BD\u03C4\u03B5 \u03BA\u03BB\u03B9\u03BA \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03C4\u03BF\u03C0\u03BF\u03B8\u03B5\u03C4\u03AE\u03C3\u03B5\u03C4\u03B5 \u0394\u03B5\u03AF\u03BA\u03C4\u03B7\",\r\n    \"firstVertex\": \"\u039A\u03AC\u03BD\u03C4\u03B5 \u03BA\u03BB\u03B9\u03BA \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03C4\u03BF\u03C0\u03BF\u03B8\u03B5\u03C4\u03AE\u03C3\u03B5\u03C4\u03B5 \u03C4\u03BF \u03C0\u03C1\u03CE\u03C4\u03BF \u03C3\u03B7\u03BC\u03B5\u03AF\u03BF\",\r\n    \"continueLine\": \"\u039A\u03AC\u03BD\u03C4\u03B5 \u03BA\u03BB\u03B9\u03BA \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03C3\u03C5\u03BD\u03B5\u03C7\u03AF\u03C3\u03B5\u03C4\u03B5 \u03BD\u03B1 \u03C3\u03C7\u03B5\u03B4\u03B9\u03AC\u03B6\u03B5\u03C4\u03B5\",\r\n    \"finishLine\": \"\u039A\u03AC\u03BD\u03C4\u03B5 \u03BA\u03BB\u03B9\u03BA \u03C3\u03B5 \u03BF\u03C0\u03BF\u03B9\u03BF\u03BD\u03B4\u03AE\u03C0\u03BF\u03C4\u03B5 \u03C5\u03C0\u03AC\u03C1\u03C7\u03BF\u03BD \u03C3\u03B7\u03BC\u03B5\u03AF\u03BF \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03BF\u03BB\u03BF\u03BA\u03BB\u03B7\u03C1\u03C9\u03B8\u03B5\u03AF\",\r\n    \"finishPoly\": \"\u039A\u03AC\u03BD\u03C4\u03B5 \u03BA\u03BB\u03B9\u03BA \u03C3\u03C4\u03BF \u03C0\u03C1\u03CE\u03C4\u03BF \u03C3\u03B7\u03BC\u03B5\u03AF\u03BF \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03C4\u03B5\u03BB\u03B5\u03B9\u03CE\u03C3\u03B5\u03C4\u03B5\",\r\n    \"finishRect\": \"\u039A\u03AC\u03BD\u03C4\u03B5 \u03BA\u03BB\u03B9\u03BA \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03C4\u03B5\u03BB\u03B5\u03B9\u03CE\u03C3\u03B5\u03C4\u03B5\",\r\n    \"startCircle\": \"\u039A\u03AC\u03BD\u03C4\u03B5 \u03BA\u03BB\u03B9\u03BA \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03C4\u03BF\u03C0\u03BF\u03B8\u03B5\u03C4\u03AE\u03C3\u03B5\u03C4\u03B5 \u03BA\u03AD\u03BD\u03C4\u03C1\u03BF \u039A\u03CD\u03BA\u03BB\u03BF\u03C5\",\r\n    \"finishCircle\": \"\u039A\u03AC\u03BD\u03C4\u03B5 \u03BA\u03BB\u03B9\u03BA \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03BF\u03BB\u03BF\u03BA\u03BB\u03B7\u03C1\u03CE\u03C3\u03B5\u03C4\u03B5 \u03C4\u03BF\u03BD \u039A\u03CD\u03BA\u03BB\u03BF\",\r\n    \"placeCircleMarker\": \"\u039A\u03AC\u03BD\u03C4\u03B5 \u03BA\u03BB\u03B9\u03BA \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03C4\u03BF\u03C0\u03BF\u03B8\u03B5\u03C4\u03AE\u03C3\u03B5\u03C4\u03B5 \u039A\u03C5\u03BA\u03BB\u03B9\u03BA\u03CC \u0394\u03B5\u03AF\u03BA\u03C4\u03B7\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"\u03A4\u03AD\u03BB\u03BF\u03C2\",\r\n    \"cancel\": \"\u0391\u03BA\u03CD\u03C1\u03C9\u03C3\u03B7\",\r\n    \"removeLastVertex\": \"\u039A\u03B1\u03C4\u03AC\u03C1\u03B3\u03B7\u03C3\u03B7 \u03C4\u03B5\u03BB\u03B5\u03C5\u03C4\u03B1\u03AF\u03BF\u03C5 \u03C3\u03B7\u03BC\u03B5\u03AF\u03BF\u03C5\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"\u03A3\u03C7\u03B5\u03B4\u03AF\u03B1\u03C3\u03B7 \u0394\u03B5\u03AF\u03BA\u03C4\u03B7\",\r\n    \"drawPolyButton\": \"\u03A3\u03C7\u03B5\u03B4\u03AF\u03B1\u03C3\u03B7 \u03A0\u03BF\u03BB\u03C5\u03B3\u03CE\u03BD\u03BF\u03C5\",\r\n    \"drawLineButton\": \"\u03A3\u03C7\u03B5\u03B4\u03AF\u03B1\u03C3\u03B7 \u0393\u03C1\u03B1\u03BC\u03BC\u03AE\u03C2\",\r\n    \"drawCircleButton\": \"\u03A3\u03C7\u03B5\u03B4\u03AF\u03B1\u03C3\u03B7 \u039A\u03CD\u03BA\u03BB\u03BF\u03C5\",\r\n    \"drawRectButton\": \"\u03A3\u03C7\u03B5\u03B4\u03AF\u03B1\u03C3\u03B7 \u039F\u03C1\u03B8\u03BF\u03B3\u03C9\u03BD\u03AF\u03BF\u03C5\",\r\n    \"editButton\": \"\u0395\u03C0\u03B5\u03BE\u03B5\u03C1\u03B3\u03B1\u03C3\u03AF\u03B1 \u0395\u03C0\u03B9\u03C0\u03AD\u03B4\u03C9\u03BD\",\r\n    \"dragButton\": \"\u039C\u03B5\u03C4\u03B1\u03C6\u03BF\u03C1\u03AC \u0395\u03C0\u03B9\u03C0\u03AD\u03B4\u03C9\u03BD\",\r\n    \"cutButton\": \"\u0391\u03C0\u03BF\u03BA\u03BF\u03C0\u03AE \u0395\u03C0\u03B9\u03C0\u03AD\u03B4\u03C9\u03BD\",\r\n    \"deleteButton\": \"\u039A\u03B1\u03C4\u03AC\u03C1\u03B3\u03B7\u03C3\u03B7 \u0395\u03C0\u03B9\u03C0\u03AD\u03B4\u03C9\u03BD\",\r\n    \"drawCircleMarkerButton\": \"\u03A3\u03C7\u03B5\u03B4\u03AF\u03B1\u03C3\u03B7 \u039A\u03C5\u03BA\u03BB\u03B9\u03BA\u03BF\u03CD \u0394\u03B5\u03AF\u03BA\u03C4\u03B7\",\r\n    \"snappingButton\": \"\u03A0\u03C1\u03BF\u03C3\u03BA\u03CC\u03BB\u03BB\u03B7\u03C3\u03B7 \u03C4\u03BF\u03C5 \u0394\u03B5\u03AF\u03BA\u03C4\u03B7 \u03BC\u03B5\u03C4\u03B1\u03C6\u03BF\u03C1\u03AC\u03C2 \u03C3\u03B5 \u03AC\u03BB\u03BB\u03B1 \u0395\u03C0\u03AF\u03C0\u03B5\u03B4\u03B1 \u03BA\u03B1\u03B9 \u039A\u03BF\u03C1\u03C5\u03C6\u03AD\u03C2\",\r\n    \"pinningButton\": \"\u03A0\u03B5\u03C1\u03B9\u03BA\u03BF\u03C0\u03AE \u03BA\u03BF\u03B9\u03BD\u03CE\u03BD \u03BA\u03BF\u03C1\u03C5\u03C6\u03CE\u03BD \u03BC\u03B1\u03B6\u03AF\",\r\n    \"rotateButton\": \"\u03A0\u03B5\u03C1\u03B9\u03C3\u03C4\u03C1\u03AD\u03C8\u03C4\u03B5 \u03C4\u03BF \u03C3\u03C4\u03C1\u03CE\u03BC\u03B1\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Kattintson a jel\u00F6l\u0151 elhelyez\u00E9s\u00E9hez\",\r\n    \"firstVertex\": \"Kattintson az els\u0151 pont elhelyez\u00E9s\u00E9hez\",\r\n    \"continueLine\": \"Kattintson a k\u00F6vetkez\u0151 pont elhelyez\u00E9s\u00E9hez\",\r\n    \"finishLine\": \"A befejez\u00E9shez kattintson egy megl\u00E9v\u0151 pontra\",\r\n    \"finishPoly\": \"A befejez\u00E9shez kattintson az els\u0151 pontra\",\r\n    \"finishRect\": \"Kattintson a befejez\u00E9shez\",\r\n    \"startCircle\": \"Kattintson a k\u00F6r k\u00F6z\u00E9ppontj\u00E1nak elhelyez\u00E9s\u00E9hez\",\r\n    \"finishCircle\": \"Kattintson a k\u00F6r befejez\u00E9s\u00E9hez\",\r\n    \"placeCircleMarker\": \"Kattintson a k\u00F6rjel\u00F6l\u0151 elhelyez\u00E9s\u00E9hez\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Befejez\u00E9s\",\r\n    \"cancel\": \"M\u00E9gse\",\r\n    \"removeLastVertex\": \"Utols\u00F3 pont elt\u00E1vol\u00EDt\u00E1sa\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Jel\u00F6l\u0151 rajzol\u00E1sa\",\r\n    \"drawPolyButton\": \"Poligon rajzol\u00E1sa\",\r\n    \"drawLineButton\": \"Vonal rajzol\u00E1sa\",\r\n    \"drawCircleButton\": \"K\u00F6r rajzol\u00E1sa\",\r\n    \"drawRectButton\": \"N\u00E9gyzet rajzol\u00E1sa\",\r\n    \"editButton\": \"Elemek szerkeszt\u00E9se\",\r\n    \"dragButton\": \"Elemek mozgat\u00E1sa\",\r\n    \"cutButton\": \"Elemek v\u00E1g\u00E1sa\",\r\n    \"deleteButton\": \"Elemek t\u00F6rl\u00E9se\",\r\n    \"drawCircleMarkerButton\": \"K\u00F6r jel\u00F6l\u0151 rajzol\u00E1sa\",\r\n    \"snappingButton\": \"Kapcsolja a jel\u00F6lt\u0151t m\u00E1sik elemhez vagy ponthoz\",\r\n    \"pinningButton\": \"K\u00F6z\u00F6s pontok \u00F6sszek\u00F6t\u00E9se\",\r\n    \"rotateButton\": \"F\u00F3lia elforgat\u00E1sa\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Tryk for at placere en mark\u00F8r\",\r\n    \"firstVertex\": \"Tryk for at placere det f\u00F8rste punkt\",\r\n    \"continueLine\": \"Tryk for at forts\u00E6tte linjen\",\r\n    \"finishLine\": \"Tryk p\u00E5 et eksisterende punkt for at afslutte\",\r\n    \"finishPoly\": \"Tryk p\u00E5 det f\u00F8rste punkt for at afslutte\",\r\n    \"finishRect\": \"Tryk for at afslutte\",\r\n    \"startCircle\": \"Tryk for at placere cirklens center\",\r\n    \"finishCircle\": \"Tryk for at afslutte cirklen\",\r\n    \"placeCircleMarker\": \"Tryk for at placere en cirkelmark\u00F8r\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Afslut\",\r\n    \"cancel\": \"Afbryd\",\r\n    \"removeLastVertex\": \"Fjern sidste punkt\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Placer mark\u00F8r\",\r\n    \"drawPolyButton\": \"Tegn polygon\",\r\n    \"drawLineButton\": \"Tegn linje\",\r\n    \"drawCircleButton\": \"Tegn cirkel\",\r\n    \"drawRectButton\": \"Tegn firkant\",\r\n    \"editButton\": \"Rediger\",\r\n    \"dragButton\": \"Tr\u00E6k\",\r\n    \"cutButton\": \"Klip\",\r\n    \"deleteButton\": \"Fjern\",\r\n    \"drawCircleMarkerButton\": \"Tegn cirkelmark\u00F8r\",\r\n    \"snappingButton\": \"Fastg\u00F8r trukket mark\u00F8r til andre elementer\",\r\n    \"pinningButton\": \"Sammenl\u00E6g delte elementer\",\r\n    \"rotateButton\": \"Roter laget\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Klikk for \u00E5 plassere punkt\",\r\n    \"firstVertex\": \"Klikk for \u00E5 plassere f\u00F8rste punkt\",\r\n    \"continueLine\": \"Klikk for \u00E5 tegne videre\",\r\n    \"finishLine\": \"Klikk p\u00E5 et eksisterende punkt for \u00E5 fullf\u00F8re\",\r\n    \"finishPoly\": \"Klikk f\u00F8rste punkt for \u00E5 fullf\u00F8re\",\r\n    \"finishRect\": \"Klikk for \u00E5 fullf\u00F8re\",\r\n    \"startCircle\": \"Klikk for \u00E5 sette sirkel midtpunkt\",\r\n    \"finishCircle\": \"Klikk for \u00E5 fullf\u00F8re sirkel\",\r\n    \"placeCircleMarker\": \"Klikk for \u00E5 plassere sirkel\",\r\n    \"placeText\": \"Klikk for \u00E5 plassere tekst\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Fullf\u00F8r\",\r\n    \"cancel\": \"Kanseller\",\r\n    \"removeLastVertex\": \"Fjern forrige punkt\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Tegn punkt\",\r\n    \"drawPolyButton\": \"Tegn flate\",\r\n    \"drawLineButton\": \"Tegn linje\",\r\n    \"drawCircleButton\": \"Tegn sirkel\",\r\n    \"drawRectButton\": \"Tegn rektangel\",\r\n    \"editButton\": \"Rediger objekter\",\r\n    \"dragButton\": \"Dra objekter\",\r\n    \"cutButton\": \"Kutt objekter\",\r\n    \"deleteButton\": \"Fjern objekter\",\r\n    \"drawCircleMarkerButton\": \"Tegn sirkel-punkt\",\r\n    \"snappingButton\": \"Fest dratt punkt til andre objekter og punkt\",\r\n    \"pinningButton\": \"Pin delte punkter sammen\",\r\n    \"rotateButton\": \"Rot\u00E9r objekter\",\r\n    \"drawTextButton\": \"Tegn tekst\",\r\n    \"scaleButton\": \"Skal\u00E9r objekter\",\r\n    \"autoTracingButton\": \"Automatisk sporing av linje\"\r\n  },\r\n  \"measurements\": {\r\n    \"totalLength\": \"Lengde\",\r\n    \"segmentLength\": \"Segmentlengde\",\r\n    \"area\": \"Omr\u00E5de\",\r\n    \"radius\": \"Radius\",\r\n    \"perimeter\": \"Omriss\",\r\n    \"height\": \"H\u00F8yde\",\r\n    \"width\": \"Bredde\",\r\n    \"coordinates\": \"Posisjon\",\r\n    \"coordinatesMarker\": \"Posisjonsmark\u00F8r\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"\u06A9\u0644\u06CC\u06A9 \u0628\u0631\u0627\u06CC \u062C\u0627\u0646\u0645\u0627\u06CC\u06CC \u0646\u0634\u0627\u0646\",\r\n    \"firstVertex\": \"\u06A9\u0644\u06CC\u06A9 \u0628\u0631\u0627\u06CC \u0631\u0633\u0645 \u0627\u0648\u0644\u06CC\u0646 \u0631\u0623\u0633\",\r\n    \"continueLine\": \"\u06A9\u0644\u06CC\u06A9 \u0628\u0631\u0627\u06CC \u0627\u062F\u0627\u0645\u0647 \u0631\u0633\u0645\",\r\n    \"finishLine\": \"\u06A9\u0644\u06CC\u06A9 \u0631\u0648\u06CC \u0647\u0631 \u0646\u0634\u0627\u0646 \u0645\u0648\u062C\u0648\u062F \u0628\u0631\u0627\u06CC \u067E\u0627\u06CC\u0627\u0646\",\r\n    \"finishPoly\": \"\u06A9\u0644\u06CC\u06A9 \u0631\u0648\u06CC \u0627\u0648\u0644\u06CC\u0646 \u0646\u0634\u0627\u0646 \u0628\u0631\u0627\u06CC \u067E\u0627\u06CC\u0627\u0646\",\r\n    \"finishRect\": \"\u06A9\u0644\u06CC\u06A9 \u0628\u0631\u0627\u06CC \u067E\u0627\u06CC\u0627\u0646\",\r\n    \"startCircle\": \"\u06A9\u0644\u06CC\u06A9 \u0628\u0631\u0627\u06CC \u0631\u0633\u0645 \u0645\u0631\u06A9\u0632 \u062F\u0627\u06CC\u0631\u0647\",\r\n    \"finishCircle\": \"\u06A9\u0644\u06CC\u06A9 \u0628\u0631\u0627\u06CC \u067E\u0627\u06CC\u0627\u0646 \u0631\u0633\u0645 \u062F\u0627\u06CC\u0631\u0647\",\r\n    \"placeCircleMarker\": \"\u06A9\u0644\u06CC\u06A9 \u0628\u0631\u0627\u06CC \u0631\u0633\u0645 \u0646\u0634\u0627\u0646 \u062F\u0627\u06CC\u0631\u0647\",\r\n    \"placeText\": \"\u06A9\u0644\u06CC\u06A9 \u0628\u0631\u0627\u06CC \u0646\u0648\u0634\u062A\u0646 \u0645\u062A\u0646\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"\u067E\u0627\u06CC\u0627\u0646\",\r\n    \"cancel\": \"\u0644\u0641\u0648\",\r\n    \"removeLastVertex\": \"\u062D\u0630\u0641 \u0622\u062E\u0631\u06CC\u0646 \u0631\u0623\u0633\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"\u062F\u0631\u062C \u0646\u0634\u0627\u0646\",\r\n    \"drawPolyButton\": \"\u0631\u0633\u0645 \u0686\u0646\u062F\u0636\u0644\u0639\u06CC\",\r\n    \"drawLineButton\": \"\u0631\u0633\u0645 \u062E\u0637\",\r\n    \"drawCircleButton\": \"\u0631\u0633\u0645 \u062F\u0627\u06CC\u0631\u0647\",\r\n    \"drawRectButton\": \"\u0631\u0633\u0645 \u0686\u0647\u0627\u0631\u0636\u0644\u0639\u06CC\",\r\n    \"editButton\": \"\u0648\u06CC\u0631\u0627\u06CC\u0634 \u0644\u0627\u06CC\u0647\u200C\u0647\u0627\",\r\n    \"dragButton\": \"\u062C\u0627\u0628\u062C\u0627\u06CC\u06CC \u0644\u0627\u06CC\u0647\u200C\u0647\u0627\",\r\n    \"cutButton\": \"\u0628\u0631\u0634 \u0644\u0627\u06CC\u0647\u200C\u0647\u0627\",\r\n    \"deleteButton\": \"\u062D\u0630\u0641 \u0644\u0627\u06CC\u0647\u200C\u0647\u0627\",\r\n    \"drawCircleMarkerButton\": \"\u0631\u0633\u0645 \u0646\u0634\u0627\u0646 \u062F\u0627\u06CC\u0631\u0647\",\r\n    \"snappingButton\": \"\u0646\u0634\u0627\u0646\u06AF\u0631 \u0631\u0627 \u0628\u0647 \u0644\u0627\u06CC\u0647\u200C\u0647\u0627 \u0648 \u0631\u0626\u0648\u0633 \u062F\u06CC\u06AF\u0631 \u0628\u06A9\u0634\u06CC\u062F\",\r\n    \"pinningButton\": \"\u0631\u0626\u0648\u0633 \u0645\u0634\u062A\u0631\u06A9 \u0631\u0627 \u0628\u0627 \u0647\u0645 \u067E\u06CC\u0646 \u06A9\u0646\u06CC\u062F\",\r\n    \"rotateButton\": \"\u0686\u0631\u062E\u0634 \u0644\u0627\u06CC\u0647\",\r\n    \"drawTextButton\": \"\u0631\u0633\u0645 \u0645\u062A\u0646\",\r\n    \"scaleButton\": \"\u0645\u0642\u06CC\u0627\u0633\u200C\u06AF\u0630\u0627\u0631\u06CC\",\r\n    \"autoTracingButton\": \"\u0631\u062F\u06CC\u0627\u0628 \u062E\u0648\u062F\u06A9\u0627\u0631\"\r\n  },\r\n  \"measurements\": {\r\n    \"totalLength\": \"\u0637\u0648\u0644\",\r\n    \"segmentLength\": \"\u0637\u0648\u0644 \u0628\u062E\u0634\",\r\n    \"area\": \"\u0646\u0627\u062D\u06CC\u0647\",\r\n    \"radius\": \"\u0634\u0639\u0627\u0639\",\r\n    \"perimeter\": \"\u0645\u062D\u06CC\u0637\",\r\n    \"height\": \"\u0627\u0631\u062A\u0641\u0627\u0639\",\r\n    \"width\": \"\u0639\u0631\u0636\",\r\n    \"coordinates\": \"\u0645\u0648\u0642\u0639\u06CC\u062A\",\r\n    \"coordinatesMarker\": \"\u0645\u0648\u0642\u0639\u06CC\u062A \u0646\u0634\u0627\u0646\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"\u041D\u0430\u0442\u0438\u0441\u043D\u0456\u0442\u044C, \u0449\u043E\u0431 \u043D\u0430\u043D\u0435\u0441\u0442\u0438 \u043C\u0430\u0440\u043A\u0435\u0440\",\r\n    \"firstVertex\": \"\u041D\u0430\u0442\u0438\u0441\u043D\u0456\u0442\u044C, \u0449\u043E\u0431 \u043D\u0430\u043D\u0435\u0441\u0442\u0438 \u043F\u0435\u0440\u0448\u0443 \u0432\u0435\u0440\u0448\u0438\u043D\u0443\",\r\n    \"continueLine\": \"\u041D\u0430\u0442\u0438\u0441\u043D\u0456\u0442\u044C, \u0449\u043E\u0431 \u043F\u0440\u043E\u0434\u043E\u0432\u0436\u0438\u0442\u0438 \u043C\u0430\u043B\u044E\u0432\u0430\u0442\u0438\",\r\n    \"finishLine\": \"\u041D\u0430\u0442\u0438\u0441\u043D\u0456\u0442\u044C \u0431\u0443\u0434\u044C-\u044F\u043A\u0438\u0439 \u0456\u0441\u043D\u0443\u044E\u0447\u0438\u0439 \u043C\u0430\u0440\u043A\u0435\u0440 \u0434\u043B\u044F \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u043D\u044F\",\r\n    \"finishPoly\": \"\u0412\u0438\u0431\u0435\u0440\u0456\u0442\u044C \u043F\u0435\u0440\u0448\u0438\u0439 \u043C\u0430\u0440\u043A\u0435\u0440, \u0449\u043E\u0431 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u0438\",\r\n    \"finishRect\": \"\u041D\u0430\u0442\u0438\u0441\u043D\u0456\u0442\u044C, \u0449\u043E\u0431 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u0438\",\r\n    \"startCircle\": \"\u041D\u0430\u0442\u0438\u0441\u043D\u0456\u0442\u044C, \u0449\u043E\u0431 \u0434\u043E\u0434\u0430\u0442\u0438 \u0446\u0435\u043D\u0442\u0440 \u043A\u043E\u043B\u0430\",\r\n    \"finishCircle\": \"\u041D\u0430\u0442\u0438\u0441\u043D\u0456\u0442\u044C, \u0449\u043E\u0431 \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u0438 \u043A\u043E\u043B\u043E\",\r\n    \"placeCircleMarker\": \"\u041D\u0430\u0442\u0438\u0441\u043D\u0456\u0442\u044C, \u0449\u043E\u0431 \u043D\u0430\u043D\u0435\u0441\u0442\u0438 \u043A\u0440\u0443\u0433\u043E\u0432\u0438\u0439 \u043C\u0430\u0440\u043A\u0435\u0440\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u0438\",\r\n    \"cancel\": \"\u0412\u0456\u0434\u043C\u0456\u043D\u0438\u0442\u0438\",\r\n    \"removeLastVertex\": \"\u0412\u0438\u0434\u0430\u043B\u0438\u0442\u0438 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u044E \u0432\u0435\u0440\u0448\u0438\u043D\u0443\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"\u041C\u0430\u043B\u044E\u0432\u0430\u0442\u0438 \u043C\u0430\u0440\u043A\u0435\u0440\",\r\n    \"drawPolyButton\": \"\u041C\u0430\u043B\u044E\u0432\u0430\u0442\u0438 \u043F\u043E\u043B\u0456\u0433\u043E\u043D\",\r\n    \"drawLineButton\": \"\u041C\u0430\u043B\u044E\u0432\u0430\u0442\u0438 \u043A\u0440\u0438\u0432\u0443\",\r\n    \"drawCircleButton\": \"\u041C\u0430\u043B\u044E\u0432\u0430\u0442\u0438 \u043A\u043E\u043B\u043E\",\r\n    \"drawRectButton\": \"\u041C\u0430\u043B\u044E\u0432\u0430\u0442\u0438 \u043F\u0440\u044F\u043C\u043E\u043A\u0443\u0442\u043D\u0438\u043A\",\r\n    \"editButton\": \"\u0420\u0435\u0434\u0430\u0433\u0443\u0432\u0430\u0442\u0438 \u0448\u0430\u0440\u0438\",\r\n    \"dragButton\": \"\u041F\u0435\u0440\u0435\u043D\u0435\u0441\u0442\u0438 \u0448\u0430\u0440\u0438\",\r\n    \"cutButton\": \"\u0412\u0438\u0440\u0456\u0437\u0430\u0442\u0438 \u0448\u0430\u0440\u0438\",\r\n    \"deleteButton\": \"\u0412\u0438\u0434\u0430\u043B\u0438\u0442\u0438 \u0448\u0430\u0440\u0438\",\r\n    \"drawCircleMarkerButton\": \"\u041C\u0430\u043B\u044E\u0432\u0430\u0442\u0438 \u043A\u0440\u0443\u0433\u043E\u0432\u0438\u0439 \u043C\u0430\u0440\u043A\u0435\u0440\",\r\n    \"snappingButton\": \"\u041F\u0440\u0438\u0432\u2019\u044F\u0437\u0430\u0442\u0438 \u043F\u0435\u0440\u0435\u0442\u044F\u0433\u043D\u0443\u0442\u0438\u0439 \u043C\u0430\u0440\u043A\u0435\u0440 \u0434\u043E \u0456\u043D\u0448\u0438\u0445 \u0448\u0430\u0440\u0456\u0432 \u0442\u0430 \u0432\u0435\u0440\u0448\u0438\u043D\",\r\n    \"pinningButton\": \"\u0417\u0432'\u044F\u0437\u0430\u0442\u0438 \u0441\u043F\u0456\u043B\u044C\u043D\u0456 \u0432\u0435\u0440\u0448\u0438\u043D\u0438 \u0440\u0430\u0437\u043E\u043C\",\r\n    \"rotateButton\": \"\u041F\u043E\u0432\u0435\u0440\u043D\u0443\u0442\u0438 \u0448\u0430\u0440\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"\u0130\u015Faret\u00E7i yerle\u015Ftirmek i\u00E7in t\u0131klay\u0131n\",\r\n    \"firstVertex\": \"\u0130lk tepe noktas\u0131n\u0131 yerle\u015Ftirmek i\u00E7in t\u0131klay\u0131n\",\r\n    \"continueLine\": \"\u00C7izime devam etmek i\u00E7in t\u0131klay\u0131n\",\r\n    \"finishLine\": \"Bitirmek i\u00E7in mevcut herhangi bir i\u015Faret\u00E7iyi t\u0131klay\u0131n\",\r\n    \"finishPoly\": \"Bitirmek i\u00E7in ilk i\u015Faret\u00E7iyi t\u0131klay\u0131n\",\r\n    \"finishRect\": \"Bitirmek i\u00E7in t\u0131klay\u0131n\",\r\n    \"startCircle\": \"Daire merkezine yerle\u015Ftirmek i\u00E7in t\u0131klay\u0131n\",\r\n    \"finishCircle\": \"Daireyi bitirmek i\u00E7in t\u0131klay\u0131n\",\r\n    \"placeCircleMarker\": \"Daire i\u015Faret\u00E7isi yerle\u015Ftirmek i\u00E7in t\u0131klay\u0131n\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Bitir\",\r\n    \"cancel\": \"\u0130ptal\",\r\n    \"removeLastVertex\": \"Son k\u00F6\u015Feyi kald\u0131r\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"\u00C7izim \u0130\u015Faret\u00E7isi\",\r\n    \"drawPolyButton\": \"\u00C7okgenler \u00E7iz\",\r\n    \"drawLineButton\": \"\u00C7oklu \u00E7izgi \u00E7iz\",\r\n    \"drawCircleButton\": \"\u00C7ember \u00E7iz\",\r\n    \"drawRectButton\": \"Dikd\u00F6rtgen \u00E7iz\",\r\n    \"editButton\": \"Katmanlar\u0131 d\u00FCzenle\",\r\n    \"dragButton\": \"Katmanlar\u0131 s\u00FCr\u00FCkle\",\r\n    \"cutButton\": \"Katmanlar\u0131 kes\",\r\n    \"deleteButton\": \"Katmanlar\u0131 kald\u0131r\",\r\n    \"drawCircleMarkerButton\": \"Daire i\u015Faret\u00E7isi \u00E7iz\",\r\n    \"snappingButton\": \"S\u00FCr\u00FCklenen i\u015Faret\u00E7iyi di\u011Fer katmanlara ve k\u00F6\u015Felere yap\u0131\u015Ft\u0131r\",\r\n    \"pinningButton\": \"Payla\u015F\u0131lan k\u00F6\u015Feleri birbirine sabitle\",\r\n    \"rotateButton\": \"Katman\u0131 d\u00F6nd\u00FCr\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Kliknut\u00EDm vytvo\u0159\u00EDte zna\u010Dku\",\r\n    \"firstVertex\": \"Kliknut\u00EDm vytvo\u0159\u00EDte prvn\u00ED objekt\",\r\n    \"continueLine\": \"Kliknut\u00EDm pokra\u010Dujte v kreslen\u00ED\",\r\n    \"finishLine\": \"Kliknut\u00ED na libovolnou existuj\u00EDc\u00ED zna\u010Dku pro dokon\u010Den\u00ED\",\r\n    \"finishPoly\": \"Vyberte prvn\u00ED bod pro dokon\u010Den\u00ED\",\r\n    \"finishRect\": \"Klikn\u011Bte pro dokon\u010Den\u00ED\",\r\n    \"startCircle\": \"Kliknut\u00EDm p\u0159idejte st\u0159ed kruhu\",\r\n    \"finishCircle\": \"\u041D\u0430\u0436\u043C\u0438\u0442\u0435, \u0447\u0442\u043E\u0431\u044B \u0437\u0430\u0434\u0430\u0442\u044C \u0440\u0430\u0434\u0438\u0443\u0441\",\r\n    \"placeCircleMarker\": \"Kliknut\u00EDm nastavte polom\u011Br\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Dokon\u010Dit\",\r\n    \"cancel\": \"Zru\u0161it\",\r\n    \"removeLastVertex\": \"Zru\u0161it posledn\u00ED akci\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"P\u0159idat zna\u010Dku\",\r\n    \"drawPolyButton\": \"Nakreslit polygon\",\r\n    \"drawLineButton\": \"Nakreslit k\u0159ivku\",\r\n    \"drawCircleButton\": \"Nakreslit kruh\",\r\n    \"drawRectButton\": \"Nakreslit obd\u00E9ln\u00EDk\",\r\n    \"editButton\": \"Upravit vrstvu\",\r\n    \"dragButton\": \"P\u0159eneste vrstvu\",\r\n    \"cutButton\": \"Vyjmout vrstvu\",\r\n    \"deleteButton\": \"Smazat vrstvu\",\r\n    \"drawCircleMarkerButton\": \"P\u0159idat kruhovou zna\u010Dku\",\r\n    \"snappingButton\": \"Nav\u00E1zat ta\u017Enou zna\u010Dku k dal\u0161\u00EDm vrstv\u00E1m a vrchol\u016Fm\",\r\n    \"pinningButton\": \"Spojit spole\u010Dn\u00E9 body dohromady\",\r\n    \"rotateButton\": \"Oto\u010Dte vrstvu\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u30DE\u30FC\u30AB\u30FC\u3092\u914D\u7F6E\",\r\n    \"firstVertex\": \"\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u6700\u521D\u306E\u9802\u70B9\u3092\u914D\u7F6E\",\r\n    \"continueLine\": \"\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u63CF\u753B\u3092\u7D9A\u3051\u308B\",\r\n    \"finishLine\": \"\u4EFB\u610F\u306E\u30DE\u30FC\u30AB\u30FC\u3092\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u7D42\u4E86\",\r\n    \"finishPoly\": \"\u6700\u521D\u306E\u30DE\u30FC\u30AB\u30FC\u3092\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u7D42\u4E86\",\r\n    \"finishRect\": \"\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u7D42\u4E86\",\r\n    \"startCircle\": \"\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u5186\u306E\u4E2D\u5FC3\u3092\u914D\u7F6E\",\r\n    \"finishCircle\": \"\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u5186\u306E\u63CF\u753B\u3092\u7D42\u4E86\",\r\n    \"placeCircleMarker\": \"\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u5186\u30DE\u30FC\u30AB\u30FC\u3092\u914D\u7F6E\",\r\n    \"placeText\": \"\u30AF\u30EA\u30C3\u30AF\u3057\u3066\u30C6\u30AD\u30B9\u30C8\u3092\u914D\u7F6E\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"\u7D42\u4E86\",\r\n    \"cancel\": \"\u30AD\u30E3\u30F3\u30BB\u30EB\",\r\n    \"removeLastVertex\": \"\u6700\u5F8C\u306E\u9802\u70B9\u3092\u524A\u9664\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"\u30DE\u30FC\u30AB\u30FC\u3092\u63CF\u753B\",\r\n    \"drawPolyButton\": \"\u30DD\u30EA\u30B4\u30F3\u3092\u63CF\u753B\",\r\n    \"drawLineButton\": \"\u6298\u308C\u7DDA\u3092\u63CF\u753B\",\r\n    \"drawCircleButton\": \"\u5186\u3092\u63CF\u753B\",\r\n    \"drawRectButton\": \"\u77E9\u5F62\u3092\u63CF\u753B\",\r\n    \"editButton\": \"\u30EC\u30A4\u30E4\u30FC\u3092\u7DE8\u96C6\",\r\n    \"dragButton\": \"\u30EC\u30A4\u30E4\u30FC\u3092\u30C9\u30E9\u30C3\u30B0\",\r\n    \"cutButton\": \"\u30EC\u30A4\u30E4\u30FC\u3092\u5207\u308A\u53D6\u308A\",\r\n    \"deleteButton\": \"\u30EC\u30A4\u30E4\u30FC\u3092\u524A\u9664\",\r\n    \"drawCircleMarkerButton\": \"\u5186\u30DE\u30FC\u30AB\u30FC\u3092\u63CF\u753B\",\r\n    \"snappingButton\": \"\u30C9\u30E9\u30C3\u30B0\u3057\u305F\u30DE\u30FC\u30AB\u30FC\u3092\u4ED6\u306E\u30EC\u30A4\u30E4\u30FC\u3084\u9802\u70B9\u306B\u30B9\u30CA\u30C3\u30D7\u3059\u308B\",\r\n    \"pinningButton\": \"\u5171\u6709\u3059\u308B\u9802\u70B9\u3092\u540C\u6642\u306B\u52D5\u304B\u3059\",\r\n    \"rotateButton\": \"\u30EC\u30A4\u30E4\u30FC\u3092\u56DE\u8EE2\",\r\n    \"drawTextButton\": \"\u30C6\u30AD\u30B9\u30C8\u3092\u63CF\u753B\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"Klikkaa asettaaksesi merkin\",\r\n    \"firstVertex\": \"Klikkaa asettaakseni ensimm\u00E4isen osuuden\",\r\n    \"continueLine\": \"Klikkaa jatkaaksesi piirt\u00E4mist\u00E4\",\r\n    \"finishLine\": \"Klikkaa olemassa olevaa merkki\u00E4 lopettaaksesi\",\r\n    \"finishPoly\": \"Klikkaa ensimm\u00E4ist\u00E4 merkki\u00E4 lopettaaksesi\",\r\n    \"finishRect\": \"Klikkaa lopettaaksesi\",\r\n    \"startCircle\": \"Klikkaa asettaaksesi ympyr\u00E4n keskipisteen\",\r\n    \"finishCircle\": \"Klikkaa lopettaaksesi ympyr\u00E4n\",\r\n    \"placeCircleMarker\": \"Klikkaa asettaaksesi ympyr\u00E4merkin\",\r\n    \"placeText\": \"Klikkaa asettaaksesi tekstin\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"Valmis\",\r\n    \"cancel\": \"Peruuta\",\r\n    \"removeLastVertex\": \"Poista viimeinen osuus\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"Piirr\u00E4 merkkej\u00E4\",\r\n    \"drawPolyButton\": \"Piirr\u00E4 monikulmioita\",\r\n    \"drawLineButton\": \"Piirr\u00E4 viivoja\",\r\n    \"drawCircleButton\": \"Piirr\u00E4 ympyr\u00E4\",\r\n    \"drawRectButton\": \"Piirr\u00E4 neliskulmioita\",\r\n    \"editButton\": \"Muokkaa\",\r\n    \"dragButton\": \"Siirr\u00E4\",\r\n    \"cutButton\": \"Leikkaa\",\r\n    \"deleteButton\": \"Poista\",\r\n    \"drawCircleMarkerButton\": \"Piirr\u00E4 ympyr\u00E4merkki\",\r\n    \"snappingButton\": \"Kiinnit\u00E4 siirrett\u00E4v\u00E4 merkki toisiin muotoihin\",\r\n    \"pinningButton\": \"Kiinnit\u00E4 jaetut muodot yhteen\",\r\n    \"rotateButton\": \"K\u00E4\u00E4nn\u00E4\",\r\n    \"drawTextButton\": \"Piirr\u00E4 teksti\u00E4\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"\uB9C8\uCEE4 \uC704\uCE58\uB97C \uD074\uB9AD\uD558\uC138\uC694\",\r\n    \"firstVertex\": \"\uCCAB\uBC88\uC9F8 \uAF2D\uC9C0\uC810 \uC704\uCE58\uC744 \uD074\uB9AD\uD558\uC138\uC694\",\r\n    \"continueLine\": \"\uACC4\uC18D \uADF8\uB9AC\uB824\uBA74 \uD074\uB9AD\uD558\uC138\uC694\",\r\n    \"finishLine\": \"\uB05D\uB0B4\uB824\uBA74 \uAE30\uC874 \uB9C8\uCEE4\uB97C \uD074\uB9AD\uD558\uC138\uC694\",\r\n    \"finishPoly\": \"\uB05D\uB0B4\uB824\uBA74 \uCC98\uC74C \uB9C8\uCEE4\uB97C \uD074\uB9AD\uD558\uC138\uC694\",\r\n    \"finishRect\": \"\uB05D\uB0B4\uB824\uBA74 \uD074\uB9AD\uD558\uC138\uC694\",\r\n    \"startCircle\": \"\uC6D0\uC758 \uC911\uC2EC\uC774 \uB420 \uC704\uCE58\uB97C \uD074\uB9AD\uD558\uC138\uC694\",\r\n    \"finishCircle\": \"\uC6D0\uC744 \uB05D\uB0B4\uB824\uBA74 \uD074\uB9AD\uD558\uC138\uC694\",\r\n    \"placeCircleMarker\": \"\uC6D0 \uB9C8\uCEE4 \uC704\uCE58\uB97C \uD074\uB9AD\uD558\uC138\uC694\",\r\n    \"placeText\": \"\uD14D\uC2A4\uD2B8 \uC704\uCE58\uB97C \uD074\uB9AD\uD558\uC138\uC694\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"\uB05D\uB0B4\uAE30\",\r\n    \"cancel\": \"\uCDE8\uC18C\",\r\n    \"removeLastVertex\": \"\uB9C8\uC9C0\uB9C9 \uAF2D\uC9C0\uC810 \uC81C\uAC70\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"\uB9C8\uCEE4 \uADF8\uB9AC\uAE30\",\r\n    \"drawPolyButton\": \"\uB2E4\uAC01\uD615 \uADF8\uB9AC\uAE30\",\r\n    \"drawLineButton\": \"\uB2E4\uAC01\uC120 \uADF8\uB9AC\uAE30\",\r\n    \"drawCircleButton\": \"\uC6D0 \uADF8\uB9AC\uAE30\",\r\n    \"drawRectButton\": \"\uC9C1\uC0AC\uAC01\uD615 \uADF8\uB9AC\uAE30\",\r\n    \"editButton\": \"\uB808\uC774\uC5B4 \uD3B8\uC9D1\uD558\uAE30\",\r\n    \"dragButton\": \"\uB808\uC774\uC5B4 \uB04C\uAE30\",\r\n    \"cutButton\": \"\uB808\uC774\uC5B4 \uC790\uB974\uAE30\",\r\n    \"deleteButton\": \"\uB808\uC774\uC5B4 \uC81C\uAC70\uD558\uAE30\",\r\n    \"drawCircleMarkerButton\": \"\uC6D0 \uB9C8\uCEE4 \uADF8\uB9AC\uAE30\",\r\n    \"snappingButton\": \"\uC7A1\uC544\uB048 \uB9C8\uCEE4\uB97C \uB2E4\uB978 \uB808\uC774\uC5B4 \uBC0F \uAF2D\uC9C0\uC810\uC5D0 \uB4E4\uB7EC\uBD99\uAC8C \uD558\uAE30\",\r\n    \"pinningButton\": \"\uACF5\uC720 \uAF2D\uC9C0\uC810\uC744 \uD568\uAED8 \uCC0D\uAE30\",\r\n    \"rotateButton\": \"\uB808\uC774\uC5B4 \uD68C\uC804\uD558\uAE30\",\r\n    \"drawTextButton\": \"\uD14D\uC2A4\uD2B8 \uADF8\uB9AC\uAE30\"\r\n  }\r\n}\r\n", "{\r\n  \"tooltips\": {\r\n    \"placeMarker\": \"\u041C\u0430\u0440\u043A\u0435\u0440\u0434\u0438 \u0436\u0430\u0439\u0433\u0430\u0448\u0442\u044B\u0440\u0443\u0443 \u04AF\u0447\u04AF\u043D \u0431\u0430\u0441\u044B\u04A3\u044B\u0437\",\r\n    \"firstVertex\": \"\u0411\u0438\u0440\u0438\u043D\u0447\u0438 \u0447\u043E\u043A\u0443\u043D\u0443 \u0436\u0430\u0439\u0433\u0430\u0448\u0442\u044B\u0440\u0443\u0443\u043D\u0443 \u04AF\u0447\u04AF\u043D \u0431\u0430\u0441\u044B\u04A3\u044B\u0437\",\r\n    \"continueLine\": \"\u0421\u04AF\u0440\u04E9\u0442 \u0442\u0430\u0440\u0442\u0443\u0443\u043D\u0443 \u0443\u043B\u0430\u043D\u0442\u0443\u0443 \u04AF\u0447\u04AF\u043D \u0431\u0430\u0441\u044B\u04A3\u044B\u0437\",\r\n    \"finishLine\": \"\u0410\u044F\u043A\u0442\u043E\u043E \u04AF\u0447\u04AF\u043D \u0443\u0447\u0443\u0440\u0434\u0430\u0433\u044B \u043C\u0430\u0440\u043A\u0435\u0440\u0434\u0438 \u0431\u0430\u0441\u044B\u04A3\u044B\u0437\",\r\n    \"finishPoly\": \"\u0411\u04AF\u0442\u04AF\u0440\u04AF\u04AF \u04AF\u0447\u04AF\u043D \u0431\u0438\u0440\u0438\u043D\u0447\u0438 \u043C\u0430\u0440\u043A\u0435\u0440\u0434\u0438 \u0431\u0430\u0441\u044B\u04A3\u044B\u0437\",\r\n    \"finishRect\": \"\u0411\u04AF\u0442\u04AF\u0440\u04AF\u04AF \u04AF\u0447\u04AF\u043D \u0431\u0430\u0441\u044B\u04A3\u044B\u0437\",\r\n    \"startCircle\": \"\u0410\u0439\u043B\u0430\u043D\u0430\u043D\u044B\u043D \u0431\u043E\u0440\u0431\u043E\u0440\u0443\u043D \u0436\u0430\u0439\u0433\u0430\u0448\u0442\u044B\u0440\u0443\u0443\u043D\u0443 \u04AF\u0447\u04AF\u043D \u0431\u0430\u0441\u044B\u04A3\u044B\u0437\",\r\n    \"finishCircle\": \"\u0410\u0439\u043B\u0430\u043D\u0430\u043D\u044B \u0431\u04AF\u0442\u04AF\u0440\u04AF\u04AF \u04AF\u0447\u04AF\u043D \u0431\u0430\u0441\u044B\u04A3\u044B\u0437\",\r\n    \"placeCircleMarker\": \"\u0422\u0435\u0433\u0435\u0440\u0435\u043A \u043C\u0430\u0440\u043A\u0435\u0440\u0434\u0438 \u0436\u0430\u0439\u0433\u0430\u0448\u0442\u044B\u0440\u0443\u0443 \u04AF\u0447\u04AF\u043D \u0431\u0430\u0441\u044B\u04A3\u044B\u0437\",\r\n    \"placeText\": \"\u0422\u0435\u043A\u0441\u0442\u0442\u0438 \u0436\u0430\u0439\u0433\u0430\u0448\u0442\u044B\u0440\u0443\u0443 \u04AF\u0447\u04AF\u043D \u0431\u0430\u0441\u044B\u04A3\u044B\u0437\"\r\n  },\r\n  \"actions\": {\r\n    \"finish\": \"\u0410\u044F\u0433\u044B\",\r\n    \"cancel\": \"\u0416\u043E\u043A \u043A\u044B\u043B\u0443\u0443\",\r\n    \"removeLastVertex\": \"\u0410\u043A\u044B\u0440\u043A\u044B \u0447\u043E\u043A\u0443\u043D\u0443 \u04E9\u0447\u04AF\u0440\u04AF\u04AF\"\r\n  },\r\n  \"buttonTitles\": {\r\n    \"drawMarkerButton\": \"\u041C\u0430\u0440\u043A\u0435\u0440\u0434\u0438 \u0447\u0438\u0437\u0443\u0443\",\r\n    \"drawPolyButton\": \"\u041F\u043E\u043B\u0438\u0433\u043E\u043D \u0447\u0438\u0437\u0443\u0443\",\r\n    \"drawLineButton\": \"\u041F\u043E\u043B\u0438\u043B\u0438\u043D\u0438\u044F \u0447\u0438\u0437\u0443\u0443\",\r\n    \"drawCircleButton\": \"\u0414\u0430\u0439\u044B\u043D\u0434\u044B \u0447\u0438\u0437\u0443\u0443\",\r\n    \"drawRectButton\": \"\u041F\u0440\u044F\u043C\u043E\u0443\u0433\u043E\u043B\u044C\u043D\u0438\u043A \u0447\u0438\u0437\u0443\u0443\",\r\n    \"editButton\": \"\u0421\u043B\u043E\u043E\u043F\u0442\u0443 \u0442\u04AF\u0437\u04E9\u0442\u04AF\u04AF\",\r\n    \"dragButton\": \"\u0421\u043B\u043E\u043E\u043F\u0442\u0443 \u043A\u0430\u0440\u0430\u043F \u0441\u04AF\u0439\u043B\u04E9\u04AF\",\r\n    \"cutButton\": \"\u0421\u043B\u043E\u043E\u043F\u0442\u0443\u043D \u0431\u0430\u0448\u044B\u043D \u043A\u0435\u0441\u04AF\u04AF\",\r\n    \"deleteButton\": \"\u0421\u043B\u043E\u043E\u043F\u0442\u0443\u043D \u04E9\u0447\u04AF\u0440\u04AF\u04AF\",\r\n    \"drawCircleMarkerButton\": \"\u0414\u0430\u0439\u044B\u043D\u0434\u044B \u043C\u0430\u0440\u043A\u0435\u0440\u0434\u0438 \u0447\u0438\u0437\u0443\u0443\",\r\n    \"snappingButton\": \"\u0411\u0430\u0448\u043A\u0430 \u0441\u043B\u043E\u043E\u043F\u0442\u043E\u0440\u0434\u0443\u043D \u0436\u0430\u043D\u0430 \u0432\u0435\u0440\u0442\u0435\u043A\u0441\u0442\u0435\u0440\u0434\u0438\u043D \u0430\u0440\u0430\u0441\u044B\u043D\u0430 \u0447\u0435\u043A\u0438\u043B\u0434\u04E9\u04E9\",\r\n    \"pinningButton\": \"\u0411\u04E9\u043B\u04AF\u0448\u043A\u04E9\u043D \u0432\u0435\u0440\u0442\u0435\u043A\u0441\u0442\u0435\u0440\u0434\u0438 \u0431\u0438\u0440\u0433\u0435 \u0442\u0443\u0442\u0443\u0448\u0442\u0443\u0440\u0443\u0443\",\r\n    \"rotateButton\": \"\u0421\u043B\u043E\u043E\u043F\u0442\u0443\u043D \u04E9\u0437\u0433\u04E9\u0440\u0442\u04AF\u04AF\",\r\n    \"drawTextButton\": \"\u0422\u0435\u043A\u0441\u0442 \u0447\u0438\u0437\u0443\u0443\",\r\n    \"scaleButton\": \"\u0421\u043B\u043E\u043E\u043F\u0442\u0443\u043D \u04E9\u043B\u0447\u04E9\u043C\u04AF\u043D \u04E9\u0437\u0433\u04E9\u0440\u0442\u04AF\u04AF\",\r\n    \"autoTracingButton\": \"\u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0442\u044B\u043A \u0442\u0438\u0437\u043C\u0435\u0433\u0438 \u0447\u0438\u0437\u0443\u0443\"\r\n  },\r\n  \"measurements\": {\r\n    \"totalLength\": \"\u0423\u0437\u0443\u043D\u0434\u0443\u043A\",\r\n    \"segmentLength\": \"\u0421\u0435\u0433\u043C\u0435\u043D\u0442 \u0443\u0437\u0443\u043D\u0434\u0443\u0433\u0443\",\r\n    \"area\": \"\u0410\u0439\u043C\u0430\u043A\",\r\n    \"radius\": \"\u0420\u0430\u0434\u0438\u0443\u0441\",\r\n    \"perimeter\": \"\u041F\u0435\u0440\u0438\u043C\u0435\u0442\u0440\",\r\n    \"height\": \"\u0414\u0438\u0430\u043C\u0435\u0442\u0440\",\r\n    \"width\": \"\u041A\u0435\u043D\u0447\u0438\u043B\u0438\u043A\",\r\n    \"coordinates\": \"\u041A\u043E\u043E\u0440\u0434\u0438\u043D\u0430\u0442\u0442\u0430\u0440\",\r\n    \"coordinatesMarker\": \"\u041C\u0430\u0440\u043A\u0435\u0440\u0434\u0438\u043D \u043A\u043E\u043E\u0440\u0434\u0438\u043D\u0430\u0442\u0442\u0430\u0440\u044B\"\r\n  }\r\n}\r\n", "import en from './en.json';\r\nimport de from './de.json';\r\nimport it from './it.json';\r\nimport id from './id.json';\r\nimport ro from './ro.json';\r\nimport ru from './ru.json';\r\nimport es from './es.json';\r\nimport nl from './nl.json';\r\nimport fr from './fr.json';\r\nimport zh from './zh.json';\r\n// eslint-disable-next-line camelcase\r\nimport zh_tw from './zh_tw.json';\r\n// eslint-disable-next-line camelcase\r\nimport pt_br from './pt_br.json';\r\n// eslint-disable-next-line camelcase\r\nimport pt_pt from './pt_pt.json';\r\nimport pl from './pl.json';\r\nimport sv from './sv.json';\r\nimport el from './el.json';\r\nimport hu from './hu.json';\r\nimport da from './da.json';\r\nimport no from './no.json';\r\nimport fa from './fa.json';\r\nimport ua from './ua.json';\r\nimport tr from './tr.json';\r\nimport cz from './cz.json';\r\nimport ja from './ja.json';\r\nimport fi from './fi.json';\r\nimport ko from './ko.json';\r\nimport ky from './ky.json';\r\n\r\n// eslint-disable-next-line camelcase\r\nconst pt = pt_pt;\r\n\r\nexport default {\r\n  en,\r\n  de,\r\n  it,\r\n  id,\r\n  ro,\r\n  ru,\r\n  es,\r\n  nl,\r\n  fr,\r\n  pt,\r\n  // eslint-disable-next-line camelcase\r\n  pt_br,\r\n  // eslint-disable-next-line camelcase\r\n  pt_pt,\r\n  zh,\r\n  // eslint-disable-next-line camelcase\r\n  zh_tw,\r\n  pl,\r\n  sv,\r\n  el,\r\n  hu,\r\n  da,\r\n  no,\r\n  fa,\r\n  ua,\r\n  tr,\r\n  cz,\r\n  ja,\r\n  fi,\r\n  ko,\r\n  ky,\r\n};\r\n", "// this mixin adds a global edit mode to the map\r\nconst GlobalEditMode = {\r\n  _globalEditModeEnabled: false,\r\n  enableGlobalEditMode(o) {\r\n    const options = {\r\n      ...o,\r\n    };\r\n    // set status\r\n    this._globalEditModeEnabled = true;\r\n\r\n    // Set toolbar button to currect status\r\n    this.Toolbar.toggleButton('editMode', this.globalEditModeEnabled());\r\n\r\n    // find all layers handled by leaflet-geoman\r\n    const layers = L.PM.Utils.findLayers(this.map);\r\n\r\n    // enable all layers\r\n    layers.forEach((layer) => {\r\n      if (this._isRelevantForEdit(layer)) {\r\n        layer.pm.enable(options);\r\n      }\r\n    });\r\n\r\n    if (!this.throttledReInitEdit) {\r\n      this.throttledReInitEdit = L.Util.throttle(\r\n        this.handleLayerAdditionInGlobalEditMode,\r\n        100,\r\n        this\r\n      );\r\n    }\r\n\r\n    // save the added layers into the _addedLayersEdit array, to read it later out\r\n    this._addedLayersEdit = {};\r\n    this.map.on('layeradd', this._layerAddedEdit, this);\r\n    // handle layers that are added while in edit mode\r\n    this.map.on('layeradd', this.throttledReInitEdit, this);\r\n\r\n    // fire event\r\n    this._fireGlobalEditModeToggled(true);\r\n  },\r\n  disableGlobalEditMode() {\r\n    // set status\r\n    this._globalEditModeEnabled = false;\r\n\r\n    // find all layers handles by leaflet-geoman\r\n    const layers = L.PM.Utils.findLayers(this.map);\r\n\r\n    // disable all layers\r\n    layers.forEach((layer) => {\r\n      layer.pm.disable();\r\n    });\r\n\r\n    // cleanup layer off event\r\n    this.map.off('layeradd', this._layerAddedEdit, this);\r\n    this.map.off('layeradd', this.throttledReInitEdit, this);\r\n\r\n    // Set toolbar button to currect status\r\n    this.Toolbar.toggleButton('editMode', this.globalEditModeEnabled());\r\n\r\n    // fire event\r\n    this._fireGlobalEditModeToggled(false);\r\n  },\r\n  // TODO: Remove in the next major release\r\n  globalEditEnabled() {\r\n    return this.globalEditModeEnabled();\r\n  },\r\n  globalEditModeEnabled() {\r\n    return this._globalEditModeEnabled;\r\n  },\r\n  // TODO: this should maybe removed, it will overwrite explicit options on the layers\r\n  toggleGlobalEditMode(options = this.globalOptions) {\r\n    if (this.globalEditModeEnabled()) {\r\n      // disable\r\n      this.disableGlobalEditMode();\r\n    } else {\r\n      // enable\r\n      this.enableGlobalEditMode(options);\r\n    }\r\n  },\r\n  handleLayerAdditionInGlobalEditMode() {\r\n    const layers = this._addedLayersEdit;\r\n    this._addedLayersEdit = {};\r\n    if (this.globalEditModeEnabled()) {\r\n      for (const id in layers) {\r\n        const layer = layers[id];\r\n        // when global edit mode is enabled and a layer is added to the map,\r\n        // enable edit for that layer if it's relevant\r\n\r\n        if (this._isRelevantForEdit(layer)) {\r\n          layer.pm.enable({ ...this.globalOptions });\r\n        }\r\n      }\r\n    }\r\n  },\r\n  _layerAddedEdit({ layer }) {\r\n    this._addedLayersEdit[L.stamp(layer)] = layer;\r\n  },\r\n  _isRelevantForEdit(layer) {\r\n    return (\r\n      layer.pm &&\r\n      !(layer instanceof L.LayerGroup) &&\r\n      ((!L.PM.optIn && !layer.options.pmIgnore) || // if optIn is not set / true and pmIgnore is not set / true (default)\r\n        (L.PM.optIn && layer.options.pmIgnore === false)) && // if optIn is true and pmIgnore is false\r\n      !layer._pmTempLayer &&\r\n      layer.pm.options.allowEditing\r\n    );\r\n  },\r\n};\r\n\r\nexport default GlobalEditMode;\r\n", "const GlobalDragMode = {\r\n  _globalDragModeEnabled: false,\r\n  enableGlobalDragMode() {\r\n    const layers = L.PM.Utils.findLayers(this.map);\r\n\r\n    this._globalDragModeEnabled = true;\r\n    this._addedLayersDrag = {};\r\n\r\n    layers.forEach((layer) => {\r\n      if (this._isRelevantForDrag(layer)) {\r\n        layer.pm.enableLayerDrag();\r\n      }\r\n    });\r\n\r\n    if (!this.throttledReInitDrag) {\r\n      this.throttledReInitDrag = L.Util.throttle(\r\n        this.reinitGlobalDragMode,\r\n        100,\r\n        this\r\n      );\r\n    }\r\n\r\n    // add map handler\r\n    this.map.on('layeradd', this._layerAddedDrag, this);\r\n    this.map.on('layeradd', this.throttledReInitDrag, this);\r\n\r\n    // toogle the button in the toolbar if this is called programatically\r\n    this.Toolbar.toggleButton('dragMode', this.globalDragModeEnabled());\r\n\r\n    this._fireGlobalDragModeToggled(true);\r\n  },\r\n  disableGlobalDragMode() {\r\n    const layers = L.PM.Utils.findLayers(this.map);\r\n\r\n    this._globalDragModeEnabled = false;\r\n\r\n    layers.forEach((layer) => {\r\n      layer.pm.disableLayerDrag();\r\n    });\r\n\r\n    // remove map handler\r\n    this.map.off('layeradd', this._layerAddedDrag, this);\r\n    this.map.off('layeradd', this.throttledReInitDrag, this);\r\n\r\n    // toogle the button in the toolbar if this is called programatically\r\n    this.Toolbar.toggleButton('dragMode', this.globalDragModeEnabled());\r\n\r\n    this._fireGlobalDragModeToggled(false);\r\n  },\r\n  globalDragModeEnabled() {\r\n    return !!this._globalDragModeEnabled;\r\n  },\r\n  toggleGlobalDragMode() {\r\n    if (this.globalDragModeEnabled()) {\r\n      this.disableGlobalDragMode();\r\n    } else {\r\n      this.enableGlobalDragMode();\r\n    }\r\n  },\r\n  reinitGlobalDragMode() {\r\n    const layers = this._addedLayersDrag;\r\n    this._addedLayersDrag = {};\r\n    if (this.globalDragModeEnabled()) {\r\n      for (const id in layers) {\r\n        const layer = layers[id];\r\n\r\n        if (this._isRelevantForDrag(layer)) {\r\n          layer.pm.enableLayerDrag();\r\n        }\r\n      }\r\n    }\r\n  },\r\n  _layerAddedDrag({ layer }) {\r\n    this._addedLayersDrag[L.stamp(layer)] = layer;\r\n  },\r\n  _isRelevantForDrag(layer) {\r\n    return (\r\n      layer.pm &&\r\n      !(layer instanceof L.LayerGroup) &&\r\n      ((!L.PM.optIn && !layer.options.pmIgnore) || // if optIn is not set / true and pmIgnore is not set / true (default)\r\n        (L.PM.optIn && layer.options.pmIgnore === false)) && // if optIn is true and pmIgnore is false\r\n      !layer._pmTempLayer &&\r\n      layer.pm.options.draggable\r\n    );\r\n  },\r\n};\r\n\r\nexport default GlobalDragMode;\r\n", "const GlobalRemovalMode = {\r\n  _globalRemovalModeEnabled: false,\r\n  enableGlobalRemovalMode() {\r\n    this._globalRemovalModeEnabled = true;\r\n    // handle existing layers\r\n    this.map.eachLayer((layer) => {\r\n      if (this._isRelevantForRemoval(layer)) {\r\n        if (layer.pm.enabled()) {\r\n          layer.pm.disable();\r\n        }\r\n        layer.on('click', this.removeLayer, this);\r\n      }\r\n    });\r\n\r\n    if (!this.throttledReInitRemoval) {\r\n      this.throttledReInitRemoval = L.Util.throttle(\r\n        this.handleLayerAdditionInGlobalRemovalMode,\r\n        100,\r\n        this\r\n      );\r\n    }\r\n    // save the added layers into the _addedLayersRemoval array, to read it later out\r\n    this._addedLayersRemoval = {};\r\n    // handle layers that are added while in removal mode\r\n    this.map.on('layeradd', this._layerAddedRemoval, this);\r\n    this.map.on('layeradd', this.throttledReInitRemoval, this);\r\n\r\n    // toogle the button in the toolbar if this is called programatically\r\n    this.Toolbar.toggleButton('removalMode', this.globalRemovalModeEnabled());\r\n\r\n    this._fireGlobalRemovalModeToggled(true);\r\n  },\r\n  disableGlobalRemovalMode() {\r\n    this._globalRemovalModeEnabled = false;\r\n    this.map.eachLayer((layer) => {\r\n      layer.off('click', this.removeLayer, this);\r\n    });\r\n\r\n    // remove map handler\r\n    this.map.off('layeradd', this._layerAddedRemoval, this);\r\n    this.map.off('layeradd', this.throttledReInitRemoval, this);\r\n\r\n    // toogle the button in the toolbar if this is called programatically\r\n    this.Toolbar.toggleButton('removalMode', this.globalRemovalModeEnabled());\r\n\r\n    this._fireGlobalRemovalModeToggled(false);\r\n  },\r\n  // TODO: Remove in the next major release\r\n  globalRemovalEnabled() {\r\n    return this.globalRemovalModeEnabled();\r\n  },\r\n  globalRemovalModeEnabled() {\r\n    return !!this._globalRemovalModeEnabled;\r\n  },\r\n  toggleGlobalRemovalMode() {\r\n    // toggle global edit mode\r\n    if (this.globalRemovalModeEnabled()) {\r\n      this.disableGlobalRemovalMode();\r\n    } else {\r\n      this.enableGlobalRemovalMode();\r\n    }\r\n  },\r\n  removeLayer(e) {\r\n    const layer = e.target;\r\n    // only remove layer, if it's handled by leaflet-geoman,\r\n    // not a tempLayer and not currently being dragged\r\n    const removeable =\r\n      this._isRelevantForRemoval(layer) && !layer.pm.dragging();\r\n\r\n    if (removeable) {\r\n      layer.removeFrom(this.map.pm._getContainingLayer());\r\n      layer.remove();\r\n      if (layer instanceof L.LayerGroup) {\r\n        this._fireRemoveLayerGroup(layer);\r\n        this._fireRemoveLayerGroup(this.map, layer);\r\n      } else {\r\n        layer.pm._fireRemove(layer);\r\n        layer.pm._fireRemove(this.map, layer);\r\n      }\r\n    }\r\n  },\r\n  _isRelevantForRemoval(layer) {\r\n    return (\r\n      layer.pm &&\r\n      !(layer instanceof L.LayerGroup) &&\r\n      ((!L.PM.optIn && !layer.options.pmIgnore) || // if optIn is not set / true and pmIgnore is not set / true (default)\r\n        (L.PM.optIn && layer.options.pmIgnore === false)) && // if optIn is true and pmIgnore is false\r\n      !layer._pmTempLayer &&\r\n      layer.pm.options.allowRemoval\r\n    );\r\n  },\r\n  handleLayerAdditionInGlobalRemovalMode() {\r\n    const layers = this._addedLayersRemoval;\r\n    this._addedLayersRemoval = {};\r\n    if (this.globalRemovalModeEnabled()) {\r\n      for (const id in layers) {\r\n        const layer = layers[id];\r\n        if (this._isRelevantForRemoval(layer)) {\r\n          if (layer.pm.enabled()) {\r\n            layer.pm.disable();\r\n          }\r\n          layer.on('click', this.removeLayer, this);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  _layerAddedRemoval({ layer }) {\r\n    this._addedLayersRemoval[L.stamp(layer)] = layer;\r\n  },\r\n};\r\n\r\nexport default GlobalRemovalMode;\r\n", "const GlobalRotateMode = {\r\n  _globalRotateModeEnabled: false,\r\n  enableGlobalRotateMode() {\r\n    this._globalRotateModeEnabled = true;\r\n    const layers = L.PM.Utils.findLayers(this.map).filter(\r\n      (l) => l instanceof L.Polyline\r\n    );\r\n    layers.forEach((layer) => {\r\n      if (this._isRelevantForRotate(layer)) {\r\n        layer.pm.enableRotate();\r\n      }\r\n    });\r\n\r\n    if (!this.throttledReInitRotate) {\r\n      this.throttledReInitRotate = L.Util.throttle(\r\n        this.handleLayerAdditionInGlobalRotateMode,\r\n        100,\r\n        this\r\n      );\r\n    }\r\n\r\n    this._addedLayersRotate = {};\r\n    // handle layers that are added while in rotate mode\r\n    this.map.on('layeradd', this._layerAddedRotate, this);\r\n    this.map.on('layeradd', this.throttledReInitRotate, this);\r\n\r\n    // toogle the button in the toolbar if this is called programatically\r\n    this.Toolbar.toggleButton('rotateMode', this.globalRotateModeEnabled());\r\n    this._fireGlobalRotateModeToggled();\r\n  },\r\n  disableGlobalRotateMode() {\r\n    this._globalRotateModeEnabled = false;\r\n    const layers = L.PM.Utils.findLayers(this.map).filter(\r\n      (l) => l instanceof L.Polyline\r\n    );\r\n    layers.forEach((layer) => {\r\n      layer.pm.disableRotate();\r\n    });\r\n\r\n    // remove map handler\r\n    this.map.off('layeradd', this._layerAddedRotate, this);\r\n    this.map.off('layeradd', this.throttledReInitRotate, this);\r\n\r\n    // toogle the button in the toolbar if this is called programatically\r\n    this.Toolbar.toggleButton('rotateMode', this.globalRotateModeEnabled());\r\n    this._fireGlobalRotateModeToggled();\r\n  },\r\n  globalRotateModeEnabled() {\r\n    return !!this._globalRotateModeEnabled;\r\n  },\r\n  toggleGlobalRotateMode() {\r\n    if (this.globalRotateModeEnabled()) {\r\n      this.disableGlobalRotateMode();\r\n    } else {\r\n      this.enableGlobalRotateMode();\r\n    }\r\n  },\r\n  _isRelevantForRotate(layer) {\r\n    return (\r\n      layer.pm &&\r\n      layer instanceof L.Polyline &&\r\n      !(layer instanceof L.LayerGroup) &&\r\n      ((!L.PM.optIn && !layer.options.pmIgnore) || // if optIn is not set / true and pmIgnore is not set / true (default)\r\n        (L.PM.optIn && layer.options.pmIgnore === false)) && // if optIn is true and pmIgnore is false\r\n      !layer._pmTempLayer &&\r\n      layer.pm.options.allowRotation\r\n    );\r\n  },\r\n  handleLayerAdditionInGlobalRotateMode() {\r\n    const layers = this._addedLayersRotate;\r\n    this._addedLayersRotate = {};\r\n    if (this.globalRotateModeEnabled()) {\r\n      for (const id in layers) {\r\n        const layer = layers[id];\r\n        if (this._isRelevantForRemoval(layer)) {\r\n          layer.pm.enableRotate();\r\n        }\r\n      }\r\n    }\r\n  },\r\n  _layerAddedRotate({ layer }) {\r\n    this._addedLayersRotate[L.stamp(layer)] = layer;\r\n  },\r\n};\r\nexport default GlobalRotateMode;\r\n", "const merge = window.mergeLodash;\r\n\r\nconst EventMixin = {\r\n  // Draw Events\r\n  // Fired when enableDraw() is called -> draw start\r\n  _fireDrawStart(source = 'Draw', customPayload = {}) {\r\n    this.__fire(\r\n      this._map,\r\n      'pm:drawstart',\r\n      {\r\n        shape: this._shape,\r\n        workingLayer: this._layer,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when disableDraw() is called -> draw stop\r\n  _fireDrawEnd(source = 'Draw', customPayload = {}) {\r\n    this.__fire(\r\n      this._map,\r\n      'pm:drawend',\r\n      {\r\n        shape: this._shape,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when layer is created while drawing\r\n  _fireCreate(layer, source = 'Draw', customPayload = {}) {\r\n    this.__fire(\r\n      this._map,\r\n      'pm:create',\r\n      {\r\n        shape: this._shape,\r\n        marker: layer, // TODO: Deprecated\r\n        layer,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when Circle / CircleMarker center is placed\r\n  // if source == \"Draw\" then `workingLayer` is passed else `layer`\r\n  _fireCenterPlaced(source = 'Draw', customPayload = {}) {\r\n    const workingLayer = source === 'Draw' ? this._layer : undefined;\r\n    const layer = source !== 'Draw' ? this._layer : undefined;\r\n\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:centerplaced',\r\n      {\r\n        shape: this._shape,\r\n        workingLayer,\r\n        layer,\r\n        latlng: this._layer.getLatLng(),\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when layer is cutted\r\n  // TODO: is Cut \"Draw\" or \"Edit\"? The event `pm:edit` in the same scope is called as source \"Edit\"\r\n  _fireCut(\r\n    fireLayer,\r\n    layer,\r\n    originalLayer,\r\n    source = 'Draw',\r\n    customPayload = {}\r\n  ) {\r\n    this.__fire(\r\n      fireLayer,\r\n      'pm:cut',\r\n      {\r\n        shape: this._shape,\r\n        layer,\r\n        originalLayer,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n\r\n  // Edit Events\r\n  // Fired when layer is edited / changed\r\n  _fireEdit(fireLayer = this._layer, source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      fireLayer,\r\n      'pm:edit',\r\n      { layer: this._layer, shape: this.getShape() },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when layer is enabled for editing\r\n  _fireEnable(source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:enable',\r\n      { layer: this._layer, shape: this.getShape() },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when layer is disabled for editing\r\n  _fireDisable(source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:disable',\r\n      { layer: this._layer, shape: this.getShape() },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when layer is disabled and was edited / changed\r\n  _fireUpdate(source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:update',\r\n      { layer: this._layer, shape: this.getShape() },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when a vertex-marker is started dragging\r\n  // indexPath is only passed from Line / Polygon\r\n  _fireMarkerDragStart(\r\n    e,\r\n    indexPath = undefined,\r\n    source = 'Edit',\r\n    customPayload = {}\r\n  ) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:markerdragstart',\r\n      {\r\n        layer: this._layer,\r\n        markerEvent: e,\r\n        shape: this.getShape(),\r\n        indexPath,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired while dragging a vertex-marker\r\n  // indexPath is only passed from Line / Polygon\r\n  _fireMarkerDrag(\r\n    e,\r\n    indexPath = undefined,\r\n    source = 'Edit',\r\n    customPayload = {}\r\n  ) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:markerdrag',\r\n      {\r\n        layer: this._layer,\r\n        markerEvent: e,\r\n        shape: this.getShape(),\r\n        indexPath,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when a vertex-marker is stopped dragging\r\n  // indexPath and intersectionReset is only passed from Line / Polygon\r\n  _fireMarkerDragEnd(\r\n    e,\r\n    indexPath = undefined,\r\n    intersectionReset = undefined,\r\n    source = 'Edit',\r\n    customPayload = {}\r\n  ) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:markerdragend',\r\n      {\r\n        layer: this._layer,\r\n        markerEvent: e,\r\n        shape: this.getShape(),\r\n        indexPath,\r\n        intersectionReset,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when a layer is started dragging\r\n  _fireDragStart(source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:dragstart',\r\n      {\r\n        layer: this._layer,\r\n        shape: this.getShape(),\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired while dragging a layer\r\n  _fireDrag(e, source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:drag',\r\n      { ...e, shape: this.getShape() },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when a layer is stopped dragging\r\n  _fireDragEnd(source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:dragend',\r\n      {\r\n        layer: this._layer,\r\n        shape: this.getShape(),\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when layer is enabled for editing\r\n  _fireDragEnable(source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:dragenable',\r\n      { layer: this._layer, shape: this.getShape() },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when layer is disabled for editing\r\n  _fireDragDisable(source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:dragdisable',\r\n      { layer: this._layer, shape: this.getShape() },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when a layer is removed\r\n  _fireRemove(\r\n    fireLayer,\r\n    refLayer = fireLayer,\r\n    source = 'Edit',\r\n    customPayload = {}\r\n  ) {\r\n    this.__fire(\r\n      fireLayer,\r\n      'pm:remove',\r\n      { layer: refLayer, shape: this.getShape() },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when a vertex-marker is created\r\n  _fireVertexAdded(\r\n    marker,\r\n    indexPath,\r\n    latlng,\r\n    source = 'Edit',\r\n    customPayload = {}\r\n  ) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:vertexadded',\r\n      {\r\n        layer: this._layer,\r\n        workingLayer: this._layer,\r\n        marker,\r\n        indexPath,\r\n        latlng,\r\n        shape: this.getShape(),\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when a vertex-marker is removed\r\n  _fireVertexRemoved(marker, indexPath, source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:vertexremoved',\r\n      {\r\n        layer: this._layer,\r\n        marker,\r\n        indexPath,\r\n        shape: this.getShape(),\r\n        // TODO: maybe add latlng as well?\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when a vertex-marker is clicked\r\n  _fireVertexClick(e, indexPath, source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:vertexclick',\r\n      {\r\n        layer: this._layer,\r\n        markerEvent: e,\r\n        indexPath,\r\n        shape: this.getShape(),\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when a Line / Polygon has self intersection\r\n  _fireIntersect(\r\n    intersection,\r\n    fireLayer = this._layer,\r\n    source = 'Edit',\r\n    customPayload = {}\r\n  ) {\r\n    this.__fire(\r\n      fireLayer,\r\n      'pm:intersect',\r\n      {\r\n        layer: this._layer,\r\n        intersection,\r\n        shape: this.getShape(),\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when a Line / Polygon is reset because of self intersection\r\n  _fireLayerReset(e, indexPath, source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:layerreset',\r\n      {\r\n        layer: this._layer,\r\n        markerEvent: e,\r\n        indexPath,\r\n        shape: this.getShape(),\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n\r\n  // Fired coordinates of the layer changed\r\n  _fireChange(latlngs, source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:change',\r\n      {\r\n        layer: this._layer,\r\n        latlngs,\r\n        shape: this.getShape(),\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n\r\n  // Fired when text of a text layer changed\r\n  _fireTextChange(text, source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:textchange',\r\n      {\r\n        layer: this._layer,\r\n        text,\r\n        shape: this.getShape(),\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n\r\n  // Fired when text layer focused\r\n  _fireTextFocus(source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:textfocus',\r\n      {\r\n        layer: this._layer,\r\n        shape: this.getShape(),\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when text layer blurred\r\n  _fireTextBlur(source = 'Edit', customPayload = {}) {\r\n    this.__fire(\r\n      this._layer,\r\n      'pm:textblur',\r\n      {\r\n        layer: this._layer,\r\n        shape: this.getShape(),\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n\r\n  // Snapping Events\r\n  // Fired during a marker move/drag and other layers are existing\r\n  _fireSnapDrag(fireLayer, eventInfo, source = 'Snapping', customPayload = {}) {\r\n    this.__fire(fireLayer, 'pm:snapdrag', eventInfo, source, customPayload);\r\n  },\r\n  // Fired when a vertex is snapped\r\n  _fireSnap(fireLayer, eventInfo, source = 'Snapping', customPayload = {}) {\r\n    this.__fire(fireLayer, 'pm:snap', eventInfo, source, customPayload);\r\n  },\r\n  // Fired when a vertex is unsnapped\r\n  _fireUnsnap(fireLayer, eventInfo, source = 'Snapping', customPayload = {}) {\r\n    this.__fire(fireLayer, 'pm:unsnap', eventInfo, source, customPayload);\r\n  },\r\n\r\n  // Rotation Events\r\n  // Fired when rotation is enabled\r\n  _fireRotationEnable(\r\n    fireLayer,\r\n    helpLayer,\r\n    source = 'Rotation',\r\n    customPayload = {}\r\n  ) {\r\n    this.__fire(\r\n      fireLayer,\r\n      'pm:rotateenable',\r\n      {\r\n        layer: this._layer,\r\n        helpLayer: this._rotatePoly,\r\n        shape: this.getShape(),\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when rotation is disabled\r\n  _fireRotationDisable(fireLayer, source = 'Rotation', customPayload = {}) {\r\n    this.__fire(\r\n      fireLayer,\r\n      'pm:rotatedisable',\r\n      {\r\n        layer: this._layer,\r\n        shape: this.getShape(),\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when rotation starts\r\n  _fireRotationStart(\r\n    fireLayer,\r\n    originLatLngs,\r\n    source = 'Rotation',\r\n    customPayload = {}\r\n  ) {\r\n    this.__fire(\r\n      fireLayer,\r\n      'pm:rotatestart',\r\n      {\r\n        layer: this._rotationLayer,\r\n        helpLayer: this._layer,\r\n        startAngle: this._startAngle,\r\n        originLatLngs,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired while rotation\r\n  _fireRotation(\r\n    fireLayer,\r\n    angleDiff,\r\n    oldLatLngs,\r\n    rotationLayer = this._rotationLayer,\r\n    source = 'Rotation',\r\n    customPayload = {}\r\n  ) {\r\n    this.__fire(\r\n      fireLayer,\r\n      'pm:rotate',\r\n      {\r\n        layer: rotationLayer,\r\n        helpLayer: this._layer,\r\n        startAngle: this._startAngle,\r\n        angle: rotationLayer.pm.getAngle(),\r\n        angleDiff,\r\n        oldLatLngs,\r\n        newLatLngs: rotationLayer.getLatLngs(),\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when rotation ends\r\n  _fireRotationEnd(\r\n    fireLayer,\r\n    startAngle,\r\n    originLatLngs,\r\n    source = 'Rotation',\r\n    customPayload = {}\r\n  ) {\r\n    this.__fire(\r\n      fireLayer,\r\n      'pm:rotateend',\r\n      {\r\n        layer: this._rotationLayer,\r\n        helpLayer: this._layer,\r\n        startAngle,\r\n        angle: this._rotationLayer.pm.getAngle(),\r\n        originLatLngs,\r\n        newLatLngs: this._rotationLayer.getLatLngs(),\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n\r\n  // Global Events\r\n  // Fired when a Toolbar action is clicked\r\n  _fireActionClick(\r\n    action,\r\n    btnName,\r\n    button,\r\n    source = 'Toolbar',\r\n    customPayload = {}\r\n  ) {\r\n    // this._map is used because this is fired from L.Controls (PMButton)\r\n    this.__fire(\r\n      this._map,\r\n      'pm:actionclick',\r\n      {\r\n        text: action.text,\r\n        action,\r\n        btnName,\r\n        button,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when a Toolbar button is clicked\r\n  _fireButtonClick(btnName, button, source = 'Toolbar', customPayload = {}) {\r\n    // this._map is used because this is fired from L.Controls (PMButton)\r\n    this.__fire(\r\n      this._map,\r\n      'pm:buttonclick',\r\n      { btnName, button },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when language is changed\r\n  _fireLangChange(\r\n    oldLang,\r\n    activeLang,\r\n    fallback,\r\n    translations,\r\n    source = 'Global',\r\n    customPayload = {}\r\n  ) {\r\n    this.__fire(\r\n      this.map,\r\n      'pm:langchange',\r\n      {\r\n        oldLang,\r\n        activeLang,\r\n        fallback,\r\n        translations,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when Drag Mode is toggled.\r\n  _fireGlobalDragModeToggled(enabled, source = 'Global', customPayload = {}) {\r\n    this.__fire(\r\n      this.map,\r\n      'pm:globaldragmodetoggled',\r\n      {\r\n        enabled,\r\n        map: this.map,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when Edit Mode is toggled.\r\n  _fireGlobalEditModeToggled(enabled, source = 'Global', customPayload = {}) {\r\n    this.__fire(\r\n      this.map,\r\n      'pm:globaleditmodetoggled',\r\n      {\r\n        enabled,\r\n        map: this.map,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when Removal Mode is toggled.\r\n  _fireGlobalRemovalModeToggled(\r\n    enabled,\r\n    source = 'Global',\r\n    customPayload = {}\r\n  ) {\r\n    this.__fire(\r\n      this.map,\r\n      'pm:globalremovalmodetoggled',\r\n      {\r\n        enabled,\r\n        map: this.map,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when Cut Mode is toggled.\r\n  _fireGlobalCutModeToggled(source = 'Global', customPayload = {}) {\r\n    this.__fire(\r\n      this._map,\r\n      'pm:globalcutmodetoggled',\r\n      {\r\n        enabled: !!this._enabled,\r\n        map: this._map,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when Draw Mode is toggled.\r\n  _fireGlobalDrawModeToggled(source = 'Global', customPayload = {}) {\r\n    this.__fire(\r\n      this._map,\r\n      'pm:globaldrawmodetoggled',\r\n      {\r\n        enabled: this._enabled,\r\n        shape: this._shape,\r\n        map: this._map,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when Rotation Mode is toggled.\r\n  _fireGlobalRotateModeToggled(source = 'Global', customPayload = {}) {\r\n    this.__fire(\r\n      this.map,\r\n      'pm:globalrotatemodetoggled',\r\n      {\r\n        enabled: this.globalRotateModeEnabled(),\r\n        map: this.map,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when LayerGroup is removed\r\n  _fireRemoveLayerGroup(\r\n    fireLayer,\r\n    refLayer = fireLayer,\r\n    source = 'Edit',\r\n    customPayload = {}\r\n  ) {\r\n    this.__fire(\r\n      fireLayer,\r\n      'pm:remove',\r\n      { layer: refLayer, shape: undefined },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n  // Fired when `keydown` or `keyup` on the document is fired.\r\n  _fireKeyeventEvent(\r\n    event,\r\n    eventType,\r\n    focusOn,\r\n    source = 'Global',\r\n    customPayload = {}\r\n  ) {\r\n    this.__fire(\r\n      this.map,\r\n      'pm:keyevent',\r\n      {\r\n        event,\r\n        eventType,\r\n        focusOn,\r\n      },\r\n      source,\r\n      customPayload\r\n    );\r\n  },\r\n\r\n  // private (very private) fire function\r\n  __fire(fireLayer, type, payload, source, customPayload = {}) {\r\n    payload = (merge || window.mergeLodash)(payload, customPayload, { source });\r\n    L.PM.Utils._fireEvent(fireLayer, type, payload);\r\n  },\r\n};\r\n\r\nexport default EventMixin;\r\n", "// use function to create a new mixin object for keeping isolation\r\n// to make it work for multiple map instances\r\nconst createKeyboardMixins = () => ({\r\n  _lastEvents: { keydown: undefined, keyup: undefined, current: undefined },\r\n  _initKeyListener(map) {\r\n    this.map = map;\r\n    L.DomEvent.on(document, 'keydown keyup', this._onKeyListener, this);\r\n    L.DomEvent.on(window, 'blur', this._onBlur, this);\r\n    // clean up global listeners when current map instance is destroyed\r\n    map.once('unload', this._unbindKeyListenerEvents, this);\r\n  },\r\n  _unbindKeyListenerEvents() {\r\n    L.DomEvent.off(document, 'keydown keyup', this._onKeyListener, this);\r\n    L.DomEvent.off(window, 'blur', this._onBlur, this);\r\n  },\r\n  _onKeyListener(e) {\r\n    let focusOn = 'document';\r\n\r\n    // .contains only supported since IE9, if you want to use Geoman with IE8 or lower you need to implement a polyfill for .contains\r\n    // with focusOn the user can add a check if the key was pressed while the user interacts with the map\r\n    if (this.map.getContainer().contains(e.target)) {\r\n      focusOn = 'map';\r\n    }\r\n\r\n    const data = { event: e, eventType: e.type, focusOn };\r\n    this._lastEvents[e.type] = data;\r\n    this._lastEvents.current = data;\r\n\r\n    this.map.pm._fireKeyeventEvent(e, e.type, focusOn);\r\n  },\r\n  _onBlur(e) {\r\n    e.altKey = false;\r\n    const data = { event: e, eventType: e.type, focusOn: 'document' };\r\n    this._lastEvents[e.type] = data;\r\n    this._lastEvents.current = data;\r\n  },\r\n  getLastKeyEvent(type = 'current') {\r\n    return this._lastEvents[type];\r\n  },\r\n  isShiftKeyPressed() {\r\n    return this._lastEvents.current?.event.shiftKey;\r\n  },\r\n  isAltKeyPressed() {\r\n    return this._lastEvents.current?.event.altKey;\r\n  },\r\n  isCtrlKeyPressed() {\r\n    return this._lastEvents.current?.event.ctrlKey;\r\n  },\r\n  isMetaKeyPressed() {\r\n    return this._lastEvents.current?.event.metaKey;\r\n  },\r\n  getPressedKey() {\r\n    return this._lastEvents.current?.event.key;\r\n  },\r\n});\r\n\r\nexport default createKeyboardMixins;\r\n", "import translations from '../../assets/translations';\r\n\r\nconst get = window.getLodash;\r\nexport function getTranslation(path) {\r\n  const lang = L.PM.activeLang;\r\n  // if translation is not found, fallback to english\r\n  return (get || window.getLodash)(translations[lang], path) || (get || window.getLodash)(translations.en, path) || path;\r\n}\r\n\r\nexport function hasValues(list) {\r\n  for (let i = 0; i < list.length; i += 1) {\r\n    const item = list[i];\r\n\r\n    if (Array.isArray(item)) {\r\n      if (hasValues(item)) {\r\n        return true;\r\n      }\r\n    } else if (item !== null && item !== undefined && item !== '') {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport function removeEmptyCoordRings(arr) {\r\n  return arr.reduce((result, item) => {\r\n    if (item.length !== 0) {\r\n      const newItem = Array.isArray(item) ? removeEmptyCoordRings(item) : item;\r\n      if (Array.isArray(newItem)) {\r\n        if (newItem.length !== 0) {\r\n          result.push(newItem);\r\n        }\r\n      } else {\r\n        result.push(newItem);\r\n      }\r\n    }\r\n    return result;\r\n  }, []);\r\n}\r\n\r\n// Code from https://stackoverflow.com/a/24153998/8283938\r\nfunction destinationVincenty(lonlat, brng, dist) {\r\n  // rewritten to work with leaflet\r\n  const VincentyConstants = {\r\n    a: L.CRS.Earth.R,\r\n    b: 6356752.3142,\r\n    f: 1 / 298.257223563,\r\n  };\r\n\r\n  const { a, b, f } = VincentyConstants;\r\n  const lon1 = lonlat.lng;\r\n  const lat1 = lonlat.lat;\r\n  const s = dist;\r\n  const pi = Math.PI;\r\n  const alpha1 = (brng * pi) / 180; // converts brng degrees to radius\r\n  const sinAlpha1 = Math.sin(alpha1);\r\n  const cosAlpha1 = Math.cos(alpha1);\r\n  const tanU1 =\r\n    (1 - f) * Math.tan((lat1 * pi) / 180 /* converts lat1 degrees to radius */);\r\n  const cosU1 = 1 / Math.sqrt(1 + tanU1 * tanU1);\r\n  const sinU1 = tanU1 * cosU1;\r\n  const sigma1 = Math.atan2(tanU1, cosAlpha1);\r\n  const sinAlpha = cosU1 * sinAlpha1;\r\n  const cosSqAlpha = 1 - sinAlpha * sinAlpha;\r\n  const uSq = (cosSqAlpha * (a * a - b * b)) / (b * b);\r\n  const A = 1 + (uSq / 16384) * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\r\n  const B = (uSq / 1024) * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\r\n  let sigma = s / (b * A);\r\n  let sigmaP = 2 * Math.PI;\r\n\r\n  let cos2SigmaM;\r\n  let sinSigma;\r\n  let cosSigma;\r\n  while (Math.abs(sigma - sigmaP) > 1e-12) {\r\n    cos2SigmaM = Math.cos(2 * sigma1 + sigma);\r\n    sinSigma = Math.sin(sigma);\r\n    cosSigma = Math.cos(sigma);\r\n    const deltaSigma =\r\n      B *\r\n      sinSigma *\r\n      (cos2SigmaM +\r\n        (B / 4) *\r\n          (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM) -\r\n            (B / 6) *\r\n              cos2SigmaM *\r\n              (-3 + 4 * sinSigma * sinSigma) *\r\n              (-3 + 4 * cos2SigmaM * cos2SigmaM)));\r\n    sigmaP = sigma;\r\n    sigma = s / (b * A) + deltaSigma;\r\n  }\r\n  const tmp = sinU1 * sinSigma - cosU1 * cosSigma * cosAlpha1;\r\n  const lat2 = Math.atan2(\r\n    sinU1 * cosSigma + cosU1 * sinSigma * cosAlpha1,\r\n    (1 - f) * Math.sqrt(sinAlpha * sinAlpha + tmp * tmp)\r\n  );\r\n  const lambda = Math.atan2(\r\n    sinSigma * sinAlpha1,\r\n    cosU1 * cosSigma - sinU1 * sinSigma * cosAlpha1\r\n  );\r\n  const C = (f / 16) * cosSqAlpha * (4 + f * (4 - 3 * cosSqAlpha));\r\n  const lam =\r\n    lambda -\r\n    (1 - C) *\r\n      f *\r\n      sinAlpha *\r\n      (sigma +\r\n        C *\r\n          sinSigma *\r\n          (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\r\n  // const revAz = Math.atan2(sinAlpha, -tmp);  // final bearing\r\n  const lamFunc = lon1 + (lam * 180) / pi; // converts lam radius to degrees\r\n  const lat2a = (lat2 * 180) / pi; // converts lat2a radius to degrees\r\n\r\n  return L.latLng(lamFunc, lat2a);\r\n}\r\n\r\nexport function createGeodesicPolygon(\r\n  origin,\r\n  radius,\r\n  sides,\r\n  rotation,\r\n  withBearing = true\r\n) {\r\n  let trueAngle;\r\n  let newLonlat;\r\n  let geomPoint;\r\n  const points = [];\r\n\r\n  for (let i = 0; i < sides; i += 1) {\r\n    if (withBearing) {\r\n      trueAngle = (i * 360) / sides + rotation;\r\n      newLonlat = destinationVincenty(origin, trueAngle, radius);\r\n      geomPoint = L.latLng(newLonlat.lng, newLonlat.lat);\r\n    } else {\r\n      const pLat = origin.lat + Math.cos((2 * i * Math.PI) / sides) * radius;\r\n      const pLng = origin.lng + Math.sin((2 * i * Math.PI) / sides) * radius;\r\n      geomPoint = L.latLng(pLat, pLng);\r\n    }\r\n    points.push(geomPoint);\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\n/* Copied from L.GeometryUtil */\r\nfunction destination(latlng, heading, distance) {\r\n  heading = (heading + 360) % 360;\r\n  const rad = Math.PI / 180;\r\n  const radInv = 180 / Math.PI;\r\n  const { R } = L.CRS.Earth; // approximation of Earth's radius\r\n  const lon1 = latlng.lng * rad;\r\n  const lat1 = latlng.lat * rad;\r\n  const rheading = heading * rad;\r\n  const sinLat1 = Math.sin(lat1);\r\n  const cosLat1 = Math.cos(lat1);\r\n  const cosDistR = Math.cos(distance / R);\r\n  const sinDistR = Math.sin(distance / R);\r\n  const lat2 = Math.asin(\r\n    sinLat1 * cosDistR + cosLat1 * sinDistR * Math.cos(rheading)\r\n  );\r\n  let lon2 =\r\n    lon1 +\r\n    Math.atan2(\r\n      Math.sin(rheading) * sinDistR * cosLat1,\r\n      cosDistR - sinLat1 * Math.sin(lat2)\r\n    );\r\n  lon2 *= radInv;\r\n\r\n  const optA = lon2 - 360;\r\n  const optB = lon2 < -180 ? lon2 + 360 : lon2;\r\n\r\n  lon2 = lon2 > 180 ? optA : optB;\r\n  return L.latLng([lat2 * radInv, lon2]);\r\n}\r\n/* Copied from L.GeometryUtil */\r\nexport function calcAngle(map, latlngA, latlngB) {\r\n  const pointA = map.latLngToContainerPoint(latlngA);\r\n  const pointB = map.latLngToContainerPoint(latlngB);\r\n  let angleDeg =\r\n    (Math.atan2(pointB.y - pointA.y, pointB.x - pointA.x) * 180) / Math.PI + 90;\r\n  angleDeg += angleDeg < 0 ? 360 : 0;\r\n  return angleDeg;\r\n}\r\n\r\nexport function destinationOnLine(map, latlngA, latlngB, distance) {\r\n  const angleDeg = calcAngle(map, latlngA, latlngB);\r\n  return destination(latlngA, angleDeg, distance);\r\n}\r\n\r\n// this function is used with the .sort(prioritiseSort(key, sortingOrder)) function of arrays\r\nexport function prioritiseSort(key, _sortingOrder, order = 'asc') {\r\n  /* the sorting order has all possible keys (lowercase) with the index and then it is sorted by the key on the object */\r\n\r\n  if (!_sortingOrder || Object.keys(_sortingOrder).length === 0) {\r\n    return (a, b) => a - b; // default sort method\r\n  }\r\n\r\n  // change the keys to lowercase\r\n  const keys = Object.keys(_sortingOrder);\r\n  let objKey;\r\n  let n = keys.length - 1;\r\n  const sortingOrder = {};\r\n  while (n >= 0) {\r\n    objKey = keys[n];\r\n    sortingOrder[objKey.toLowerCase()] = _sortingOrder[objKey];\r\n    n -= 1;\r\n  }\r\n\r\n  function getShape(layer) {\r\n    if (layer instanceof L.Marker) {\r\n      return 'Marker';\r\n    }\r\n    if (layer instanceof L.Circle) {\r\n      return 'Circle';\r\n    }\r\n    if (layer instanceof L.CircleMarker) {\r\n      return 'CircleMarker';\r\n    }\r\n    if (layer instanceof L.Rectangle) {\r\n      return 'Rectangle';\r\n    }\r\n    if (layer instanceof L.Polygon) {\r\n      return 'Polygon';\r\n    }\r\n    if (layer instanceof L.Polyline) {\r\n      return 'Line';\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  return (a, b) => {\r\n    let keyA;\r\n    let keyB;\r\n    if (key === 'instanceofShape') {\r\n      keyA = getShape(a.layer).toLowerCase();\r\n      keyB = getShape(b.layer).toLowerCase();\r\n      if (!keyA || !keyB) return 0;\r\n    } else {\r\n      /* eslint-disable-next-line no-prototype-builtins */\r\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return 0;\r\n      keyA = a[key].toLowerCase();\r\n      keyB = b[key].toLowerCase();\r\n    }\r\n\r\n    const first =\r\n      keyA in sortingOrder ? sortingOrder[keyA] : Number.MAX_SAFE_INTEGER;\r\n\r\n    const second =\r\n      keyB in sortingOrder ? sortingOrder[keyB] : Number.MAX_SAFE_INTEGER;\r\n\r\n    let result = 0;\r\n    if (first < second) result = -1;\r\n    else if (first > second) result = 1;\r\n    return order === 'desc' ? result * -1 : result;\r\n  };\r\n}\r\n\r\nexport function copyLatLngs(layer, latlngs = layer.getLatLngs()) {\r\n  if (layer instanceof L.Polygon) {\r\n    return L.polygon(latlngs).getLatLngs();\r\n  }\r\n  return L.polyline(latlngs).getLatLngs();\r\n}\r\n\r\n// Replaces the lat value with the MAX_LATITUDE of CRS if it is lower / higher\r\nexport function fixLatOffset(latlng, map) {\r\n  if (map.options.crs?.projection?.MAX_LATITUDE) {\r\n    const max = map.options.crs?.projection?.MAX_LATITUDE;\r\n    latlng.lat = Math.max(Math.min(max, latlng.lat), -max);\r\n  }\r\n  return latlng;\r\n}\r\n\r\nexport function getRenderer(layer) {\r\n  return (\r\n    layer.options.renderer ||\r\n    (layer._map &&\r\n      (layer._map._getPaneRenderer(layer.options.pane) ||\r\n        layer._map.options.renderer ||\r\n        layer._map._renderer)) ||\r\n    layer._renderer\r\n  );\r\n}\r\n", "import translations from '../assets/translations';\r\nimport GlobalEditMode from './Mixins/Modes/Mode.Edit';\r\nimport GlobalDragMode from './Mixins/Modes/Mode.Drag';\r\nimport GlobalRemovalMode from './Mixins/Modes/Mode.Removal';\r\nimport GlobalRotateMode from './Mixins/Modes/Mode.Rotate';\r\nimport EventMixin from './Mixins/Events';\r\nimport createKeyboardMixins from './Mixins/Keyboard';\r\nimport { getRenderer } from './helpers';\r\n\r\nconst merge = window.mergeLodash;\r\nconst Map = L.Class.extend({\r\n  includes: [\r\n    GlobalEditMode,\r\n    GlobalDragMode,\r\n    GlobalRemovalMode,\r\n    GlobalRotateMode,\r\n    EventMixin,\r\n  ],\r\n  initialize(map) {\r\n    this.map = map;\r\n    this.Draw = new L.PM.Draw(map);\r\n    this.Toolbar = new L.PM.Toolbar(map);\r\n    this.Keyboard = createKeyboardMixins();\r\n\r\n    this.globalOptions = {\r\n      snappable: true,\r\n      layerGroup: undefined,\r\n      snappingOrder: [\r\n        'Marker',\r\n        'CircleMarker',\r\n        'Circle',\r\n        'Line',\r\n        'Polygon',\r\n        'Rectangle',\r\n      ],\r\n      panes: {\r\n        vertexPane: 'markerPane',\r\n        layerPane: 'overlayPane',\r\n        markerPane: 'markerPane',\r\n      },\r\n      draggable: true,\r\n    };\r\n\r\n    this.Keyboard._initKeyListener(map);\r\n  },\r\n  // eslint-disable-next-line default-param-last\r\n  setLang(lang = 'en', override, fallback = 'en') {\r\n    // Normalize the language code to lowercase and trim any whitespace\r\n    lang = lang.trim().toLowerCase();\r\n\r\n    // First, check if the input is already in the expected format (e.g., 'fr')\r\n    if (/^[a-z]{2}$/.test(lang)) {\r\n      // No further processing needed for single-letter codes\r\n    } else {\r\n      // Handle formats like 'fr-FR', 'FR', 'fr-fr', 'fr_FR'\r\n      const normalizedLang = lang\r\n        .replace(/[-_\\s]/g, '-')\r\n        .replace(/^(\\w{2})$/, '$1-');\r\n      const match = normalizedLang.match(/([a-z]{2})-?([a-z]{2})?/);\r\n\r\n      if (match) {\r\n        // Construct potential keys to search for in the translations object\r\n        const potentialKeys = [\r\n          `${match[1]}_${match[2]}`, // e.g., 'fr_BR'\r\n          `${match[1]}`, // e.g., 'fr'\r\n        ];\r\n\r\n        // Search through the translations object for a matching key\r\n        for (const key of potentialKeys) {\r\n          if (translations[key]) {\r\n            lang = key; // Set lang to the matching key\r\n            break; // Exit the loop once a match is found\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const oldLang = L.PM.activeLang;\r\n    if (override) {\r\n      translations[lang] = (merge || window.mergeLodash)(translations[fallback], override);\r\n    }\r\n\r\n    L.PM.activeLang = lang;\r\n    this.map.pm.Toolbar.reinit();\r\n    this._fireLangChange(oldLang, lang, fallback, translations[lang]);\r\n  },\r\n  addControls(options) {\r\n    this.Toolbar.addControls(options);\r\n  },\r\n  removeControls() {\r\n    this.Toolbar.removeControls();\r\n  },\r\n  toggleControls() {\r\n    this.Toolbar.toggleControls();\r\n  },\r\n  controlsVisible() {\r\n    return this.Toolbar.isVisible;\r\n  },\r\n  // eslint-disable-next-line default-param-last\r\n  enableDraw(shape = 'Polygon', options) {\r\n    // backwards compatible, remove after 3.0\r\n    if (shape === 'Poly') {\r\n      shape = 'Polygon';\r\n    }\r\n\r\n    this.Draw.enable(shape, options);\r\n  },\r\n  disableDraw(shape = 'Polygon') {\r\n    // backwards compatible, remove after 3.0\r\n    if (shape === 'Poly') {\r\n      shape = 'Polygon';\r\n    }\r\n\r\n    this.Draw.disable(shape);\r\n  },\r\n  // optionsModifier for special options like ignoreShapes or merge\r\n  setPathOptions(options, optionsModifier = {}) {\r\n    const ignore = optionsModifier.ignoreShapes || [];\r\n    const mergeOptions = optionsModifier.merge || false;\r\n\r\n    this.map.pm.Draw.shapes.forEach((shape) => {\r\n      if (ignore.indexOf(shape) === -1) {\r\n        this.map.pm.Draw[shape].setPathOptions(options, mergeOptions);\r\n      }\r\n    });\r\n  },\r\n\r\n  getGlobalOptions() {\r\n    return this.globalOptions;\r\n  },\r\n  setGlobalOptions(o) {\r\n    // merge passed and existing options\r\n    const options = (merge || window.mergeLodash)(this.globalOptions, o);\r\n\r\n    // TODO: remove with next major release\r\n    if (options.editable) {\r\n      options.resizeableCircleMarker = options.editable;\r\n      delete options.editable;\r\n    }\r\n\r\n    // check if switched the editable mode for CircleMarker while drawing\r\n    let reenableCircleMarker = false;\r\n    if (\r\n      this.map.pm.Draw.CircleMarker.enabled() &&\r\n      !!this.map.pm.Draw.CircleMarker.options.resizeableCircleMarker !==\r\n      !!options.resizeableCircleMarker\r\n    ) {\r\n      this.map.pm.Draw.CircleMarker.disable();\r\n      reenableCircleMarker = true;\r\n    }\r\n    // check if switched the editable mode for Circle while drawing\r\n    let reenableCircle = false;\r\n    if (\r\n      this.map.pm.Draw.Circle.enabled() &&\r\n      !!this.map.pm.Draw.Circle.options.resizeableCircle !==\r\n      !!options.resizeableCircle\r\n    ) {\r\n      this.map.pm.Draw.Circle.disable();\r\n      reenableCircle = true;\r\n    }\r\n\r\n    // enable options for Drawing Shapes\r\n    this.map.pm.Draw.shapes.forEach((shape) => {\r\n      this.map.pm.Draw[shape].setOptions(options);\r\n    });\r\n\r\n    if (reenableCircleMarker) {\r\n      this.map.pm.Draw.CircleMarker.enable();\r\n    }\r\n\r\n    if (reenableCircle) {\r\n      this.map.pm.Draw.Circle.enable();\r\n    }\r\n\r\n    // enable options for Editing\r\n    const layers = L.PM.Utils.findLayers(this.map);\r\n    layers.forEach((layer) => {\r\n      layer.pm.setOptions(options);\r\n    });\r\n\r\n    this.map.fire('pm:globaloptionschanged');\r\n\r\n    // store options\r\n    this.globalOptions = options;\r\n\r\n    // apply the options (actually trigger the functionality)\r\n    this.applyGlobalOptions();\r\n  },\r\n  applyGlobalOptions() {\r\n    const layers = L.PM.Utils.findLayers(this.map);\r\n    layers.forEach((layer) => {\r\n      if (layer.pm.enabled()) {\r\n        layer.pm.applyOptions();\r\n      }\r\n    });\r\n  },\r\n  globalDrawModeEnabled() {\r\n    return !!this.Draw.getActiveShape();\r\n  },\r\n  globalCutModeEnabled() {\r\n    return !!this.Draw.Cut.enabled();\r\n  },\r\n  enableGlobalCutMode(options) {\r\n    return this.Draw.Cut.enable(options);\r\n  },\r\n  toggleGlobalCutMode(options) {\r\n    return this.Draw.Cut.toggle(options);\r\n  },\r\n  disableGlobalCutMode() {\r\n    return this.Draw.Cut.disable();\r\n  },\r\n  getGeomanLayers(asGroup = false) {\r\n    const layers = L.PM.Utils.findLayers(this.map);\r\n    if (!asGroup) {\r\n      return layers;\r\n    }\r\n    const group = L.featureGroup();\r\n    group._pmTempLayer = true;\r\n    layers.forEach((layer) => {\r\n      group.addLayer(layer);\r\n    });\r\n    return group;\r\n  },\r\n  getGeomanDrawLayers(asGroup = false) {\r\n    const layers = L.PM.Utils.findLayers(this.map).filter(\r\n      (l) => l._drawnByGeoman === true\r\n    );\r\n    if (!asGroup) {\r\n      return layers;\r\n    }\r\n    const group = L.featureGroup();\r\n    group._pmTempLayer = true;\r\n    layers.forEach((layer) => {\r\n      group.addLayer(layer);\r\n    });\r\n    return group;\r\n  },\r\n  // returns the map instance by default or a layergroup is set through global options\r\n  _getContainingLayer() {\r\n    return this.globalOptions.layerGroup &&\r\n      this.globalOptions.layerGroup instanceof L.LayerGroup\r\n      ? this.globalOptions.layerGroup\r\n      : this.map;\r\n  },\r\n  _isCRSSimple() {\r\n    return this.map.options.crs === L.CRS.Simple;\r\n  },\r\n  // in Canvas mode we need to convert touch- and pointerevents (IE) to mouseevents, because Leaflet don't support them.\r\n  _touchEventCounter: 0,\r\n  _addTouchEvents(elm) {\r\n    if (this._touchEventCounter === 0) {\r\n      L.DomEvent.on(elm, 'touchmove', this._canvasTouchMove, this);\r\n      L.DomEvent.on(\r\n        elm,\r\n        'touchstart touchend touchcancel',\r\n        this._canvasTouchClick,\r\n        this\r\n      );\r\n    }\r\n    this._touchEventCounter += 1;\r\n  },\r\n  _removeTouchEvents(elm) {\r\n    if (this._touchEventCounter === 1) {\r\n      L.DomEvent.off(elm, 'touchmove', this._canvasTouchMove, this);\r\n      L.DomEvent.off(\r\n        elm,\r\n        'touchstart touchend touchcancel',\r\n        this._canvasTouchClick,\r\n        this\r\n      );\r\n    }\r\n    this._touchEventCounter =\r\n      this._touchEventCounter <= 1 ? 0 : this._touchEventCounter - 1;\r\n  },\r\n  _canvasTouchMove(e) {\r\n    getRenderer(this.map)._onMouseMove(this._createMouseEvent('mousemove', e));\r\n  },\r\n  _canvasTouchClick(e) {\r\n    let type = '';\r\n    if (e.type === 'touchstart' || e.type === 'pointerdown') {\r\n      type = 'mousedown';\r\n    } else if (e.type === 'touchend' || e.type === 'pointerup') {\r\n      type = 'mouseup';\r\n    } else if (e.type === 'touchcancel' || e.type === 'pointercancel') {\r\n      type = 'mouseup';\r\n    }\r\n    if (!type) {\r\n      return;\r\n    }\r\n    getRenderer(this.map)._onClick(this._createMouseEvent(type, e));\r\n  },\r\n  _createMouseEvent(type, e) {\r\n    let mouseEvent;\r\n    const touchEvt = e.touches[0] || e.changedTouches[0];\r\n    try {\r\n      mouseEvent = new MouseEvent(type, {\r\n        bubbles: e.bubbles,\r\n        cancelable: e.cancelable,\r\n        view: e.view,\r\n        detail: touchEvt.detail,\r\n        screenX: touchEvt.screenX,\r\n        screenY: touchEvt.screenY,\r\n        clientX: touchEvt.clientX,\r\n        clientY: touchEvt.clientY,\r\n        ctrlKey: e.ctrlKey,\r\n        altKey: e.altKey,\r\n        shiftKey: e.shiftKey,\r\n        metaKey: e.metaKey,\r\n        button: e.button,\r\n        relatedTarget: e.relatedTarget,\r\n      });\r\n    } catch (ex) {\r\n      mouseEvent = document.createEvent('MouseEvents');\r\n      mouseEvent.initMouseEvent(\r\n        type,\r\n        e.bubbles,\r\n        e.cancelable,\r\n        e.view,\r\n        touchEvt.detail,\r\n        touchEvt.screenX,\r\n        touchEvt.screenY,\r\n        touchEvt.clientX,\r\n        touchEvt.clientY,\r\n        e.ctrlKey,\r\n        e.altKey,\r\n        e.shiftKey,\r\n        e.metaKey,\r\n        e.button,\r\n        e.relatedTarget\r\n      );\r\n    }\r\n    return mouseEvent;\r\n  },\r\n});\r\n\r\nexport default Map;\r\n", "import { getTranslation } from '../helpers';\r\nimport EventMixin from '../Mixins/Events';\r\n\r\nconst PMButton = L.Control.extend({\r\n  includes: [EventMixin],\r\n  options: {\r\n    position: 'topleft',\r\n    disableByOtherButtons: true,\r\n  },\r\n  // TODO: clean up variable names like _button should be _options and that domNodeVariable stuff\r\n  initialize(options) {\r\n    // replaced setOptions with this because classNames returned undefined \uD83E\uDD14\r\n    this._button = L.Util.extend({}, this.options, options);\r\n  },\r\n  onAdd(map) {\r\n    this._map = map;\r\n    if (!this._map.pm.Toolbar.options.oneBlock) {\r\n      if (this._button.tool === 'edit') {\r\n        this._container = this._map.pm.Toolbar.editContainer;\r\n      } else if (this._button.tool === 'options') {\r\n        this._container = this._map.pm.Toolbar.optionsContainer;\r\n      } else if (this._button.tool === 'custom') {\r\n        this._container = this._map.pm.Toolbar.customContainer;\r\n      } else {\r\n        this._container = this._map.pm.Toolbar.drawContainer;\r\n      }\r\n    } else {\r\n      this._container = this._map.pm.Toolbar._createContainer(\r\n        this.options.position\r\n      );\r\n    }\r\n    this._renderButton();\r\n\r\n    return this._container;\r\n  },\r\n  _renderButton() {\r\n    const oldDomNode = this.buttonsDomNode;\r\n    this.buttonsDomNode = this._makeButton(this._button);\r\n    if (oldDomNode) {\r\n      oldDomNode.replaceWith(this.buttonsDomNode);\r\n    } else {\r\n      this._container.appendChild(this.buttonsDomNode);\r\n    }\r\n  },\r\n  onRemove() {\r\n    this.buttonsDomNode.remove();\r\n\r\n    return this._container;\r\n  },\r\n  getText() {\r\n    return this._button.text;\r\n  },\r\n  getIconUrl() {\r\n    return this._button.iconUrl;\r\n  },\r\n  destroy() {\r\n    this._button = {};\r\n    this._update();\r\n  },\r\n  toggle(e) {\r\n    if (typeof e === 'boolean') {\r\n      this._button.toggleStatus = e;\r\n    } else {\r\n      this._button.toggleStatus = !this._button.toggleStatus;\r\n    }\r\n    this._applyStyleClasses();\r\n\r\n    return this._button.toggleStatus;\r\n  },\r\n  toggled() {\r\n    return this._button.toggleStatus;\r\n  },\r\n  onCreate() {\r\n    this.toggle(false);\r\n  },\r\n  disable() {\r\n    this.toggle(false); // is needed to prevent active button disabled\r\n    this._button.disabled = true;\r\n    this._updateDisabled();\r\n  },\r\n  enable() {\r\n    this._button.disabled = false;\r\n    this._updateDisabled();\r\n  },\r\n  _triggerClick(e) {\r\n    if (e) {\r\n      // is needed to prevent scrolling when clicking on a-element with href=\"a\"\r\n      e.preventDefault();\r\n    }\r\n    if (this._button.disabled) {\r\n      return;\r\n    }\r\n    // TODO is this a big change when we change from e to a object with the event and the button? Now it's the second argument\r\n    this._button.onClick(e, { button: this, event: e });\r\n    this._clicked(e);\r\n    this._button.afterClick(e, { button: this, event: e });\r\n  },\r\n  _makeButton(button) {\r\n    const pos = this.options.position.indexOf('right') > -1 ? 'pos-right' : '';\r\n\r\n    // button container\r\n    const buttonContainer = L.DomUtil.create(\r\n      'div',\r\n      `button-container  ${pos}`,\r\n      this._container\r\n    );\r\n\r\n    if (button.title) {\r\n      buttonContainer.setAttribute('title', button.title);\r\n    }\r\n\r\n    // the button itself\r\n    const newButton = L.DomUtil.create(\r\n      'a',\r\n      'leaflet-buttons-control-button',\r\n      buttonContainer\r\n    );\r\n    newButton.setAttribute('role', 'button');\r\n    newButton.setAttribute('tabindex', '0');\r\n    newButton.href = '#';\r\n\r\n    // the buttons actions\r\n    const actionContainer = L.DomUtil.create(\r\n      'div',\r\n      `leaflet-pm-actions-container ${pos}`,\r\n      buttonContainer\r\n    );\r\n\r\n    const activeActions = button.actions;\r\n\r\n    const actions = {\r\n      cancel: {\r\n        text: getTranslation('actions.cancel'),\r\n        title: getTranslation('actions.cancel'),\r\n        onClick() {\r\n          this._triggerClick();\r\n        },\r\n      },\r\n      finishMode: {\r\n        text: getTranslation('actions.finish'),\r\n        title: getTranslation('actions.finish'),\r\n        onClick() {\r\n          this._triggerClick();\r\n        },\r\n      },\r\n      removeLastVertex: {\r\n        text: getTranslation('actions.removeLastVertex'),\r\n        title: getTranslation('actions.removeLastVertex'),\r\n        onClick() {\r\n          this._map.pm.Draw[button.jsClass]._removeLastVertex();\r\n        },\r\n      },\r\n      finish: {\r\n        text: getTranslation('actions.finish'),\r\n        title: getTranslation('actions.finish'),\r\n        onClick(e) {\r\n          this._map.pm.Draw[button.jsClass]._finishShape(e);\r\n        },\r\n      },\r\n    };\r\n\r\n    activeActions.forEach((_action) => {\r\n      const name = typeof _action === 'string' ? _action : _action.name;\r\n      let action;\r\n      if (actions[name]) {\r\n        action = actions[name];\r\n      } else if (_action.text) {\r\n        action = _action;\r\n      } else {\r\n        return;\r\n      }\r\n      const actionNode = L.DomUtil.create(\r\n        'a',\r\n        `leaflet-pm-action ${pos} action-${name}`,\r\n        actionContainer\r\n      );\r\n      actionNode.setAttribute('role', 'button');\r\n      actionNode.setAttribute('tabindex', '0');\r\n      actionNode.href = '#';\r\n\r\n      if (action.title) {\r\n        actionNode.title = action.title;\r\n      }\r\n\r\n      actionNode.innerHTML = action.text;\r\n\r\n      L.DomEvent.disableClickPropagation(actionNode);\r\n      L.DomEvent.on(actionNode, 'click', L.DomEvent.stop);\r\n\r\n      if (!button.disabled) {\r\n        if (action.onClick) {\r\n          const actionClick = (e) => {\r\n            // is needed to prevent scrolling when clicking on a-element with href=\"a\"\r\n            e.preventDefault();\r\n            let btnName = '';\r\n            const { buttons } = this._map.pm.Toolbar;\r\n            for (const btn in buttons) {\r\n              if (buttons[btn]._button === button) {\r\n                btnName = btn;\r\n                break;\r\n              }\r\n            }\r\n            this._fireActionClick(action, btnName, button);\r\n          };\r\n\r\n          L.DomEvent.addListener(actionNode, 'click', actionClick, this);\r\n          L.DomEvent.addListener(actionNode, 'click', action.onClick, this);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (button.toggleStatus) {\r\n      L.DomUtil.addClass(buttonContainer, 'active');\r\n    }\r\n\r\n    const image = L.DomUtil.create('div', 'control-icon', newButton);\r\n\r\n    if (button.iconUrl) {\r\n      image.setAttribute('src', button.iconUrl);\r\n    }\r\n    if (button.className) {\r\n      L.DomUtil.addClass(image, button.className);\r\n    }\r\n\r\n    L.DomEvent.disableClickPropagation(newButton);\r\n    L.DomEvent.on(newButton, 'click', L.DomEvent.stop);\r\n\r\n    if (!button.disabled) {\r\n      // before the actual click, trigger a click on currently toggled buttons to\r\n      // untoggle them and their functionality\r\n      L.DomEvent.addListener(newButton, 'click', this._onBtnClick, this);\r\n      L.DomEvent.addListener(newButton, 'click', this._triggerClick, this);\r\n    }\r\n\r\n    if (button.disabled) {\r\n      L.DomUtil.addClass(newButton, 'pm-disabled');\r\n      newButton.setAttribute('aria-disabled', 'true');\r\n    }\r\n\r\n    return buttonContainer;\r\n  },\r\n\r\n  _applyStyleClasses() {\r\n    if (!this._container) {\r\n      return;\r\n    }\r\n\r\n    if (!this._button.toggleStatus || this._button.cssToggle === false) {\r\n      L.DomUtil.removeClass(this.buttonsDomNode, 'active');\r\n      L.DomUtil.removeClass(this._container, 'activeChild');\r\n    } else {\r\n      L.DomUtil.addClass(this.buttonsDomNode, 'active');\r\n      L.DomUtil.addClass(this._container, 'activeChild');\r\n    }\r\n  },\r\n\r\n  _onBtnClick() {\r\n    if (this._button.disabled) {\r\n      return;\r\n    }\r\n    if (this._button.disableOtherButtons) {\r\n      this._map.pm.Toolbar.triggerClickOnToggledButtons(this);\r\n    }\r\n    let btnName = '';\r\n    const { buttons } = this._map.pm.Toolbar;\r\n    for (const btn in buttons) {\r\n      if (buttons[btn]._button === this._button) {\r\n        btnName = btn;\r\n        break;\r\n      }\r\n    }\r\n    this._fireButtonClick(btnName, this._button);\r\n  },\r\n\r\n  _clicked() {\r\n    if (this._button.doToggle) {\r\n      this.toggle();\r\n    }\r\n  },\r\n\r\n  _updateDisabled() {\r\n    if (!this._container) {\r\n      return;\r\n    }\r\n\r\n    const className = 'pm-disabled';\r\n    const button = this.buttonsDomNode.children[0];\r\n\r\n    if (this._button.disabled) {\r\n      L.DomUtil.addClass(button, className);\r\n      button.setAttribute('aria-disabled', 'true');\r\n    } else {\r\n      L.DomUtil.removeClass(button, className);\r\n      button.setAttribute('aria-disabled', 'false');\r\n    }\r\n  },\r\n});\r\n\r\nexport default PMButton;\r\n", "import PMButton from './L.Controls';\r\n\r\nimport { getTranslation } from '../helpers';\r\n\r\nL.Control.PMButton = PMButton;\r\n\r\nconst Toolbar = L.Class.extend({\r\n  options: {\r\n    drawMarker: true,\r\n    drawRectangle: true,\r\n    drawPolyline: true,\r\n    drawPolygon: true,\r\n    drawCircle: true,\r\n    drawCircleMarker: true,\r\n    drawText: true,\r\n    editMode: true,\r\n    dragMode: true,\r\n    cutPolygon: true,\r\n    removalMode: true,\r\n    rotateMode: true,\r\n    snappingOption: true,\r\n    drawControls: true,\r\n    editControls: true,\r\n    optionsControls: true,\r\n    customControls: true,\r\n    oneBlock: false,\r\n    position: 'topleft',\r\n    positions: {\r\n      draw: '',\r\n      edit: '',\r\n      options: '',\r\n      custom: '',\r\n    },\r\n  },\r\n  customButtons: [],\r\n  initialize(map) {\r\n    // For some reason there is an reference between multiple maps instances\r\n    this.customButtons = [];\r\n    this.options.positions = {\r\n      draw: '',\r\n      edit: '',\r\n      options: '',\r\n      custom: '',\r\n    };\r\n\r\n    this.init(map);\r\n  },\r\n  reinit() {\r\n    const addControls = this.isVisible;\r\n\r\n    this.removeControls();\r\n    this._defineButtons();\r\n\r\n    if (addControls) {\r\n      this.addControls();\r\n    }\r\n  },\r\n  init(map) {\r\n    this.map = map;\r\n\r\n    this.buttons = {};\r\n    this.isVisible = false;\r\n    this.drawContainer = L.DomUtil.create(\r\n      'div',\r\n      'leaflet-pm-toolbar leaflet-pm-draw leaflet-bar leaflet-control'\r\n    );\r\n    this.editContainer = L.DomUtil.create(\r\n      'div',\r\n      'leaflet-pm-toolbar leaflet-pm-edit leaflet-bar leaflet-control'\r\n    );\r\n    this.optionsContainer = L.DomUtil.create(\r\n      'div',\r\n      'leaflet-pm-toolbar leaflet-pm-options leaflet-bar leaflet-control'\r\n    );\r\n    this.customContainer = L.DomUtil.create(\r\n      'div',\r\n      'leaflet-pm-toolbar leaflet-pm-custom leaflet-bar leaflet-control'\r\n    );\r\n\r\n    this._defineButtons();\r\n  },\r\n  _createContainer(name) {\r\n    const container = `${name}Container`;\r\n    if (!this[container]) {\r\n      this[container] = L.DomUtil.create(\r\n        'div',\r\n        `leaflet-pm-toolbar leaflet-pm-${name} leaflet-bar leaflet-control`\r\n      );\r\n    }\r\n    return this[container];\r\n  },\r\n  getButtons() {\r\n    return this.buttons;\r\n  },\r\n\r\n  addControls(options = this.options) {\r\n    // adds all buttons to the map specified inside options\r\n\r\n    // make button renaming backwards compatible\r\n    if (typeof options.editPolygon !== 'undefined') {\r\n      options.editMode = options.editPolygon;\r\n    }\r\n    if (typeof options.deleteLayer !== 'undefined') {\r\n      options.removalMode = options.deleteLayer;\r\n    }\r\n\r\n    // first set the options\r\n    L.Util.setOptions(this, options);\r\n\r\n    this.applyIconStyle();\r\n\r\n    this.isVisible = true;\r\n    // now show the specified buttons\r\n    this._showHideButtons();\r\n  },\r\n  applyIconStyle() {\r\n    const buttons = this.getButtons();\r\n\r\n    const iconClasses = {\r\n      geomanIcons: {\r\n        drawMarker: 'control-icon leaflet-pm-icon-marker',\r\n        drawPolyline: 'control-icon leaflet-pm-icon-polyline',\r\n        drawRectangle: 'control-icon leaflet-pm-icon-rectangle',\r\n        drawPolygon: 'control-icon leaflet-pm-icon-polygon',\r\n        drawCircle: 'control-icon leaflet-pm-icon-circle',\r\n        drawCircleMarker: 'control-icon leaflet-pm-icon-circle-marker',\r\n        editMode: 'control-icon leaflet-pm-icon-edit',\r\n        dragMode: 'control-icon leaflet-pm-icon-drag',\r\n        cutPolygon: 'control-icon leaflet-pm-icon-cut',\r\n        removalMode: 'control-icon leaflet-pm-icon-delete',\r\n        drawText: 'control-icon leaflet-pm-icon-text',\r\n      },\r\n    };\r\n\r\n    for (const name in buttons) {\r\n      const button = buttons[name];\r\n\r\n      L.Util.setOptions(button, {\r\n        className: iconClasses.geomanIcons[name],\r\n      });\r\n    }\r\n  },\r\n  removeControls() {\r\n    // grab all buttons to loop through\r\n    const buttons = this.getButtons();\r\n\r\n    // remove all buttons\r\n    for (const btn in buttons) {\r\n      buttons[btn].remove();\r\n    }\r\n\r\n    this.isVisible = false;\r\n  },\r\n  toggleControls(options = this.options) {\r\n    if (this.isVisible) {\r\n      this.removeControls();\r\n    } else {\r\n      this.addControls(options);\r\n    }\r\n  },\r\n  _addButton(name, button) {\r\n    this.buttons[name] = button;\r\n    this.options[name] = !!this.options[name] || false;\r\n\r\n    return this.buttons[name];\r\n  },\r\n  triggerClickOnToggledButtons(exceptThisButton) {\r\n    // this function is used when - e.g. drawing mode is enabled and a possible\r\n    // other active mode (like removal tool) is already active.\r\n    // we can't have two active modes because of possible event conflicts\r\n    // so, we trigger a click on all currently active (toggled) buttons\r\n\r\n    for (const name in this.buttons) {\r\n      const button = this.buttons[name];\r\n      if (\r\n        button._button.disableByOtherButtons &&\r\n        button !== exceptThisButton &&\r\n        button.toggled()\r\n      ) {\r\n        button._triggerClick();\r\n      }\r\n    }\r\n  },\r\n  toggleButton(name, status, disableOthers = true) {\r\n    // does not fire the events/functionality of the button\r\n    // this just changes the state and is used if a functionality (like Draw)\r\n    // is enabled manually via script\r\n\r\n    // backwards compatibility with button rename\r\n    if (name === 'editPolygon') {\r\n      name = 'editMode';\r\n    }\r\n    if (name === 'deleteLayer') {\r\n      name = 'removalMode';\r\n    }\r\n\r\n    // as some mode got enabled, we still have to trigger the click on the other buttons\r\n    // to disable their mode\r\n    if (disableOthers) {\r\n      this.triggerClickOnToggledButtons(this.buttons[name]);\r\n    }\r\n\r\n    if (!this.buttons[name]) {\r\n      return false;\r\n    }\r\n    // now toggle the state of the button\r\n    return this.buttons[name].toggle(status);\r\n  },\r\n  _defineButtons() {\r\n    // some buttons are still in their respective classes, like L.PM.Draw.Polygon\r\n    const drawMarkerButton = {\r\n      className: 'control-icon leaflet-pm-icon-marker',\r\n      title: getTranslation('buttonTitles.drawMarkerButton'),\r\n      jsClass: 'Marker',\r\n      onClick: () => {},\r\n      afterClick: (e, ctx) => {\r\n        // toggle drawing mode\r\n        this.map.pm.Draw[ctx.button._button.jsClass].toggle();\r\n      },\r\n      doToggle: true,\r\n      toggleStatus: false,\r\n      disableOtherButtons: true,\r\n      position: this.options.position,\r\n      actions: ['cancel'],\r\n    };\r\n\r\n    const drawPolyButton = {\r\n      title: getTranslation('buttonTitles.drawPolyButton'),\r\n      className: 'control-icon leaflet-pm-icon-polygon',\r\n      jsClass: 'Polygon',\r\n      onClick: () => {},\r\n      afterClick: (e, ctx) => {\r\n        // toggle drawing mode\r\n        this.map.pm.Draw[ctx.button._button.jsClass].toggle();\r\n      },\r\n      doToggle: true,\r\n      toggleStatus: false,\r\n      disableOtherButtons: true,\r\n      position: this.options.position,\r\n      actions: ['finish', 'removeLastVertex', 'cancel'],\r\n    };\r\n\r\n    const drawLineButton = {\r\n      className: 'control-icon leaflet-pm-icon-polyline',\r\n      title: getTranslation('buttonTitles.drawLineButton'),\r\n      jsClass: 'Line',\r\n      onClick: () => {},\r\n      afterClick: (e, ctx) => {\r\n        // toggle drawing mode\r\n        this.map.pm.Draw[ctx.button._button.jsClass].toggle();\r\n      },\r\n      doToggle: true,\r\n      toggleStatus: false,\r\n      disableOtherButtons: true,\r\n      position: this.options.position,\r\n      actions: ['finish', 'removeLastVertex', 'cancel'],\r\n    };\r\n\r\n    const drawCircleButton = {\r\n      title: getTranslation('buttonTitles.drawCircleButton'),\r\n      className: 'control-icon leaflet-pm-icon-circle',\r\n      jsClass: 'Circle',\r\n      onClick: () => {},\r\n      afterClick: (e, ctx) => {\r\n        // toggle drawing mode\r\n        this.map.pm.Draw[ctx.button._button.jsClass].toggle();\r\n      },\r\n      doToggle: true,\r\n      toggleStatus: false,\r\n      disableOtherButtons: true,\r\n      position: this.options.position,\r\n      actions: ['cancel'],\r\n    };\r\n\r\n    const drawCircleMarkerButton = {\r\n      title: getTranslation('buttonTitles.drawCircleMarkerButton'),\r\n      className: 'control-icon leaflet-pm-icon-circle-marker',\r\n      jsClass: 'CircleMarker',\r\n      onClick: () => {},\r\n      afterClick: (e, ctx) => {\r\n        // toggle drawing mode\r\n        this.map.pm.Draw[ctx.button._button.jsClass].toggle();\r\n      },\r\n      doToggle: true,\r\n      toggleStatus: false,\r\n      disableOtherButtons: true,\r\n      position: this.options.position,\r\n      actions: ['cancel'],\r\n    };\r\n\r\n    const drawRectButton = {\r\n      title: getTranslation('buttonTitles.drawRectButton'),\r\n      className: 'control-icon leaflet-pm-icon-rectangle',\r\n      jsClass: 'Rectangle',\r\n      onClick: () => {},\r\n      afterClick: (e, ctx) => {\r\n        // toggle drawing mode\r\n        this.map.pm.Draw[ctx.button._button.jsClass].toggle();\r\n      },\r\n      doToggle: true,\r\n      toggleStatus: false,\r\n      disableOtherButtons: true,\r\n      position: this.options.position,\r\n      actions: ['cancel'],\r\n    };\r\n\r\n    const editButton = {\r\n      title: getTranslation('buttonTitles.editButton'),\r\n      className: 'control-icon leaflet-pm-icon-edit',\r\n      onClick: () => {},\r\n      afterClick: () => {\r\n        this.map.pm.toggleGlobalEditMode();\r\n      },\r\n      doToggle: true,\r\n      toggleStatus: false,\r\n      disableOtherButtons: true,\r\n      position: this.options.position,\r\n      tool: 'edit',\r\n      actions: ['finishMode'],\r\n    };\r\n\r\n    const dragButton = {\r\n      title: getTranslation('buttonTitles.dragButton'),\r\n      className: 'control-icon leaflet-pm-icon-drag',\r\n      onClick: () => {},\r\n      afterClick: () => {\r\n        this.map.pm.toggleGlobalDragMode();\r\n      },\r\n      doToggle: true,\r\n      toggleStatus: false,\r\n      disableOtherButtons: true,\r\n      position: this.options.position,\r\n      tool: 'edit',\r\n      actions: ['finishMode'],\r\n    };\r\n\r\n    const cutButton = {\r\n      title: getTranslation('buttonTitles.cutButton'),\r\n      className: 'control-icon leaflet-pm-icon-cut',\r\n      jsClass: 'Cut',\r\n      onClick: () => {},\r\n      afterClick: (e, ctx) => {\r\n        // enable polygon drawing mode without snap\r\n        this.map.pm.Draw[ctx.button._button.jsClass].toggle({\r\n          snappable: true,\r\n          cursorMarker: true,\r\n          allowSelfIntersection: false,\r\n        });\r\n      },\r\n      doToggle: true,\r\n      toggleStatus: false,\r\n      disableOtherButtons: true,\r\n      position: this.options.position,\r\n      tool: 'edit',\r\n      actions: ['finish', 'removeLastVertex', 'cancel'],\r\n    };\r\n\r\n    const deleteButton = {\r\n      title: getTranslation('buttonTitles.deleteButton'),\r\n      className: 'control-icon leaflet-pm-icon-delete',\r\n      onClick: () => {},\r\n      afterClick: () => {\r\n        this.map.pm.toggleGlobalRemovalMode();\r\n      },\r\n      doToggle: true,\r\n      toggleStatus: false,\r\n      disableOtherButtons: true,\r\n      position: this.options.position,\r\n      tool: 'edit',\r\n      actions: ['finishMode'],\r\n    };\r\n\r\n    const rotateButton = {\r\n      title: getTranslation('buttonTitles.rotateButton'),\r\n      className: 'control-icon leaflet-pm-icon-rotate',\r\n      onClick: () => {},\r\n      afterClick: () => {\r\n        this.map.pm.toggleGlobalRotateMode();\r\n      },\r\n      doToggle: true,\r\n      toggleStatus: false,\r\n      disableOtherButtons: true,\r\n      position: this.options.position,\r\n      tool: 'edit',\r\n      actions: ['finishMode'],\r\n    };\r\n\r\n    const drawTextButton = {\r\n      className: 'control-icon leaflet-pm-icon-text',\r\n      title: getTranslation('buttonTitles.drawTextButton'),\r\n      jsClass: 'Text',\r\n      onClick: () => {},\r\n      afterClick: (e, ctx) => {\r\n        // toggle drawing mode\r\n        this.map.pm.Draw[ctx.button._button.jsClass].toggle();\r\n      },\r\n      doToggle: true,\r\n      toggleStatus: false,\r\n      disableOtherButtons: true,\r\n      position: this.options.position,\r\n      actions: ['cancel'],\r\n    };\r\n\r\n    this._addButton('drawMarker', new L.Control.PMButton(drawMarkerButton));\r\n    this._addButton('drawPolyline', new L.Control.PMButton(drawLineButton));\r\n    this._addButton('drawRectangle', new L.Control.PMButton(drawRectButton));\r\n    this._addButton('drawPolygon', new L.Control.PMButton(drawPolyButton));\r\n    this._addButton('drawCircle', new L.Control.PMButton(drawCircleButton));\r\n    this._addButton(\r\n      'drawCircleMarker',\r\n      new L.Control.PMButton(drawCircleMarkerButton)\r\n    );\r\n    this._addButton('drawText', new L.Control.PMButton(drawTextButton));\r\n    this._addButton('editMode', new L.Control.PMButton(editButton));\r\n    this._addButton('dragMode', new L.Control.PMButton(dragButton));\r\n    this._addButton('cutPolygon', new L.Control.PMButton(cutButton));\r\n    this._addButton('removalMode', new L.Control.PMButton(deleteButton));\r\n    this._addButton('rotateMode', new L.Control.PMButton(rotateButton));\r\n  },\r\n\r\n  _showHideButtons() {\r\n    // if Toolbar is not visible, we don't need to update button positions\r\n    if (!this.isVisible) {\r\n      return;\r\n    }\r\n\r\n    // remove all buttons, that's because the Toolbar can be added again with\r\n    // different options so it's basically a reset and add again\r\n    this.removeControls();\r\n    // we need to set isVisible = true again, because removeControls() set it to false\r\n    this.isVisible = true;\r\n\r\n    const buttons = this.getButtons();\r\n    let ignoreBtns = [];\r\n\r\n    if (this.options.drawControls === false) {\r\n      ignoreBtns = ignoreBtns.concat(\r\n        Object.keys(buttons).filter((btn) => !buttons[btn]._button.tool)\r\n      );\r\n    }\r\n    if (this.options.editControls === false) {\r\n      ignoreBtns = ignoreBtns.concat(\r\n        Object.keys(buttons).filter(\r\n          (btn) => buttons[btn]._button.tool === 'edit'\r\n        )\r\n      );\r\n    }\r\n    if (this.options.optionsControls === false) {\r\n      ignoreBtns = ignoreBtns.concat(\r\n        Object.keys(buttons).filter(\r\n          (btn) => buttons[btn]._button.tool === 'options'\r\n        )\r\n      );\r\n    }\r\n    if (this.options.customControls === false) {\r\n      ignoreBtns = ignoreBtns.concat(\r\n        Object.keys(buttons).filter(\r\n          (btn) => buttons[btn]._button.tool === 'custom'\r\n        )\r\n      );\r\n    }\r\n\r\n    for (const btn in buttons) {\r\n      if (this.options[btn] && ignoreBtns.indexOf(btn) === -1) {\r\n        // if options say the button should be visible, add it to the map\r\n        let block = buttons[btn]._button.tool;\r\n        if (!block) {\r\n          // undefined is the draw block\r\n          block = 'draw';\r\n        }\r\n        buttons[btn].setPosition(this._getBtnPosition(block));\r\n        buttons[btn].addTo(this.map);\r\n      }\r\n    }\r\n  },\r\n  _getBtnPosition(block) {\r\n    return this.options.positions && this.options.positions[block]\r\n      ? this.options.positions[block]\r\n      : this.options.position;\r\n  },\r\n  setBlockPosition(block, position) {\r\n    this.options.positions[block] = position;\r\n    this._showHideButtons();\r\n    this.changeControlOrder();\r\n  },\r\n  getBlockPositions() {\r\n    return this.options.positions;\r\n  },\r\n  copyDrawControl(copyInstance, options) {\r\n    if (!options) {\r\n      throw new TypeError('Button has no name');\r\n    } else if (typeof options !== 'object') {\r\n      // if only the name is passed and no options object\r\n      options = { name: options };\r\n    }\r\n\r\n    const instance = this._btnNameMapping(copyInstance);\r\n\r\n    if (!options.name) {\r\n      throw new TypeError('Button has no name');\r\n    }\r\n\r\n    if (this.buttons[options.name]) {\r\n      throw new TypeError('Button with this name already exists');\r\n    }\r\n    const drawInstance = this.map.pm.Draw.createNewDrawInstance(\r\n      options.name,\r\n      instance\r\n    );\r\n\r\n    const btn = this.buttons[instance]._button;\r\n    options = { ...btn, ...options };\r\n    const control = this.createCustomControl(options);\r\n    return { drawInstance, control };\r\n  },\r\n  createCustomControl(options) {\r\n    if (!options.name) {\r\n      throw new TypeError('Button has no name');\r\n    }\r\n\r\n    if (this.buttons[options.name]) {\r\n      throw new TypeError('Button with this name already exists');\r\n    }\r\n    if (!options.onClick) {\r\n      options.onClick = () => {};\r\n    }\r\n    if (!options.afterClick) {\r\n      options.afterClick = () => {};\r\n    }\r\n    if (options.toggle !== false) {\r\n      options.toggle = true;\r\n    }\r\n\r\n    if (options.block) {\r\n      options.block = options.block.toLowerCase();\r\n    }\r\n    if (!options.block || options.block === 'draw') {\r\n      options.block = '';\r\n    }\r\n\r\n    if (!options.className) {\r\n      options.className = 'control-icon';\r\n    } else if (options.className.indexOf('control-icon') === -1) {\r\n      options.className = `control-icon ${options.className}`;\r\n    }\r\n\r\n    const _options = {\r\n      tool: options.block,\r\n      className: options.className,\r\n      title: options.title || '',\r\n      jsClass: options.name,\r\n      onClick: options.onClick,\r\n      afterClick: options.afterClick,\r\n      doToggle: options.toggle,\r\n      toggleStatus: false,\r\n      disableOtherButtons: options.disableOtherButtons ?? true,\r\n      disableByOtherButtons: options.disableByOtherButtons ?? true,\r\n      cssToggle: options.toggle,\r\n      position: this.options.position,\r\n      actions: options.actions || [],\r\n      disabled: !!options.disabled,\r\n    };\r\n\r\n    if (this.options[options.name] !== false) {\r\n      this.options[options.name] = true;\r\n    }\r\n\r\n    const control = this._addButton(\r\n      options.name,\r\n      new L.Control.PMButton(_options)\r\n    );\r\n    this.changeControlOrder();\r\n    return control;\r\n  },\r\n  controlExists(name) {\r\n    return Boolean(this.getButton(name));\r\n  },\r\n  getButton(name) {\r\n    return this.getButtons()[name];\r\n  },\r\n  getButtonsInBlock(name) {\r\n    const buttonsInBlock = {};\r\n    if (name) {\r\n      for (const buttonName in this.getButtons()) {\r\n        const button = this.getButtons()[buttonName];\r\n        // draw controls doesn't have a block\r\n        if (\r\n          button._button.tool === name ||\r\n          (name === 'draw' && !button._button.tool)\r\n        ) {\r\n          buttonsInBlock[buttonName] = button;\r\n        }\r\n      }\r\n    }\r\n    return buttonsInBlock;\r\n  },\r\n  changeControlOrder(order = []) {\r\n    const shapeMapping = this._shapeMapping();\r\n\r\n    const _order = [];\r\n    order.forEach((shape) => {\r\n      if (shapeMapping[shape]) {\r\n        _order.push(shapeMapping[shape]);\r\n      } else {\r\n        _order.push(shape);\r\n      }\r\n    });\r\n\r\n    const buttons = this.getButtons();\r\n\r\n    // This steps are needed to create a new Object which contains the buttons in the correct sorted order.\r\n    const newbtnorder = {};\r\n    _order.forEach((control) => {\r\n      if (buttons[control]) {\r\n        newbtnorder[control] = buttons[control];\r\n      }\r\n    });\r\n\r\n    const drawBtns = Object.keys(buttons).filter(\r\n      (btn) => !buttons[btn]._button.tool\r\n    );\r\n    drawBtns.forEach((btn) => {\r\n      if (_order.indexOf(btn) === -1) {\r\n        newbtnorder[btn] = buttons[btn];\r\n      }\r\n    });\r\n    const editBtns = Object.keys(buttons).filter(\r\n      (btn) => buttons[btn]._button.tool === 'edit'\r\n    );\r\n    editBtns.forEach((btn) => {\r\n      if (_order.indexOf(btn) === -1) {\r\n        newbtnorder[btn] = buttons[btn];\r\n      }\r\n    });\r\n    const optionsBtns = Object.keys(buttons).filter(\r\n      (btn) => buttons[btn]._button.tool === 'options'\r\n    );\r\n    optionsBtns.forEach((btn) => {\r\n      if (_order.indexOf(btn) === -1) {\r\n        newbtnorder[btn] = buttons[btn];\r\n      }\r\n    });\r\n    const customBtns = Object.keys(buttons).filter(\r\n      (btn) => buttons[btn]._button.tool === 'custom'\r\n    );\r\n    customBtns.forEach((btn) => {\r\n      if (_order.indexOf(btn) === -1) {\r\n        newbtnorder[btn] = buttons[btn];\r\n      }\r\n    });\r\n    // To add all other buttons they are not in a container from above (maybe added manually by a developer)\r\n    Object.keys(buttons).forEach((btn) => {\r\n      if (_order.indexOf(btn) === -1) {\r\n        newbtnorder[btn] = buttons[btn];\r\n      }\r\n    });\r\n\r\n    this.map.pm.Toolbar.buttons = newbtnorder;\r\n    this._showHideButtons();\r\n  },\r\n  getControlOrder() {\r\n    const buttons = this.getButtons();\r\n    const order = [];\r\n    for (const btn in buttons) {\r\n      order.push(btn);\r\n    }\r\n    return order;\r\n  },\r\n  changeActionsOfControl(name, actions) {\r\n    const btnName = this._btnNameMapping(name);\r\n\r\n    if (!btnName) {\r\n      throw new TypeError('No name passed');\r\n    }\r\n    if (!actions) {\r\n      throw new TypeError('No actions passed');\r\n    }\r\n\r\n    if (!this.buttons[btnName]) {\r\n      throw new TypeError('Button with this name not exists');\r\n    }\r\n    this.buttons[btnName]._button.actions = actions;\r\n    this.changeControlOrder();\r\n  },\r\n  setButtonDisabled(name, state) {\r\n    const btnName = this._btnNameMapping(name);\r\n    if (state) {\r\n      this.buttons[btnName].disable();\r\n    } else {\r\n      this.buttons[btnName].enable();\r\n    }\r\n  },\r\n  _shapeMapping() {\r\n    return {\r\n      Marker: 'drawMarker',\r\n      Circle: 'drawCircle',\r\n      Polygon: 'drawPolygon',\r\n      Rectangle: 'drawRectangle',\r\n      Polyline: 'drawPolyline',\r\n      Line: 'drawPolyline',\r\n      CircleMarker: 'drawCircleMarker',\r\n      Edit: 'editMode',\r\n      Drag: 'dragMode',\r\n      Cut: 'cutPolygon',\r\n      Removal: 'removalMode',\r\n      Rotate: 'rotateMode',\r\n      Text: 'drawText',\r\n    };\r\n  },\r\n  _btnNameMapping(name) {\r\n    const shapeMapping = this._shapeMapping();\r\n    return shapeMapping[name] ? shapeMapping[name] : name;\r\n  },\r\n});\r\n\r\nexport default Toolbar;\r\n", "import { hasValues, prioritiseSort } from '../helpers';\r\n\r\nconst SnapMixin = {\r\n  _initSnappableMarkers() {\r\n    this.options.snapDistance = this.options.snapDistance || 30;\r\n    this.options.snapSegment =\r\n      this.options.snapSegment === undefined ? true : this.options.snapSegment;\r\n\r\n    this._assignEvents(this._markers);\r\n\r\n    this._layer.off('pm:dragstart', this._unsnap, this);\r\n    this._layer.on('pm:dragstart', this._unsnap, this);\r\n  },\r\n  _disableSnapping() {\r\n    this._layer.off('pm:dragstart', this._unsnap, this);\r\n  },\r\n  _assignEvents(markerArr) {\r\n    // loop through marker array and assign events to the markers\r\n    markerArr.forEach((marker) => {\r\n      // if the marker is another array (Multipolygon stuff), recursively do this again\r\n      if (Array.isArray(marker)) {\r\n        this._assignEvents(marker);\r\n        return;\r\n      }\r\n\r\n      // add handleSnapping event on drag\r\n      marker.off('drag', this._handleSnapping, this);\r\n      marker.on('drag', this._handleSnapping, this);\r\n\r\n      // cleanup event on dragend\r\n      marker.off('dragend', this._cleanupSnapping, this);\r\n      marker.on('dragend', this._cleanupSnapping, this);\r\n    });\r\n  },\r\n  _cleanupSnapping(e) {\r\n    if (e) {\r\n      // reset snap flag of the dragged helper-marker\r\n      const marker = e.target;\r\n      marker._snapped = false;\r\n    }\r\n    // delete it, we need to refresh this with each start of a drag because\r\n    // meanwhile, new layers could've been added to the map\r\n    delete this._snapList;\r\n\r\n    if (this.throttledList) {\r\n      this._map.off('layeradd', this.throttledList, this);\r\n      this.throttledList = undefined;\r\n    }\r\n\r\n    // remove map event\r\n    this._map.off('layerremove', this._handleSnapLayerRemoval, this);\r\n\r\n    if (this.debugIndicatorLines) {\r\n      this.debugIndicatorLines.forEach((line) => {\r\n        line.remove();\r\n      });\r\n    }\r\n  },\r\n  _handleThrottleSnapping() {\r\n    // we check if the throttledList is existing, else the function is deleted but the `layeradd` event calls it.\r\n    // this made problems when layer was removed and added to the map in the `pm:create` event\r\n    if (this.throttledList) {\r\n      this._createSnapList();\r\n    }\r\n  },\r\n  _handleSnapping(e) {\r\n    const marker = e.target;\r\n    marker._snapped = false;\r\n\r\n    if (!this.throttledList) {\r\n      this.throttledList = L.Util.throttle(\r\n        this._handleThrottleSnapping,\r\n        100,\r\n        this\r\n      );\r\n    }\r\n\r\n    // if snapping is disabled via holding ALT during drag, stop right here\r\n    // we need to check for the altKey on the move event, because keydown event is to slow ...\r\n    if (e?.originalEvent?.altKey || this._map?.pm?.Keyboard.isAltKeyPressed()) {\r\n      return false;\r\n    }\r\n\r\n    // create a list of layers that the marker could snap to\r\n    // this isn't inside a movestart/dragstart callback because middlemarkers are initialized\r\n    // after dragstart/movestart so it wouldn't fire for them\r\n    if (this._snapList === undefined) {\r\n      this._createSnapList();\r\n\r\n      // re-create the snaplist again when a layer is added during draw\r\n      this._map.off('layeradd', this.throttledList, this);\r\n      this._map.on('layeradd', this.throttledList, this);\r\n    }\r\n\r\n    // if there are no layers to snap to, stop here\r\n    if (this._snapList.length <= 0) {\r\n      return false;\r\n    }\r\n\r\n    // get the closest layer, it's closest latlng, segment and the distance\r\n    const closestLayer = this._calcClosestLayer(\r\n      marker.getLatLng(),\r\n      this._snapList\r\n    );\r\n\r\n    // if no layers found. Can happen when circle is the only visible layer on the map and the hidden snapping-border circle layer is also on the map\r\n    if (Object.keys(closestLayer).length === 0) {\r\n      return false;\r\n    }\r\n\r\n    const isMarker =\r\n      closestLayer.layer instanceof L.Marker ||\r\n      closestLayer.layer instanceof L.CircleMarker ||\r\n      !this.options.snapSegment;\r\n\r\n    // find the final latlng that we want to snap to\r\n    let snapLatLng;\r\n    if (!isMarker) {\r\n      snapLatLng = this._checkPrioritiySnapping(closestLayer);\r\n    } else {\r\n      snapLatLng = closestLayer.latlng;\r\n    }\r\n\r\n    // minimal distance before marker snaps (in pixels)\r\n    const minDistance = this.options.snapDistance;\r\n\r\n    // event info for pm:snap and pm:unsnap\r\n    const eventInfo = {\r\n      marker,\r\n      shape: this._shape,\r\n      snapLatLng,\r\n      segment: closestLayer.segment,\r\n      layer: this._layer,\r\n      workingLayer: this._layer,\r\n      layerInteractedWith: closestLayer.layer, // for lack of a better property name\r\n      distance: closestLayer.distance,\r\n    };\r\n\r\n    this._fireSnapDrag(eventInfo.marker, eventInfo);\r\n    this._fireSnapDrag(this._layer, eventInfo);\r\n\r\n    if (closestLayer.distance < minDistance) {\r\n      // snap the marker\r\n      marker._orgLatLng = marker.getLatLng();\r\n      // TODO: if the origin marker has a altitude is applied to the snapped layer too, do we want this?\r\n      marker.setLatLng(snapLatLng);\r\n\r\n      marker._snapped = true;\r\n      marker._snapInfo = eventInfo;\r\n\r\n      const triggerSnap = () => {\r\n        this._snapLatLng = snapLatLng;\r\n        this._fireSnap(marker, eventInfo);\r\n        this._fireSnap(this._layer, eventInfo);\r\n      };\r\n\r\n      // check if the snapping position differs from the last snap\r\n      // Thanks Max & car2go Team\r\n      const a = this._snapLatLng || {};\r\n      const b = snapLatLng || {};\r\n\r\n      if (a.lat !== b.lat || a.lng !== b.lng) {\r\n        triggerSnap();\r\n      }\r\n    } else if (this._snapLatLng) {\r\n      // no more snapping\r\n\r\n      // if it was previously snapped...\r\n      // ...unsnap\r\n      this._unsnap(eventInfo);\r\n\r\n      marker._snapped = false;\r\n      marker._snapInfo = undefined;\r\n\r\n      // and fire unsnap event\r\n      this._fireUnsnap(eventInfo.marker, eventInfo);\r\n      this._fireUnsnap(this._layer, eventInfo);\r\n    }\r\n\r\n    return true;\r\n  },\r\n  _createSnapList() {\r\n    let layers = [];\r\n    const debugIndicatorLines = [];\r\n    const map = this._map;\r\n\r\n    map.off('layerremove', this._handleSnapLayerRemoval, this);\r\n    map.on('layerremove', this._handleSnapLayerRemoval, this);\r\n\r\n    // find all layers that are or inherit from Polylines... and markers that are not\r\n    // temporary markers of polygon-edits\r\n    map.eachLayer((layer) => {\r\n      if (\r\n        (layer instanceof L.Polyline ||\r\n          layer instanceof L.Marker ||\r\n          layer instanceof L.CircleMarker ||\r\n          layer instanceof L.ImageOverlay) &&\r\n        layer.options.snapIgnore !== true\r\n      ) {\r\n        // if snapIgnore === false the layer will be always snappable\r\n        if (\r\n          layer.options.snapIgnore === undefined &&\r\n          ((!L.PM.optIn && layer.options.pmIgnore === true) || // if optIn is not set and pmIgnore is true, the layer will be ignored\r\n            (L.PM.optIn && layer.options.pmIgnore !== false)) // if optIn is true and pmIgnore is not false, the layer will be ignored\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        // adds a hidden polygon which matches the border of the circle\r\n        if (\r\n          (layer instanceof L.Circle || layer instanceof L.CircleMarker) &&\r\n          layer.pm &&\r\n          layer.pm._hiddenPolyCircle\r\n        ) {\r\n          layers.push(layer.pm._hiddenPolyCircle);\r\n        } else if (layer instanceof L.ImageOverlay) {\r\n          layer = L.rectangle(layer.getBounds());\r\n        }\r\n        layers.push(layer);\r\n\r\n        // this is for debugging\r\n        const debugLine = L.polyline([], { color: 'red', pmIgnore: true });\r\n        debugLine._pmTempLayer = true;\r\n        debugIndicatorLines.push(debugLine);\r\n        if (layer instanceof L.Circle || layer instanceof L.CircleMarker) {\r\n          debugIndicatorLines.push(debugLine);\r\n        }\r\n\r\n        // uncomment \uD83D\uDC47 this line to show helper lines for debugging\r\n        // debugLine.addTo(map);\r\n      }\r\n    });\r\n\r\n    // ...except myself\r\n    layers = layers.filter((layer) => this._layer !== layer);\r\n\r\n    // also remove everything that has no coordinates yet\r\n    layers = layers.filter(\r\n      (layer) => layer._latlng || (layer._latlngs && hasValues(layer._latlngs))\r\n    );\r\n\r\n    // finally remove everything that's leaflet-geoman specific temporary stuff\r\n    layers = layers.filter((layer) => !layer._pmTempLayer);\r\n\r\n    // save snaplist from layers and the other snap layers added from other classes/scripts\r\n    if (this._otherSnapLayers) {\r\n      this._otherSnapLayers.forEach(() => {\r\n        // this is for debugging\r\n        const debugLine = L.polyline([], { color: 'red', pmIgnore: true });\r\n        debugLine._pmTempLayer = true;\r\n        debugIndicatorLines.push(debugLine);\r\n      });\r\n      this._snapList = layers.concat(this._otherSnapLayers);\r\n    } else {\r\n      this._snapList = layers;\r\n    }\r\n\r\n    this.debugIndicatorLines = debugIndicatorLines;\r\n  },\r\n  _handleSnapLayerRemoval({ layer }) {\r\n    if (!layer._leaflet_id) {\r\n      return;\r\n    }\r\n    // find the layers index in snaplist\r\n    const index = this._snapList.findIndex(\r\n      (e) => e._leaflet_id === layer._leaflet_id\r\n    );\r\n    if (index > -1) {\r\n      // remove it from the snaplist\r\n      this._snapList.splice(index, 1);\r\n    }\r\n  },\r\n  _calcClosestLayer(latlng, layers) {\r\n    return this._calcClosestLayers(latlng, layers, 1)[0];\r\n  },\r\n  _calcClosestLayers(latlng, layers, amount = 1) {\r\n    // the closest polygon to our dragged marker latlng\r\n    let closestLayers = [];\r\n    let closestLayer = {};\r\n\r\n    // loop through the layers\r\n    layers.forEach((layer, index) => {\r\n      // For Circles and CircleMarkers to prevent that they snap to the own borders.\r\n      if (layer._parentCopy && layer._parentCopy === this._layer) {\r\n        return;\r\n      }\r\n      // find the closest latlng, segment and the distance of this layer to the dragged marker latlng\r\n      const results = this._calcLayerDistances(latlng, layer);\r\n      results.distance = Math.floor(results.distance);\r\n\r\n      if (this.debugIndicatorLines) {\r\n        if (!this.debugIndicatorLines[index]) {\r\n          const debugLine = L.polyline([], { color: 'red', pmIgnore: true });\r\n          debugLine._pmTempLayer = true;\r\n          this.debugIndicatorLines[index] = debugLine;\r\n        }\r\n\r\n        // show indicator lines, it's for debugging\r\n        this.debugIndicatorLines[index].setLatLngs([latlng, results.latlng]);\r\n      }\r\n\r\n      // save the info if it doesn't exist or if the distance is smaller than the previous one\r\n      if (\r\n        amount === 1 &&\r\n        (closestLayer.distance === undefined ||\r\n          results.distance - 5 <= closestLayer.distance)\r\n      ) {\r\n        // if the layer is less then 5 pixels away, we treat it as same distance and sort it based on priority\r\n        if (results.distance + 5 < closestLayer.distance) {\r\n          closestLayers = [];\r\n        }\r\n        closestLayer = results;\r\n        closestLayer.layer = layer;\r\n        closestLayers.push(closestLayer);\r\n      } else if (amount !== 1) {\r\n        closestLayer = {};\r\n        closestLayer = results;\r\n        closestLayer.layer = layer;\r\n        closestLayers.push(closestLayer);\r\n      }\r\n    });\r\n    if (amount !== 1) {\r\n      // sort the layers by distance\r\n      closestLayers = closestLayers.sort((a, b) => a.distance - b.distance);\r\n    }\r\n\r\n    if (amount === -1) {\r\n      amount = closestLayers.length;\r\n    }\r\n\r\n    // return the closest layer and it's data\r\n    // if there is no closest layer, return an empty object\r\n    const result = this._getClosestLayerByPriority(closestLayers, amount);\r\n    if (L.Util.isArray(result)) {\r\n      return result;\r\n    }\r\n    return [result];\r\n  },\r\n  _calcLayerDistances(latlng, layer) {\r\n    const map = this._map;\r\n\r\n    // is this a marker?\r\n    const isMarker =\r\n      layer instanceof L.Marker || layer instanceof L.CircleMarker;\r\n\r\n    // is it a polygon?\r\n    const isPolygon = layer instanceof L.Polygon;\r\n\r\n    // the point P which we want to snap (probpably the marker that is dragged)\r\n    const P = latlng;\r\n\r\n    // the coords of the layer\r\n\r\n    if (isMarker) {\r\n      // return the info for the marker, no more calculations needed\r\n      const latlngs = layer.getLatLng();\r\n      return {\r\n        latlng: { ...latlngs },\r\n        distance: this._getDistance(map, latlngs, P),\r\n      };\r\n    }\r\n\r\n    return this._calcLatLngDistances(P, layer.getLatLngs(), map, isPolygon);\r\n  },\r\n  _calcLatLngDistances(latlng, latlngs, map, closedShape = false) {\r\n    // the closest coord of the layer\r\n    let closestCoord;\r\n\r\n    // the shortest distance from latlng to closestCoord\r\n    let shortestDistance;\r\n\r\n    // the closest segment (line between two points) of the layer\r\n    let closestSegment;\r\n\r\n    const loopThroughCoords = (coords) => {\r\n      coords.forEach((coord, index) => {\r\n        if (Array.isArray(coord)) {\r\n          loopThroughCoords(coord);\r\n          return;\r\n        }\r\n\r\n        if (this.options.snapSegment) {\r\n          // take this coord (A)...\r\n          const A = coord;\r\n          let nextIndex;\r\n\r\n          // and the next coord (B) as points\r\n          if (closedShape) {\r\n            nextIndex = index + 1 === coords.length ? 0 : index + 1;\r\n          } else {\r\n            nextIndex = index + 1 === coords.length ? undefined : index + 1;\r\n          }\r\n\r\n          const B = coords[nextIndex];\r\n          if (B) {\r\n            // calc the distance between latlng and AB-segment\r\n            const distance = this._getDistanceToSegment(map, latlng, A, B);\r\n\r\n            // is the distance shorter than the previous one? Save it and the segment\r\n            if (shortestDistance === undefined || distance < shortestDistance) {\r\n              shortestDistance = distance;\r\n              closestSegment = [A, B];\r\n            }\r\n          }\r\n        } else {\r\n          // Only snap on the coords\r\n          const distancePoint = this._getDistance(map, latlng, coord);\r\n\r\n          if (\r\n            shortestDistance === undefined ||\r\n            distancePoint < shortestDistance\r\n          ) {\r\n            shortestDistance = distancePoint;\r\n            closestCoord = coord;\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    loopThroughCoords(latlngs);\r\n\r\n    if (this.options.snapSegment) {\r\n      // now, take the closest segment (closestSegment) and calc the closest point to latlng on it.\r\n      const C = this._getClosestPointOnSegment(\r\n        map,\r\n        latlng,\r\n        closestSegment[0],\r\n        closestSegment[1]\r\n      );\r\n\r\n      // return the latlng of that sucker\r\n      return {\r\n        latlng: { ...C },\r\n        segment: closestSegment,\r\n        distance: shortestDistance,\r\n      };\r\n    }\r\n    // Only snap on the coords\r\n    // return the closest coord\r\n    return {\r\n      latlng: closestCoord,\r\n      distance: shortestDistance,\r\n    };\r\n  },\r\n  _getClosestLayerByPriority(layers, amount = 1) {\r\n    // sort the layers by creation, so it is snapping to the oldest layer from the same shape\r\n    layers = layers.sort((a, b) => a._leaflet_id - b._leaflet_id);\r\n\r\n    const shapes = [\r\n      'Marker',\r\n      'CircleMarker',\r\n      'Circle',\r\n      'Line',\r\n      'Polygon',\r\n      'Rectangle',\r\n    ];\r\n    const order = this._map.pm.globalOptions.snappingOrder || [];\r\n\r\n    let lastIndex = 0;\r\n    const prioOrder = {};\r\n    // merge user-preferred priority with default priority\r\n    order.concat(shapes).forEach((shape) => {\r\n      if (!prioOrder[shape]) {\r\n        lastIndex += 1;\r\n        prioOrder[shape] = lastIndex;\r\n      }\r\n    });\r\n\r\n    // sort layers by priority\r\n    layers.sort(prioritiseSort('instanceofShape', prioOrder));\r\n    if (amount === 1) {\r\n      return layers[0] || {};\r\n    }\r\n    return layers.slice(0, amount);\r\n  },\r\n  // we got the point we want to snap to (C), but we need to check if a coord of the polygon\r\n  // receives priority over C as the snapping point. Let's check this here\r\n  _checkPrioritiySnapping(closestLayer) {\r\n    const map = this._map;\r\n\r\n    // A and B are the points of the closest segment to P (the marker position we want to snap)\r\n    const A = closestLayer.segment[0];\r\n    const B = closestLayer.segment[1];\r\n\r\n    // C is the point we would snap to on the segment.\r\n    // The closest point on the closest segment of the closest polygon to P. That's right.\r\n    const C = closestLayer.latlng;\r\n\r\n    // distances from A to C and B to C to check which one is closer to C\r\n    const distanceAC = this._getDistance(map, A, C);\r\n    const distanceBC = this._getDistance(map, B, C);\r\n\r\n    // closest latlng of A and B to C\r\n    let closestVertexLatLng = distanceAC < distanceBC ? A : B;\r\n\r\n    // distance between closestVertexLatLng and C\r\n    let shortestDistance = distanceAC < distanceBC ? distanceAC : distanceBC;\r\n\r\n    // snap to middle (M) of segment if option is enabled\r\n    if (this.options.snapMiddle) {\r\n      const M = L.PM.Utils.calcMiddleLatLng(map, A, B);\r\n      const distanceMC = this._getDistance(map, M, C);\r\n\r\n      if (distanceMC < distanceAC && distanceMC < distanceBC) {\r\n        // M is the nearest vertex\r\n        closestVertexLatLng = M;\r\n        shortestDistance = distanceMC;\r\n      }\r\n    }\r\n\r\n    // the distance that needs to be undercut to trigger priority\r\n    const priorityDistance = this.options.snapDistance;\r\n\r\n    // the latlng we ultemately want to snap to\r\n    let snapLatlng;\r\n\r\n    // if C is closer to the closestVertexLatLng (A, B or M) than the snapDistance,\r\n    // the closestVertexLatLng has priority over C as the snapping point.\r\n    if (shortestDistance < priorityDistance) {\r\n      snapLatlng = closestVertexLatLng;\r\n    } else {\r\n      snapLatlng = C;\r\n    }\r\n\r\n    // return the copy of snapping point\r\n    return { ...snapLatlng };\r\n  },\r\n  _unsnap() {\r\n    // delete the last snap\r\n    delete this._snapLatLng;\r\n  },\r\n  _getClosestPointOnSegment(map, latlng, latlngA, latlngB) {\r\n    let maxzoom = map.getMaxZoom();\r\n    if (maxzoom === Infinity) {\r\n      maxzoom = map.getZoom();\r\n    }\r\n    const P = map.project(latlng, maxzoom);\r\n    const A = map.project(latlngA, maxzoom);\r\n    const B = map.project(latlngB, maxzoom);\r\n    const closest = L.LineUtil.closestPointOnSegment(P, A, B);\r\n    return map.unproject(closest, maxzoom);\r\n  },\r\n  _getDistanceToSegment(map, latlng, latlngA, latlngB) {\r\n    const P = map.latLngToLayerPoint(latlng);\r\n    const A = map.latLngToLayerPoint(latlngA);\r\n    const B = map.latLngToLayerPoint(latlngB);\r\n    return L.LineUtil.pointToSegmentDistance(P, A, B);\r\n  },\r\n  _getDistance(map, latlngA, latlngB) {\r\n    return map\r\n      .latLngToLayerPoint(latlngA)\r\n      .distanceTo(map.latLngToLayerPoint(latlngB));\r\n  },\r\n};\r\n\r\nexport default SnapMixin;\r\n", "import SnapMixin from '../Mixins/Snapping';\r\nimport EventMixin from '../Mixins/Events';\r\n\r\nconst merge = window.mergeLodash;\r\nconst Draw = L.Class.extend({\r\n  includes: [SnapMixin, EventMixin],\r\n  options: {\r\n    snappable: true, // TODO: next major Release, rename it to allowSnapping\r\n    snapDistance: 20,\r\n    snapMiddle: false,\r\n    allowSelfIntersection: true,\r\n    tooltips: true,\r\n    templineStyle: {},\r\n    hintlineStyle: {\r\n      color: '#3388ff',\r\n      dashArray: '5,5',\r\n    },\r\n    pathOptions: null,\r\n    cursorMarker: true,\r\n    finishOn: null,\r\n    markerStyle: {\r\n      draggable: true,\r\n      icon: L.icon(),\r\n    },\r\n    hideMiddleMarkers: false,\r\n    minRadiusCircle: null,\r\n    maxRadiusCircle: null,\r\n    minRadiusCircleMarker: null,\r\n    maxRadiusCircleMarker: null,\r\n    resizeableCircleMarker: false,\r\n    resizeableCircle: true,\r\n    markerEditable: true,\r\n    continueDrawing: false,\r\n    snapSegment: true,\r\n    requireSnapToFinish: false,\r\n    rectangleAngle: 0,\r\n  },\r\n  setOptions(options) {\r\n    L.Util.setOptions(this, options);\r\n    this.setStyle(this.options);\r\n  },\r\n  setStyle() {},\r\n  getOptions() {\r\n    return this.options;\r\n  },\r\n  initialize(map) {\r\n    // Overwriting the default tooltipAnchor of the default Marker Icon, because the tooltip functionality was updated but not the anchor in the Icon\r\n    // Issue https://github.com/Leaflet/Leaflet/issues/7302 - Leaflet v1.7.1\r\n    const defaultIcon = new L.Icon.Default();\r\n    defaultIcon.options.tooltipAnchor = [0, 0];\r\n    this.options.markerStyle.icon = defaultIcon;\r\n\r\n    // save the map\r\n    this._map = map;\r\n\r\n    // define all possible shapes that can be drawn\r\n    this.shapes = [\r\n      'Marker',\r\n      'CircleMarker',\r\n      'Line',\r\n      'Polygon',\r\n      'Rectangle',\r\n      'Circle',\r\n      'Cut',\r\n      'Text',\r\n    ];\r\n\r\n    // initiate drawing class for our shapes\r\n    this.shapes.forEach((shape) => {\r\n      this[shape] = new L.PM.Draw[shape](this._map);\r\n    });\r\n\r\n    // TODO: Remove this with the next major release\r\n    this.Marker.setOptions({ continueDrawing: true });\r\n    this.CircleMarker.setOptions({ continueDrawing: true });\r\n  },\r\n  setPathOptions(options, mergeOptions = false) {\r\n    if (!mergeOptions) {\r\n      this.options.pathOptions = options;\r\n    } else {\r\n      this.options.pathOptions = (merge || window.mergeLodash)(this.options.pathOptions, options);\r\n    }\r\n  },\r\n  getShapes() {\r\n    // if somebody wants to know what shapes are available\r\n    return this.shapes;\r\n  },\r\n  getShape() {\r\n    // return the shape of the current drawing layer\r\n    return this._shape;\r\n  },\r\n  enable(shape, options) {\r\n    if (!shape) {\r\n      throw new Error(\r\n        `Error: Please pass a shape as a parameter. Possible shapes are: ${this.getShapes().join(\r\n          ','\r\n        )}`\r\n      );\r\n    }\r\n\r\n    // disable drawing for all shapes\r\n    this.disable();\r\n\r\n    // enable draw for a shape\r\n    this[shape].enable(options);\r\n  },\r\n  disable() {\r\n    // there can only be one drawing mode active at a time on a map\r\n    // so it doesn't matter which one should be disabled.\r\n    // just disable all of them\r\n    this.shapes.forEach((shape) => {\r\n      this[shape].disable();\r\n    });\r\n  },\r\n  addControls() {\r\n    // add control buttons for our shapes\r\n    this.shapes.forEach((shape) => {\r\n      this[shape].addButton();\r\n    });\r\n  },\r\n  getActiveShape() {\r\n    // returns the active shape\r\n    let enabledShape;\r\n    this.shapes.forEach((shape) => {\r\n      if (this[shape]._enabled) {\r\n        enabledShape = shape;\r\n      }\r\n    });\r\n    return enabledShape;\r\n  },\r\n  _setGlobalDrawMode() {\r\n    // extended to all PM.Draw shapes\r\n    if (this._shape === 'Cut') {\r\n      this._fireGlobalCutModeToggled();\r\n    } else {\r\n      this._fireGlobalDrawModeToggled();\r\n    }\r\n\r\n    const layers = [];\r\n    this._map.eachLayer((layer) => {\r\n      if (\r\n        layer instanceof L.Polyline ||\r\n        layer instanceof L.Marker ||\r\n        layer instanceof L.Circle ||\r\n        layer instanceof L.CircleMarker ||\r\n        layer instanceof L.ImageOverlay\r\n      ) {\r\n        // filter out everything that's leaflet-geoman specific temporary stuff\r\n        if (!layer._pmTempLayer) {\r\n          layers.push(layer);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (this._enabled) {\r\n      layers.forEach((layer) => {\r\n        L.PM.Utils.disablePopup(layer);\r\n      });\r\n    } else {\r\n      layers.forEach((layer) => {\r\n        L.PM.Utils.enablePopup(layer);\r\n      });\r\n    }\r\n  },\r\n\r\n  createNewDrawInstance(name, jsClass) {\r\n    const instance = this._getShapeFromBtnName(jsClass);\r\n    if (this[name]) {\r\n      throw new TypeError('Draw Type already exists');\r\n    }\r\n    if (!L.PM.Draw[instance]) {\r\n      throw new TypeError(`There is no class L.PM.Draw.${instance}`);\r\n    }\r\n\r\n    this[name] = new L.PM.Draw[instance](this._map);\r\n    this[name].toolbarButtonName = name;\r\n    this[name]._shape = name;\r\n    this.shapes.push(name);\r\n\r\n    // needed when extended / copied from a custom instance\r\n    if (this[jsClass]) {\r\n      this[name].setOptions(this[jsClass].options);\r\n    }\r\n    // Re-init the options, so it is not referenced with the default Draw class\r\n    this[name].setOptions(this[name].options);\r\n\r\n    return this[name];\r\n  },\r\n  _getShapeFromBtnName(name) {\r\n    const shapeMapping = {\r\n      drawMarker: 'Marker',\r\n      drawCircle: 'Circle',\r\n      drawPolygon: 'Polygon',\r\n      drawPolyline: 'Line',\r\n      drawRectangle: 'Rectangle',\r\n      drawCircleMarker: 'CircleMarker',\r\n      editMode: 'Edit',\r\n      dragMode: 'Drag',\r\n      cutPolygon: 'Cut',\r\n      removalMode: 'Removal',\r\n      rotateMode: 'Rotate',\r\n      drawText: 'Text',\r\n    };\r\n\r\n    if (shapeMapping[name]) {\r\n      return shapeMapping[name];\r\n    }\r\n    return this[name] ? this[name]._shape : name;\r\n  },\r\n  _finishLayer(layer) {\r\n    if (layer.pm) {\r\n      // add the pm options from drawing to the new layer (edit)\r\n      layer.pm.setOptions(this.options);\r\n      // set the shape (can be a custom shape)\r\n      layer.pm._shape = this._shape;\r\n      // apply the map to the new created layer in the pm object\r\n      layer.pm._map = this._map;\r\n    }\r\n    this._addDrawnLayerProp(layer);\r\n  },\r\n  _addDrawnLayerProp(layer) {\r\n    layer._drawnByGeoman = true;\r\n  },\r\n  _setPane(layer, type) {\r\n    if (type === 'layerPane') {\r\n      layer.options.pane =\r\n        (this._map.pm.globalOptions.panes &&\r\n          this._map.pm.globalOptions.panes.layerPane) ||\r\n        'overlayPane';\r\n    } else if (type === 'vertexPane') {\r\n      layer.options.pane =\r\n        (this._map.pm.globalOptions.panes &&\r\n          this._map.pm.globalOptions.panes.vertexPane) ||\r\n        'markerPane';\r\n    } else if (type === 'markerPane') {\r\n      layer.options.pane =\r\n        (this._map.pm.globalOptions.panes &&\r\n          this._map.pm.globalOptions.panes.markerPane) ||\r\n        'markerPane';\r\n    }\r\n  },\r\n  _isFirstLayer() {\r\n    const map = this._map || this._layer._map;\r\n    return map.pm.getGeomanLayers().length === 0;\r\n  },\r\n});\r\n\r\nexport default Draw;\r\n", "import Draw from './L.PM.Draw';\r\nimport { getTranslation } from '../helpers';\r\n\r\nDraw.Marker = Draw.extend({\r\n  initialize(map) {\r\n    this._map = map;\r\n    this._shape = 'Marker';\r\n    this.toolbarButtonName = 'drawMarker';\r\n  },\r\n  enable(options) {\r\n    // TODO: Think about if these options could be passed globally for all\r\n    // instances of L.PM.Draw. So a dev could set drawing style one time as some kind of config\r\n    L.Util.setOptions(this, options);\r\n\r\n    // change enabled state\r\n    this._enabled = true;\r\n\r\n    // change map cursor\r\n    this._map.getContainer().classList.add('geoman-draw-cursor');\r\n\r\n    // create a marker on click on the map\r\n    this._map.on('click', this._createMarker, this);\r\n\r\n    // toggle the draw button of the Toolbar in case drawing mode got enabled without the button\r\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, true);\r\n\r\n    // this is the hintmarker on the mouse cursor\r\n    this._hintMarker = L.marker(\r\n      this._map.getCenter(),\r\n      this.options.markerStyle\r\n    );\r\n    this._setPane(this._hintMarker, 'markerPane');\r\n    this._hintMarker._pmTempLayer = true;\r\n    this._hintMarker.addTo(this._map);\r\n\r\n    // add tooltip to hintmarker\r\n    if (this.options.tooltips) {\r\n      this._hintMarker\r\n        .bindTooltip(getTranslation('tooltips.placeMarker'), {\r\n          permanent: true,\r\n          offset: L.point(0, 10),\r\n          direction: 'bottom',\r\n\r\n          opacity: 0.8,\r\n        })\r\n        .openTooltip();\r\n    }\r\n\r\n    // this is just to keep the snappable mixin happy\r\n    this._layer = this._hintMarker;\r\n\r\n    // sync hint marker with mouse cursor\r\n    this._map.on('mousemove', this._syncHintMarker, this);\r\n\r\n    // enable edit mode for existing markers\r\n    if (this.options.markerEditable) {\r\n      this._map.eachLayer((layer) => {\r\n        if (this.isRelevantMarker(layer)) {\r\n          layer.pm.enable();\r\n        }\r\n      });\r\n    }\r\n\r\n    // fire drawstart event\r\n    this._fireDrawStart();\r\n    this._setGlobalDrawMode();\r\n  },\r\n  disable() {\r\n    // cancel, if drawing mode isn't even enabled\r\n    if (!this._enabled) {\r\n      return;\r\n    }\r\n\r\n    // change enabled state\r\n    this._enabled = false;\r\n\r\n    // reset cursor\r\n    this._map.getContainer().classList.remove('geoman-draw-cursor');\r\n\r\n    // undbind click event, don't create a marker on click anymore\r\n    this._map.off('click', this._createMarker, this);\r\n\r\n    // remove hint marker\r\n    this._hintMarker.remove();\r\n\r\n    // remove event listener to sync hint marker\r\n    this._map.off('mousemove', this._syncHintMarker, this);\r\n\r\n    // disable dragging and removing for all markers\r\n    this._map.eachLayer((layer) => {\r\n      if (this.isRelevantMarker(layer)) {\r\n        layer.pm.disable();\r\n      }\r\n    });\r\n\r\n    // toggle the draw button of the Toolbar in case drawing mode got disabled without the button\r\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, false);\r\n\r\n    // cleanup snapping\r\n    if (this.options.snappable) {\r\n      this._cleanupSnapping();\r\n    }\r\n\r\n    // fire drawend event\r\n    this._fireDrawEnd();\r\n    this._setGlobalDrawMode();\r\n  },\r\n  enabled() {\r\n    return this._enabled;\r\n  },\r\n  toggle(options) {\r\n    if (this.enabled()) {\r\n      this.disable();\r\n    } else {\r\n      this.enable(options);\r\n    }\r\n  },\r\n  isRelevantMarker(layer) {\r\n    return (\r\n      layer instanceof L.Marker &&\r\n      layer.pm &&\r\n      !layer._pmTempLayer &&\r\n      !layer.pm._initTextMarker\r\n    );\r\n  },\r\n  _syncHintMarker(e) {\r\n    // move the cursor marker\r\n    this._hintMarker.setLatLng(e.latlng);\r\n\r\n    // if snapping is enabled, do it\r\n    if (this.options.snappable) {\r\n      const fakeDragEvent = e;\r\n      fakeDragEvent.target = this._hintMarker;\r\n      this._handleSnapping(fakeDragEvent);\r\n    }\r\n\r\n    this._fireChange(this._hintMarker.getLatLng(), 'Draw');\r\n  },\r\n  _createMarker(e) {\r\n    if (!e.latlng) {\r\n      return;\r\n    }\r\n\r\n    // If snap finish is required but the last marker wasn't snapped, do not finish the shape!\r\n    if (\r\n      this.options.requireSnapToFinish &&\r\n      !this._hintMarker._snapped &&\r\n      !this._isFirstLayer()\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // assign the coordinate of the click to the hintMarker, that's necessary for\r\n    // mobile where the marker can't follow a cursor\r\n    if (!this._hintMarker._snapped) {\r\n      this._hintMarker.setLatLng(e.latlng);\r\n    }\r\n\r\n    // get coordinate for new vertex by hintMarker (cursor marker)\r\n    const latlng = this._hintMarker.getLatLng();\r\n\r\n    // create marker\r\n    const marker = new L.Marker(latlng, this.options.markerStyle);\r\n    this._setPane(marker, 'markerPane');\r\n    this._finishLayer(marker);\r\n\r\n    if (!marker.pm) {\r\n      // if pm is not create we don't apply dragging to the marker (draggable is applied to the marker, when it is added to the map )\r\n      marker.options.draggable = false;\r\n    }\r\n    // add marker to the map\r\n    marker.addTo(this._map.pm._getContainingLayer());\r\n\r\n    if (marker.pm && this.options.markerEditable) {\r\n      // enable editing for the marker\r\n      marker.pm.enable();\r\n    } else if (marker.dragging) {\r\n      marker.dragging.disable();\r\n    }\r\n\r\n    // fire the pm:create event and pass shape and marker\r\n    this._fireCreate(marker);\r\n\r\n    this._cleanupSnapping();\r\n\r\n    if (!this.options.continueDrawing) {\r\n      this.disable();\r\n    }\r\n  },\r\n  setStyle() {\r\n    if (this.options.markerStyle?.icon) {\r\n      this._hintMarker?.setIcon(this.options.markerStyle.icon);\r\n    }\r\n  },\r\n});\r\n", "import Draw from './L.PM.Draw';\r\n\r\nimport { getTranslation } from '../helpers';\r\n\r\n// eslint-disable-next-line prefer-destructuring\r\nconst kinks = window.kinks;\r\nDraw.Line = Draw.extend({\r\n  initialize(map) {\r\n    this._map = map;\r\n    this._shape = 'Line';\r\n    this.toolbarButtonName = 'drawPolyline';\r\n    this._doesSelfIntersect = false;\r\n  },\r\n  enable(options) {\r\n    L.Util.setOptions(this, options);\r\n\r\n    // enable draw mode\r\n    this._enabled = true;\r\n\r\n    this._markers = [];\r\n\r\n    // create a new layergroup\r\n    this._layerGroup = new L.FeatureGroup();\r\n    this._layerGroup._pmTempLayer = true;\r\n    this._layerGroup.addTo(this._map);\r\n\r\n    // this is the polyLine that'll make up the polygon\r\n    this._layer = L.polyline([], {\r\n      ...this.options.templineStyle,\r\n      pmIgnore: false,\r\n    });\r\n    this._setPane(this._layer, 'layerPane');\r\n    this._layer._pmTempLayer = true;\r\n    this._layerGroup.addLayer(this._layer);\r\n\r\n    // this is the hintline from the mouse cursor to the last marker\r\n    this._hintline = L.polyline([], this.options.hintlineStyle);\r\n    this._setPane(this._hintline, 'layerPane');\r\n    this._hintline._pmTempLayer = true;\r\n    this._layerGroup.addLayer(this._hintline);\r\n\r\n    // this is the hintmarker on the mouse cursor\r\n    this._hintMarker = L.marker(this._map.getCenter(), {\r\n      interactive: false, // always vertex marker below will be triggered from the click event -> _finishShape #911\r\n      zIndexOffset: 100,\r\n      icon: L.divIcon({ className: 'marker-icon cursor-marker' }),\r\n    });\r\n    this._setPane(this._hintMarker, 'vertexPane');\r\n    this._hintMarker._pmTempLayer = true;\r\n    this._layerGroup.addLayer(this._hintMarker);\r\n\r\n    // show the hintmarker if the option is set\r\n    if (this.options.cursorMarker) {\r\n      L.DomUtil.addClass(this._hintMarker._icon, 'visible');\r\n    }\r\n\r\n    // add tooltip to hintmarker\r\n    if (this.options.tooltips) {\r\n      this._hintMarker\r\n        .bindTooltip(getTranslation('tooltips.firstVertex'), {\r\n          permanent: true,\r\n          offset: L.point(0, 10),\r\n          direction: 'bottom',\r\n\r\n          opacity: 0.8,\r\n        })\r\n        .openTooltip();\r\n    }\r\n\r\n    // change map cursor\r\n    this._map.getContainer().classList.add('geoman-draw-cursor');\r\n\r\n    // create a polygon-point on click\r\n    this._map.on('click', this._createVertex, this);\r\n\r\n    // finish on layer event\r\n    // #http://leafletjs.com/reference.html#interactive-layer-click\r\n    if (this.options.finishOn && this.options.finishOn !== 'snap') {\r\n      this._map.on(this.options.finishOn, this._finishShape, this);\r\n    }\r\n\r\n    // prevent zoom on double click if finishOn is === dblclick\r\n    if (this.options.finishOn === 'dblclick') {\r\n      this.tempMapDoubleClickZoomState = this._map.doubleClickZoom._enabled;\r\n\r\n      if (this.tempMapDoubleClickZoomState) {\r\n        this._map.doubleClickZoom.disable();\r\n      }\r\n    }\r\n\r\n    // sync hint marker with mouse cursor\r\n    this._map.on('mousemove', this._syncHintMarker, this);\r\n\r\n    // sync the hintline with hint marker\r\n    this._hintMarker.on('move', this._syncHintLine, this);\r\n\r\n    // toggle the draw button of the Toolbar in case drawing mode got enabled without the button\r\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, true);\r\n\r\n    // an array used in the snapping mixin.\r\n    // TODO: think about moving this somewhere else?\r\n    this._otherSnapLayers = [];\r\n\r\n    // make sure intersection is not set while start drawing\r\n    this.isRed = false;\r\n\r\n    // fire drawstart event\r\n    this._fireDrawStart();\r\n    this._setGlobalDrawMode();\r\n  },\r\n  disable() {\r\n    // disable draw mode\r\n\r\n    // cancel, if drawing mode isn't even enabled\r\n    if (!this._enabled) {\r\n      return;\r\n    }\r\n\r\n    this._enabled = false;\r\n\r\n    // reset cursor\r\n    this._map.getContainer().classList.remove('geoman-draw-cursor');\r\n\r\n    // unbind listeners\r\n    this._map.off('click', this._createVertex, this);\r\n    this._map.off('mousemove', this._syncHintMarker, this);\r\n    if (this.options.finishOn && this.options.finishOn !== 'snap') {\r\n      this._map.off(this.options.finishOn, this._finishShape, this);\r\n    }\r\n\r\n    if (this.tempMapDoubleClickZoomState) {\r\n      this._map.doubleClickZoom.enable();\r\n    }\r\n\r\n    // remove layer\r\n    this._map.removeLayer(this._layerGroup);\r\n\r\n    // toggle the draw button of the Toolbar in case drawing mode got disabled without the button\r\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, false);\r\n\r\n    // cleanup snapping\r\n    if (this.options.snappable) {\r\n      this._cleanupSnapping();\r\n    }\r\n\r\n    // fire drawend event\r\n    this._fireDrawEnd();\r\n    this._setGlobalDrawMode();\r\n  },\r\n  enabled() {\r\n    return this._enabled;\r\n  },\r\n  toggle(options) {\r\n    if (this.enabled()) {\r\n      this.disable();\r\n    } else {\r\n      this.enable(options);\r\n    }\r\n  },\r\n  _syncHintLine() {\r\n    const polyPoints = this._layer.getLatLngs();\r\n\r\n    if (polyPoints.length > 0) {\r\n      const lastPolygonPoint = polyPoints[polyPoints.length - 1];\r\n\r\n      // set coords for hintline from marker to last vertex of drawin polyline\r\n      this._hintline.setLatLngs([\r\n        lastPolygonPoint,\r\n        this._hintMarker.getLatLng(),\r\n      ]);\r\n    }\r\n  },\r\n  _syncHintMarker(e) {\r\n    // move the cursor marker\r\n    this._hintMarker.setLatLng(e.latlng);\r\n\r\n    // if snapping is enabled, do it\r\n    if (this.options.snappable) {\r\n      const fakeDragEvent = e;\r\n      fakeDragEvent.target = this._hintMarker;\r\n      this._handleSnapping(fakeDragEvent);\r\n    }\r\n\r\n    // if self-intersection is forbidden, handle it\r\n    if (!this.options.allowSelfIntersection) {\r\n      this._handleSelfIntersection(true, this._hintMarker.getLatLng());\r\n    }\r\n    const latlngs = this._layer._defaultShape().slice();\r\n    latlngs.push(this._hintMarker.getLatLng());\r\n    this._change(latlngs);\r\n  },\r\n  hasSelfIntersection() {\r\n    // check for self intersection of the layer and return true/false\r\n    const selfIntersection = (kinks || window.kinks)(this._layer.toGeoJSON(15));\r\n    return selfIntersection.features.length > 0;\r\n  },\r\n  _handleSelfIntersection(addVertex, latlng) {\r\n    // ok we need to check the self intersection here\r\n    // problem: during draw, the marker on the cursor is not yet part\r\n    // of the layer. So we need to clone the layer, add the\r\n    // potential new vertex (cursor markers latlngs) and check the self\r\n    // intersection on the clone. Phew... - let's do it \uD83D\uDCAA\r\n\r\n    // clone layer (polyline is enough, even when it's a polygon)\r\n    const clone = L.polyline(this._layer.getLatLngs());\r\n\r\n    if (addVertex) {\r\n      // get vertex from param or from hintmarker\r\n      if (!latlng) {\r\n        latlng = this._hintMarker.getLatLng();\r\n      }\r\n\r\n      // add the vertex\r\n      clone.addLatLng(latlng);\r\n    }\r\n\r\n    // check the self intersection\r\n    const selfIntersection =(kinks || window.kinks)(clone.toGeoJSON(15));\r\n    this._doesSelfIntersect = selfIntersection.features.length > 0;\r\n\r\n    // change the style based on self intersection\r\n    if (this._doesSelfIntersect) {\r\n      if (!this.isRed) {\r\n        this.isRed = true;\r\n        this._hintline.setStyle({\r\n          color: '#f00000ff',\r\n        });\r\n        // fire intersect event\r\n        this._fireIntersect(selfIntersection, this._map, 'Draw');\r\n      }\r\n    } else if (!this._hintline.isEmpty()) {\r\n      this.isRed = false;\r\n      this._hintline.setStyle(this.options.hintlineStyle);\r\n    }\r\n  },\r\n  _createVertex(e) {\r\n    // don't create a vertex if we have a selfIntersection and it is not allowed\r\n    if (!this.options.allowSelfIntersection) {\r\n      this._handleSelfIntersection(true, e.latlng);\r\n\r\n      if (this._doesSelfIntersect) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // assign the coordinate of the click to the hintMarker, that's necessary for\r\n    // mobile where the marker can't follow a cursor\r\n    if (!this._hintMarker._snapped) {\r\n      this._hintMarker.setLatLng(e.latlng);\r\n    }\r\n\r\n    // get coordinate for new vertex by hintMarker (cursor marker)\r\n    const latlng = this._hintMarker.getLatLng();\r\n\r\n    // check if the first and this vertex have the same latlng\r\n    // or the last vertex and the hintMarker have the same latlng (dbl-click)\r\n    const latlngs = this._layer.getLatLngs();\r\n\r\n    const lastLatLng = latlngs[latlngs.length - 1];\r\n    if (\r\n      latlng.equals(latlngs[0]) ||\r\n      (latlngs.length > 0 && latlng.equals(lastLatLng))\r\n    ) {\r\n      // yes? finish the polygon\r\n      this._finishShape();\r\n\r\n      // \"why?\", you ask? Because this happens when we snap the last vertex to the first one\r\n      // and then click without hitting the last marker. Click happens on the map\r\n      // in 99% of cases it's because the user wants to finish the polygon. So...\r\n      return;\r\n    }\r\n\r\n    this._layer._latlngInfo = this._layer._latlngInfo || [];\r\n    this._layer._latlngInfo.push({\r\n      latlng,\r\n      snapInfo: this._hintMarker._snapInfo,\r\n    });\r\n\r\n    this._layer.addLatLng(latlng);\r\n    const newMarker = this._createMarker(latlng);\r\n    this._setTooltipText();\r\n\r\n    this._setHintLineAfterNewVertex(latlng);\r\n\r\n    this._fireVertexAdded(newMarker, undefined, latlng, 'Draw');\r\n    this._change(this._layer.getLatLngs());\r\n    // check if we should finish on snap\r\n    if (this.options.finishOn === 'snap' && this._hintMarker._snapped) {\r\n      this._finishShape(e);\r\n    }\r\n  },\r\n  _setHintLineAfterNewVertex(hintMarkerLatLng) {\r\n    // make the new drawn line (with another style) visible\r\n    this._hintline.setLatLngs([hintMarkerLatLng, hintMarkerLatLng]);\r\n  },\r\n  _removeLastVertex() {\r\n    const markers = this._markers;\r\n\r\n    // if all markers are gone, cancel drawing\r\n    if (markers.length <= 1) {\r\n      this.disable();\r\n      return;\r\n    }\r\n\r\n    // remove last coords\r\n    let coords = this._layer.getLatLngs();\r\n\r\n    const removedMarker = markers[markers.length - 1];\r\n\r\n    // the index path to the marker inside the multidimensional marker array\r\n    const { indexPath } = L.PM.Utils.findDeepMarkerIndex(\r\n      markers,\r\n      removedMarker\r\n    );\r\n\r\n    // remove last marker from array\r\n    markers.pop();\r\n\r\n    // remove that marker\r\n    this._layerGroup.removeLayer(removedMarker);\r\n\r\n    const markerPrevious = markers[markers.length - 1];\r\n\r\n    // no need for findDeepMarkerIndex because the coords are always flat (Polyline) no matter if Line or Polygon\r\n    const indexMarkerPrev = coords.indexOf(markerPrevious.getLatLng());\r\n\r\n    // +1 don't cut out the previous marker\r\n    coords = coords.slice(0, indexMarkerPrev + 1);\r\n\r\n    // update layer with new coords\r\n    this._layer.setLatLngs(coords);\r\n    this._layer._latlngInfo.pop();\r\n\r\n    // sync the hintline again\r\n    this._syncHintLine();\r\n    this._setTooltipText();\r\n\r\n    this._fireVertexRemoved(removedMarker, indexPath, 'Draw');\r\n    this._change(this._layer.getLatLngs());\r\n  },\r\n  _finishShape() {\r\n    // if self intersection is not allowed, do not finish the shape!\r\n    if (!this.options.allowSelfIntersection) {\r\n      this._handleSelfIntersection(false);\r\n\r\n      if (this._doesSelfIntersect) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // If snap finish is required but the last marker wasn't snapped, do not finish the shape!\r\n    if (\r\n      this.options.requireSnapToFinish &&\r\n      !this._hintMarker._snapped &&\r\n      !this._isFirstLayer()\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // get coordinates\r\n    const coords = this._layer.getLatLngs();\r\n\r\n    // if there is only one coords, don't finish the shape!\r\n    if (coords.length <= 1) {\r\n      return;\r\n    }\r\n\r\n    // create the leaflet shape and add it to the map\r\n    const polylineLayer = L.polyline(coords, this.options.pathOptions);\r\n    this._setPane(polylineLayer, 'layerPane');\r\n    this._finishLayer(polylineLayer);\r\n    polylineLayer.addTo(this._map.pm._getContainingLayer());\r\n\r\n    // fire the pm:create event and pass shape and layer\r\n    this._fireCreate(polylineLayer);\r\n\r\n    if (this.options.snappable) {\r\n      this._cleanupSnapping();\r\n    }\r\n\r\n    // disable drawing\r\n    this.disable();\r\n    if (this.options.continueDrawing) {\r\n      this.enable();\r\n    }\r\n  },\r\n  _createMarker(latlng) {\r\n    // create the new marker\r\n    const marker = new L.Marker(latlng, {\r\n      draggable: false,\r\n      icon: L.divIcon({ className: 'marker-icon' }),\r\n    });\r\n    this._setPane(marker, 'vertexPane');\r\n    marker._pmTempLayer = true;\r\n\r\n    // add it to the map\r\n    this._layerGroup.addLayer(marker);\r\n    this._markers.push(marker);\r\n\r\n    // a click on any marker finishes this shape\r\n    marker.on('click', this._finishShape, this);\r\n\r\n    return marker;\r\n  },\r\n  _setTooltipText() {\r\n    const { length } = this._layer.getLatLngs().flat();\r\n    let text = '';\r\n\r\n    // handle tooltip text\r\n    if (length <= 1) {\r\n      text = getTranslation('tooltips.continueLine');\r\n    } else {\r\n      text = getTranslation('tooltips.finishLine');\r\n    }\r\n    this._hintMarker.setTooltipContent(text);\r\n  },\r\n  _change(latlngs) {\r\n    this._fireChange(latlngs, 'Draw');\r\n  },\r\n  setStyle() {\r\n    this._layer?.setStyle(this.options.templineStyle);\r\n    this._hintline?.setStyle(this.options.hintlineStyle);\r\n  },\r\n});\r\n", "import Draw from './L.PM.Draw';\r\nimport { getTranslation } from '../helpers';\r\n\r\nDraw.Polygon = Draw.Line.extend({\r\n  initialize(map) {\r\n    this._map = map;\r\n    this._shape = 'Polygon';\r\n    this.toolbarButtonName = 'drawPolygon';\r\n  },\r\n  enable(options) {\r\n    L.PM.Draw.Line.prototype.enable.call(this, options);\r\n    // Overwrite the shape \"Line\" of this._layer\r\n    this._layer.pm._shape = 'Polygon';\r\n  },\r\n  _createMarker(latlng) {\r\n    // create the new marker\r\n    const marker = new L.Marker(latlng, {\r\n      draggable: false,\r\n      icon: L.divIcon({ className: 'marker-icon' }),\r\n    });\r\n    this._setPane(marker, 'vertexPane');\r\n\r\n    // mark this marker as temporary\r\n    marker._pmTempLayer = true;\r\n\r\n    // add it to the map\r\n    this._layerGroup.addLayer(marker);\r\n    this._markers.push(marker);\r\n\r\n    // if the first marker gets clicked again, finish this shape\r\n    if (this._layer.getLatLngs().flat().length === 1) {\r\n      marker.on('click', this._finishShape, this);\r\n\r\n      // add the first vertex to \"other snapping layers\" so the polygon is easier to finish\r\n      this._tempSnapLayerIndex = this._otherSnapLayers.push(marker) - 1;\r\n\r\n      if (this.options.snappable) {\r\n        this._cleanupSnapping();\r\n      }\r\n    } else {\r\n      // add a click event w/ no handler to the marker\r\n      // event won't bubble so prevents creation of identical markers in same polygon\r\n      // fixes issue where double click during poly creation when allowSelfIntersection: false caused it to break\r\n      marker.on('click', () => 1);\r\n    }\r\n\r\n    return marker;\r\n  },\r\n  _setTooltipText() {\r\n    const { length } = this._layer.getLatLngs().flat();\r\n    let text = '';\r\n\r\n    // handle tooltip text\r\n    if (length <= 2) {\r\n      text = getTranslation('tooltips.continueLine');\r\n    } else {\r\n      text = getTranslation('tooltips.finishPoly');\r\n    }\r\n    this._hintMarker.setTooltipContent(text);\r\n  },\r\n  _finishShape() {\r\n    // if self intersection is not allowed, do not finish the shape!\r\n    if (!this.options.allowSelfIntersection) {\r\n      // Check if polygon intersects when is completed and the line between the last and the first point is drawn\r\n      this._handleSelfIntersection(true, this._layer.getLatLngs()[0]);\r\n\r\n      if (this._doesSelfIntersect) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // If snap finish is required but the last marker wasn't snapped, do not finish the shape!\r\n    if (\r\n      this.options.requireSnapToFinish &&\r\n      !this._hintMarker._snapped &&\r\n      !this._isFirstLayer()\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // get coordinates\r\n    const coords = this._layer.getLatLngs();\r\n\r\n    // only finish the shape if there are 3 or more vertices\r\n    if (coords.length <= 2) {\r\n      return;\r\n    }\r\n\r\n    const polygonLayer = L.polygon(coords, this.options.pathOptions);\r\n    this._setPane(polygonLayer, 'layerPane');\r\n    this._finishLayer(polygonLayer);\r\n    polygonLayer.addTo(this._map.pm._getContainingLayer());\r\n\r\n    // fire the pm:create event and pass shape and layer\r\n    this._fireCreate(polygonLayer);\r\n\r\n    // clean up snapping states\r\n    this._cleanupSnapping();\r\n\r\n    // remove the first vertex from \"other snapping layers\"\r\n    this._otherSnapLayers.splice(this._tempSnapLayerIndex, 1);\r\n    delete this._tempSnapLayerIndex;\r\n\r\n    // disable drawing\r\n    this.disable();\r\n    if (this.options.continueDrawing) {\r\n      this.enable();\r\n    }\r\n  },\r\n});\r\n", "import Draw from './L.PM.Draw';\r\nimport { fixLatOffset, getTranslation } from '../helpers';\r\n\r\nDraw.Rectangle = Draw.extend({\r\n  initialize(map) {\r\n    this._map = map;\r\n    this._shape = 'Rectangle';\r\n    this.toolbarButtonName = 'drawRectangle';\r\n  },\r\n  enable(options) {\r\n    // TODO: Think about if these options could be passed globally for all\r\n    // instances of L.PM.Draw. So a dev could set drawing style one time as some kind of config\r\n    L.Util.setOptions(this, options);\r\n\r\n    // enable draw mode\r\n    this._enabled = true;\r\n\r\n    // create a new layergroup\r\n    this._layerGroup = new L.FeatureGroup();\r\n    this._layerGroup._pmTempLayer = true;\r\n    this._layerGroup.addTo(this._map);\r\n\r\n    // the rectangle we want to draw\r\n    this._layer = L.rectangle(\r\n      [\r\n        [0, 0],\r\n        [0, 0],\r\n      ],\r\n      this.options.pathOptions\r\n    );\r\n    this._setPane(this._layer, 'layerPane');\r\n    this._layer._pmTempLayer = true;\r\n\r\n    // this is the marker at the origin of the rectangle\r\n    // this needs to be present, for tracking purposes, but we'll make it invisible if a user doesn't want to see it!\r\n    this._startMarker = L.marker(this._map.getCenter(), {\r\n      icon: L.divIcon({ className: 'marker-icon rect-start-marker' }),\r\n      draggable: false,\r\n      zIndexOffset: -100,\r\n      opacity: this.options.cursorMarker ? 1 : 0,\r\n    });\r\n    this._setPane(this._startMarker, 'vertexPane');\r\n    this._startMarker._pmTempLayer = true;\r\n    this._layerGroup.addLayer(this._startMarker);\r\n\r\n    // this is the hintmarker on the mouse cursor\r\n    this._hintMarker = L.marker(this._map.getCenter(), {\r\n      zIndexOffset: 150,\r\n      icon: L.divIcon({ className: 'marker-icon cursor-marker' }),\r\n    });\r\n    this._setPane(this._hintMarker, 'vertexPane');\r\n    this._hintMarker._pmTempLayer = true;\r\n    this._layerGroup.addLayer(this._hintMarker);\r\n\r\n    // show the hintmarker if the option is set\r\n    if (this.options.cursorMarker) {\r\n      L.DomUtil.addClass(this._hintMarker._icon, 'visible');\r\n    }\r\n\r\n    // add tooltip to hintmarker\r\n    if (this.options.tooltips) {\r\n      this._hintMarker\r\n        .bindTooltip(getTranslation('tooltips.firstVertex'), {\r\n          permanent: true,\r\n          offset: L.point(0, 10),\r\n          direction: 'bottom',\r\n\r\n          opacity: 0.8,\r\n        })\r\n        .openTooltip();\r\n    }\r\n\r\n    if (this.options.cursorMarker) {\r\n      // Add two more matching style markers, if cursor marker is rendered\r\n      this._styleMarkers = [];\r\n      for (let i = 0; i < 2; i += 1) {\r\n        const styleMarker = L.marker(this._map.getCenter(), {\r\n          icon: L.divIcon({\r\n            className: 'marker-icon rect-style-marker',\r\n          }),\r\n          draggable: false,\r\n          zIndexOffset: 100,\r\n        });\r\n        this._setPane(styleMarker, 'vertexPane');\r\n        styleMarker._pmTempLayer = true;\r\n        this._layerGroup.addLayer(styleMarker);\r\n\r\n        this._styleMarkers.push(styleMarker);\r\n      }\r\n    }\r\n\r\n    // change map cursor\r\n    this._map.getContainer().classList.add('geoman-draw-cursor');\r\n\r\n    // create a polygon-point on click\r\n    this._map.on('click', this._placeStartingMarkers, this);\r\n\r\n    // sync hint marker with mouse cursor\r\n    this._map.on('mousemove', this._syncHintMarker, this);\r\n\r\n    // toggle the draw button of the Toolbar in case drawing mode got enabled without the button\r\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, true);\r\n\r\n    // an array used in the snapping mixin.\r\n    // TODO: think about moving this somewhere else?\r\n    this._otherSnapLayers = [];\r\n\r\n    // fire drawstart event\r\n    this._fireDrawStart();\r\n    this._setGlobalDrawMode();\r\n  },\r\n  disable() {\r\n    // disable drawing mode\r\n\r\n    // cancel, if drawing mode isn't event enabled\r\n    if (!this._enabled) {\r\n      return;\r\n    }\r\n\r\n    this._enabled = false;\r\n\r\n    // reset cursor\r\n    this._map.getContainer().classList.remove('geoman-draw-cursor');\r\n\r\n    // unbind listeners\r\n    this._map.off('click', this._finishShape, this);\r\n    this._map.off('click', this._placeStartingMarkers, this);\r\n    this._map.off('mousemove', this._syncHintMarker, this);\r\n\r\n    // remove helping layers\r\n    this._map.removeLayer(this._layerGroup);\r\n\r\n    // toggle the draw button of the Toolbar in case drawing mode got disabled without the button\r\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, false);\r\n\r\n    // cleanup snapping\r\n    if (this.options.snappable) {\r\n      this._cleanupSnapping();\r\n    }\r\n    // fire drawend event\r\n    this._fireDrawEnd();\r\n    this._setGlobalDrawMode();\r\n  },\r\n  enabled() {\r\n    return this._enabled;\r\n  },\r\n  toggle(options) {\r\n    if (this.enabled()) {\r\n      this.disable();\r\n    } else {\r\n      this.enable(options);\r\n    }\r\n  },\r\n  _placeStartingMarkers(e) {\r\n    // assign the coordinate of the click to the hintMarker, that's necessary for\r\n    // mobile where the marker can't follow a cursor\r\n    if (!this._hintMarker._snapped) {\r\n      this._hintMarker.setLatLng(e.latlng);\r\n    }\r\n\r\n    // get coordinate for new vertex by hintMarker (cursor marker)\r\n    const latlng = this._hintMarker.getLatLng();\r\n\r\n    // show and place start marker\r\n    L.DomUtil.addClass(this._startMarker._icon, 'visible');\r\n    this._startMarker.setLatLng(latlng);\r\n\r\n    // if we have the other two visibilty markers, show and place them now\r\n    if (this.options.cursorMarker && this._styleMarkers) {\r\n      this._styleMarkers.forEach((styleMarker) => {\r\n        L.DomUtil.addClass(styleMarker._icon, 'visible');\r\n        styleMarker.setLatLng(latlng);\r\n      });\r\n    }\r\n\r\n    this._map.off('click', this._placeStartingMarkers, this);\r\n    this._map.on('click', this._finishShape, this);\r\n\r\n    // change tooltip text\r\n    this._hintMarker.setTooltipContent(getTranslation('tooltips.finishRect'));\r\n\r\n    this._setRectangleOrigin();\r\n  },\r\n  _setRectangleOrigin() {\r\n    const latlng = this._startMarker.getLatLng();\r\n\r\n    if (latlng) {\r\n      // show it first\r\n      this._layerGroup.addLayer(this._layer);\r\n\r\n      this._layer.setLatLngs([latlng, latlng]);\r\n\r\n      this._hintMarker.on('move', this._syncRectangleSize, this);\r\n    }\r\n  },\r\n  _syncHintMarker(e) {\r\n    // move the cursor marker\r\n    this._hintMarker.setLatLng(e.latlng);\r\n\r\n    // if snapping is enabled, do it\r\n    if (this.options.snappable) {\r\n      const fakeDragEvent = e;\r\n      fakeDragEvent.target = this._hintMarker;\r\n      this._handleSnapping(fakeDragEvent);\r\n    }\r\n\r\n    const latlngs =\r\n      this._layerGroup && this._layerGroup.hasLayer(this._layer)\r\n        ? this._layer.getLatLngs()\r\n        : [this._hintMarker.getLatLng()];\r\n    this._fireChange(latlngs, 'Draw');\r\n  },\r\n  _syncRectangleSize() {\r\n    const A = fixLatOffset(this._startMarker.getLatLng(), this._map);\r\n    const B = fixLatOffset(this._hintMarker.getLatLng(), this._map);\r\n\r\n    // Create a (maybe rotated) box using corners A & B (A = Starting Position, B = Current Mouse Position)\r\n    const corners = L.PM.Utils._getRotatedRectangle(\r\n      A,\r\n      B,\r\n      this.options.rectangleAngle || 0,\r\n      this._map\r\n    );\r\n    this._layer.setLatLngs(corners);\r\n\r\n    // Add matching style markers, if cursor marker is shown\r\n    if (this.options.cursorMarker && this._styleMarkers) {\r\n      const unmarkedCorners = [];\r\n\r\n      // Find two corners not currently occupied by starting marker and hint marker\r\n      corners.forEach((corner) => {\r\n        // the default equals margin is 1.0e-9 but in other crs projections the latlng equality can be slightly different after `_getRotatedRectangle`, so we make the precession a little bit lower\r\n        if (!corner.equals(A, 1.0e-8) && !corner.equals(B, 1.0e-8)) {\r\n          unmarkedCorners.push(corner);\r\n        }\r\n      });\r\n\r\n      // Reposition style markers\r\n      unmarkedCorners.forEach((unmarkedCorner, index) => {\r\n        try {\r\n          this._styleMarkers[index].setLatLng(unmarkedCorner);\r\n        } catch (e) {\r\n          // ignore error - should be fixed with the next mousemove\r\n        }\r\n      });\r\n    }\r\n  },\r\n  _findCorners() {\r\n    const latlngs = this._layer.getLatLngs()[0];\r\n    return L.PM.Utils._getRotatedRectangle(\r\n      latlngs[0],\r\n      latlngs[2],\r\n      this.options.rectangleAngle || 0,\r\n      this._map\r\n    );\r\n  },\r\n  _finishShape(e) {\r\n    // assign the coordinate of the click to the hintMarker, that's necessary for\r\n    // mobile where the marker can't follow a cursor\r\n    if (!this._hintMarker._snapped) {\r\n      this._hintMarker.setLatLng(e.latlng);\r\n    }\r\n\r\n    // get coordinate for new vertex by hintMarker (cursor marker)\r\n    const B = this._hintMarker.getLatLng();\r\n    // get already placed corner from the startmarker\r\n    const A = this._startMarker.getLatLng();\r\n\r\n    // If snap finish is required but the last marker wasn't snapped, do not finish the shape!\r\n    if (\r\n      this.options.requireSnapToFinish &&\r\n      !this._hintMarker._snapped &&\r\n      !this._isFirstLayer()\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (A.equals(B)) {\r\n      // rectangle has only one point\r\n      return;\r\n    }\r\n\r\n    // create the final rectangle layer, based on opposite corners A & B\r\n    const rectangleLayer = L.rectangle([A, B], this.options.pathOptions);\r\n\r\n    // rectangle can only initialized with bounds (not working with rotation) so we update the latlngs\r\n    if (this.options.rectangleAngle) {\r\n      const corners = L.PM.Utils._getRotatedRectangle(\r\n        A,\r\n        B,\r\n        this.options.rectangleAngle || 0,\r\n        this._map\r\n      );\r\n      rectangleLayer.setLatLngs(corners);\r\n      if (rectangleLayer.pm) {\r\n        rectangleLayer.pm._setAngle(this.options.rectangleAngle || 0);\r\n      }\r\n    }\r\n\r\n    this._setPane(rectangleLayer, 'layerPane');\r\n    this._finishLayer(rectangleLayer);\r\n    rectangleLayer.addTo(this._map.pm._getContainingLayer());\r\n\r\n    // fire the pm:create event and pass shape and layer\r\n    this._fireCreate(rectangleLayer);\r\n\r\n    // disable drawing\r\n    this.disable();\r\n    if (this.options.continueDrawing) {\r\n      this.enable();\r\n    }\r\n  },\r\n  setStyle() {\r\n    this._layer?.setStyle(this.options.pathOptions);\r\n  },\r\n});\r\n", "import Draw from './L.PM.Draw';\r\nimport { destinationOnLine, getTranslation } from '../helpers';\r\n\r\nDraw.CircleMarker = Draw.extend({\r\n  initialize(map) {\r\n    this._map = map;\r\n    this._shape = 'CircleMarker';\r\n    this.toolbarButtonName = 'drawCircleMarker';\r\n    // with _layerIsDragging we check if a circlemarker is currently dragged and disable marker creation\r\n    this._layerIsDragging = false;\r\n    this._BaseCircleClass = L.CircleMarker;\r\n    this._minRadiusOption = 'minRadiusCircleMarker';\r\n    this._maxRadiusOption = 'maxRadiusCircleMarker';\r\n    this._editableOption = 'resizeableCircleMarker';\r\n    this._defaultRadius = 10;\r\n  },\r\n  enable(options) {\r\n    // TODO: Think about if these options could be passed globally for all\r\n    // instances of L.PM.Draw. So a dev could set drawing style one time as some kind of config\r\n    L.Util.setOptions(this, options);\r\n    // TODO: remove with next major release\r\n    if (this.options.editable) {\r\n      this.options.resizeableCircleMarker = this.options.editable;\r\n      delete this.options.editable;\r\n    }\r\n\r\n    // change enabled state\r\n    this._enabled = true;\r\n\r\n    // toggle the draw button of the Toolbar in case drawing mode got enabled without the button\r\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, true);\r\n\r\n    // change map cursor\r\n    this._map.getContainer().classList.add('geoman-draw-cursor');\r\n\r\n    // Draw the CircleMarker like a Circle\r\n    if (this.options[this._editableOption]) {\r\n      // we need to set the radius to 0 without overwriting the CircleMarker style\r\n      const templineStyle = {};\r\n      L.extend(templineStyle, this.options.templineStyle);\r\n      templineStyle.radius = 0;\r\n\r\n      // create a new layergroup\r\n      this._layerGroup = new L.FeatureGroup();\r\n      this._layerGroup._pmTempLayer = true;\r\n      this._layerGroup.addTo(this._map);\r\n\r\n      // this is the circle we want to draw\r\n      this._layer = new this._BaseCircleClass(\r\n        this._map.getCenter(),\r\n        templineStyle\r\n      );\r\n      this._setPane(this._layer, 'layerPane');\r\n      this._layer._pmTempLayer = true;\r\n\r\n      // this is the marker in the center of the circle\r\n      this._centerMarker = L.marker(this._map.getCenter(), {\r\n        icon: L.divIcon({ className: 'marker-icon' }),\r\n        draggable: false,\r\n        zIndexOffset: 100,\r\n      });\r\n      this._setPane(this._centerMarker, 'vertexPane');\r\n      this._centerMarker._pmTempLayer = true;\r\n\r\n      // this is the hintmarker on the mouse cursor\r\n      this._hintMarker = L.marker(this._map.getCenter(), {\r\n        zIndexOffset: 110,\r\n        icon: L.divIcon({ className: 'marker-icon cursor-marker' }),\r\n      });\r\n      this._setPane(this._hintMarker, 'vertexPane');\r\n      this._hintMarker._pmTempLayer = true;\r\n      this._layerGroup.addLayer(this._hintMarker);\r\n\r\n      // show the hintmarker if the option is set\r\n      if (this.options.cursorMarker) {\r\n        L.DomUtil.addClass(this._hintMarker._icon, 'visible');\r\n      }\r\n\r\n      // add tooltip to hintmarker\r\n      if (this.options.tooltips) {\r\n        this._hintMarker\r\n          .bindTooltip(getTranslation('tooltips.startCircle'), {\r\n            permanent: true,\r\n            offset: L.point(0, 10),\r\n            direction: 'bottom',\r\n\r\n            opacity: 0.8,\r\n          })\r\n          .openTooltip();\r\n      }\r\n\r\n      // this is the hintline from the hint marker to the center marker\r\n      this._hintline = L.polyline([], this.options.hintlineStyle);\r\n      this._setPane(this._hintline, 'layerPane');\r\n      this._hintline._pmTempLayer = true;\r\n      this._layerGroup.addLayer(this._hintline);\r\n      // create a polygon-point on click\r\n      this._map.on('click', this._placeCenterMarker, this);\r\n    } else {\r\n      // create a marker on click on the map\r\n      this._map.on('click', this._createMarker, this);\r\n\r\n      // this is the hintmarker on the mouse cursor\r\n      this._hintMarker = new this._BaseCircleClass(this._map.getCenter(), {\r\n        radius: this._defaultRadius,\r\n        ...this.options.templineStyle,\r\n      });\r\n      this._setPane(this._hintMarker, 'layerPane');\r\n      this._hintMarker._pmTempLayer = true;\r\n      this._hintMarker.addTo(this._map);\r\n      // this is just to keep the snappable mixin happy\r\n      this._layer = this._hintMarker;\r\n\r\n      // add tooltip to hintmarker\r\n      if (this.options.tooltips) {\r\n        this._hintMarker\r\n          .bindTooltip(getTranslation('tooltips.placeCircleMarker'), {\r\n            permanent: true,\r\n            offset: L.point(0, 10),\r\n            direction: 'bottom',\r\n\r\n            opacity: 0.8,\r\n          })\r\n          .openTooltip();\r\n      }\r\n    }\r\n\r\n    // sync hint marker with mouse cursor\r\n    this._map.on('mousemove', this._syncHintMarker, this);\r\n\r\n    this._extendingEnable();\r\n\r\n    // an array used in the snapping mixin.\r\n    // TODO: think about moving this somewhere else?\r\n    this._otherSnapLayers = [];\r\n\r\n    // fire drawstart event\r\n    this._fireDrawStart();\r\n    this._setGlobalDrawMode();\r\n  },\r\n  _extendingEnable() {\r\n    if (!this.options[this._editableOption] && this.options.markerEditable) {\r\n      // enable edit mode for existing markers\r\n      this._map.eachLayer((layer) => {\r\n        if (this.isRelevantMarker(layer)) {\r\n          layer.pm.enable();\r\n        }\r\n      });\r\n    }\r\n\r\n    this._layer.bringToBack();\r\n  },\r\n  disable() {\r\n    // cancel, if drawing mode isn't even enabled\r\n    if (!this._enabled) {\r\n      return;\r\n    }\r\n    // change enabled state\r\n    this._enabled = false;\r\n\r\n    // reset cursor\r\n    this._map.getContainer().classList.remove('geoman-draw-cursor');\r\n\r\n    // disable when drawing like a Circle\r\n    if (this.options[this._editableOption]) {\r\n      // unbind listeners\r\n      this._map.off('click', this._finishShape, this);\r\n      this._map.off('click', this._placeCenterMarker, this);\r\n\r\n      // remove helping layers\r\n      this._map.removeLayer(this._layerGroup);\r\n    } else {\r\n      // undbind click event, don't create a marker on click anymore\r\n      this._map.off('click', this._createMarker, this);\r\n\r\n      this._extendingDisable();\r\n\r\n      // remove hint marker\r\n      this._hintMarker.remove();\r\n    }\r\n\r\n    // remove event listener to sync hint marker\r\n    this._map.off('mousemove', this._syncHintMarker, this);\r\n\r\n    // toggle the draw button of the Toolbar in case drawing mode got disabled without the button\r\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, false);\r\n\r\n    // cleanup snapping\r\n    if (this.options.snappable) {\r\n      this._cleanupSnapping();\r\n    }\r\n\r\n    // fire drawend event\r\n    this._fireDrawEnd();\r\n    this._setGlobalDrawMode();\r\n  },\r\n  _extendingDisable() {\r\n    // disable dragging and removing for all markers\r\n    this._map.eachLayer((layer) => {\r\n      if (this.isRelevantMarker(layer)) {\r\n        layer.pm.disable();\r\n      }\r\n    });\r\n  },\r\n  enabled() {\r\n    return this._enabled;\r\n  },\r\n  toggle(options) {\r\n    if (this.enabled()) {\r\n      this.disable();\r\n    } else {\r\n      this.enable(options);\r\n    }\r\n  },\r\n  _placeCenterMarker(e) {\r\n    this._layerGroup.addLayer(this._layer);\r\n    this._layerGroup.addLayer(this._centerMarker);\r\n    // assign the coordinate of the click to the hintMarker, that's necessary for\r\n    // mobile where the marker can't follow a cursor\r\n    if (!this._hintMarker._snapped) {\r\n      this._hintMarker.setLatLng(e.latlng);\r\n    }\r\n\r\n    // get coordinate for new vertex by hintMarker (cursor marker)\r\n    const latlng = this._hintMarker.getLatLng();\r\n    this._layerGroup.addLayer(this._layer);\r\n\r\n    this._centerMarker.setLatLng(latlng);\r\n\r\n    this._map.off('click', this._placeCenterMarker, this);\r\n    this._map.on('click', this._finishShape, this);\r\n\r\n    this._placeCircleCenter();\r\n  },\r\n  _placeCircleCenter() {\r\n    const latlng = this._centerMarker.getLatLng();\r\n\r\n    if (latlng) {\r\n      this._layer.setLatLng(latlng);\r\n\r\n      // sync the hintline with hint marker\r\n      this._hintMarker.on('move', this._syncHintLine, this);\r\n      this._hintMarker.on('move', this._syncCircleRadius, this);\r\n\r\n      this._hintMarker.setTooltipContent(\r\n        getTranslation('tooltips.finishCircle')\r\n      );\r\n\r\n      this._fireCenterPlaced();\r\n      this._fireChange(this._layer.getLatLng(), 'Draw');\r\n    }\r\n  },\r\n  _syncHintLine() {\r\n    const latlng = this._centerMarker.getLatLng();\r\n    const secondLatLng = this._getNewDestinationOfHintMarker();\r\n    // set coords for hintline from marker to last vertex of drawin polyline\r\n    this._hintline.setLatLngs([latlng, secondLatLng]);\r\n  },\r\n  _syncCircleRadius() {\r\n    const A = this._centerMarker.getLatLng();\r\n    const B = this._hintMarker.getLatLng();\r\n\r\n    const distance = this._distanceCalculation(A, B);\r\n\r\n    if (\r\n      this.options[this._minRadiusOption] &&\r\n      distance < this.options[this._minRadiusOption]\r\n    ) {\r\n      this._layer.setRadius(this.options[this._minRadiusOption]);\r\n    } else if (\r\n      this.options[this._maxRadiusOption] &&\r\n      distance > this.options[this._maxRadiusOption]\r\n    ) {\r\n      this._layer.setRadius(this.options[this._maxRadiusOption]);\r\n    } else {\r\n      this._layer.setRadius(distance);\r\n    }\r\n  },\r\n  _syncHintMarker(e) {\r\n    // move the cursor marker\r\n    this._hintMarker.setLatLng(e.latlng);\r\n    // calculate the new latlng of marker if radius is out of min/max\r\n    this._hintMarker.setLatLng(this._getNewDestinationOfHintMarker());\r\n\r\n    // if snapping is enabled, do it\r\n    if (this.options.snappable) {\r\n      const fakeDragEvent = e;\r\n      fakeDragEvent.target = this._hintMarker;\r\n      this._handleSnapping(fakeDragEvent);\r\n    }\r\n\r\n    this._handleHintMarkerSnapping();\r\n\r\n    const latlng =\r\n      this._layerGroup && this._layerGroup.hasLayer(this._centerMarker)\r\n        ? this._centerMarker.getLatLng()\r\n        : this._hintMarker.getLatLng();\r\n    this._fireChange(latlng, 'Draw');\r\n  },\r\n  isRelevantMarker(layer) {\r\n    return (\r\n      layer instanceof L.CircleMarker &&\r\n      !(layer instanceof L.Circle) &&\r\n      layer.pm &&\r\n      !layer._pmTempLayer\r\n    );\r\n  },\r\n  _createMarker(e) {\r\n    // If snap finish is required but the last marker wasn't snapped, do not finish the shape!\r\n    if (\r\n      this.options.requireSnapToFinish &&\r\n      !this._hintMarker._snapped &&\r\n      !this._isFirstLayer()\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // with _layerIsDragging we check if a circlemarker is currently dragged\r\n    if (!e.latlng || this._layerIsDragging) {\r\n      return;\r\n    }\r\n\r\n    // assign the coordinate of the click to the hintMarker, that's necessary for\r\n    // mobile where the marker can't follow a cursor\r\n    if (!this._hintMarker._snapped) {\r\n      this._hintMarker.setLatLng(e.latlng);\r\n    }\r\n\r\n    // get coordinate for new vertex by hintMarker (cursor marker)\r\n    const latlng = this._hintMarker.getLatLng();\r\n\r\n    // create marker\r\n    const marker = new this._BaseCircleClass(latlng, {\r\n      radius: this._defaultRadius,\r\n      ...this.options.pathOptions,\r\n    });\r\n    this._setPane(marker, 'layerPane');\r\n    this._finishLayer(marker);\r\n    // add marker to the map\r\n    marker.addTo(this._map.pm._getContainingLayer());\r\n\r\n    this._extendingCreateMarker(marker);\r\n\r\n    // fire the pm:create event and pass shape and marker\r\n    this._fireCreate(marker);\r\n\r\n    this._cleanupSnapping();\r\n\r\n    if (!this.options.continueDrawing) {\r\n      this.disable();\r\n    }\r\n  },\r\n  _extendingCreateMarker(marker) {\r\n    if (marker.pm && this.options.markerEditable) {\r\n      // enable editing for the marker\r\n      marker.pm.enable();\r\n    }\r\n  },\r\n  _finishShape(e) {\r\n    // If snap finish is required but the last marker wasn't snapped, do not finish the shape!\r\n    if (\r\n      this.options.requireSnapToFinish &&\r\n      !this._hintMarker._snapped &&\r\n      !this._isFirstLayer()\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // assign the coordinate of the click to the hintMarker, that's necessary for\r\n    // mobile where the marker can't follow a cursor\r\n    if (!this._hintMarker._snapped) {\r\n      this._hintMarker.setLatLng(e.latlng);\r\n    }\r\n\r\n    const center = this._centerMarker.getLatLng();\r\n    let radius = this._defaultRadius;\r\n    if (this.options[this._editableOption]) {\r\n      // calc the radius\r\n      const latlng = this._hintMarker.getLatLng();\r\n      radius = this._distanceCalculation(center, latlng);\r\n      if (\r\n        this.options[this._minRadiusOption] &&\r\n        radius < this.options[this._minRadiusOption]\r\n      ) {\r\n        radius = this.options[this._minRadiusOption];\r\n      } else if (\r\n        this.options[this._maxRadiusOption] &&\r\n        radius > this.options[this._maxRadiusOption]\r\n      ) {\r\n        radius = this.options[this._maxRadiusOption];\r\n      }\r\n    }\r\n\r\n    const options = { ...this.options.pathOptions, radius };\r\n\r\n    // create the final circle layer\r\n    const circleLayer = new this._BaseCircleClass(center, options);\r\n    this._setPane(circleLayer, 'layerPane');\r\n    this._finishLayer(circleLayer);\r\n    circleLayer.addTo(this._map.pm._getContainingLayer());\r\n\r\n    if (circleLayer.pm) {\r\n      // create polygon around the circle border\r\n      circleLayer.pm._updateHiddenPolyCircle();\r\n    }\r\n\r\n    // fire the pm:create event and pass shape and layer\r\n    this._fireCreate(circleLayer);\r\n\r\n    // disable drawing\r\n    this.disable();\r\n    if (this.options.continueDrawing) {\r\n      this.enable();\r\n    }\r\n  },\r\n  _getNewDestinationOfHintMarker() {\r\n    let secondLatLng = this._hintMarker.getLatLng();\r\n    if (this.options[this._editableOption]) {\r\n      if (!this._layerGroup.hasLayer(this._centerMarker)) {\r\n        return secondLatLng;\r\n      }\r\n\r\n      const latlng = this._centerMarker.getLatLng();\r\n\r\n      const distance = this._distanceCalculation(latlng, secondLatLng);\r\n\r\n      if (\r\n        this.options[this._minRadiusOption] &&\r\n        distance < this.options[this._minRadiusOption]\r\n      ) {\r\n        secondLatLng = destinationOnLine(\r\n          this._map,\r\n          latlng,\r\n          secondLatLng,\r\n          this._getMinDistanceInMeter()\r\n        );\r\n      } else if (\r\n        this.options[this._maxRadiusOption] &&\r\n        distance > this.options[this._maxRadiusOption]\r\n      ) {\r\n        secondLatLng = destinationOnLine(\r\n          this._map,\r\n          latlng,\r\n          secondLatLng,\r\n          this._getMaxDistanceInMeter()\r\n        );\r\n      }\r\n    }\r\n    return secondLatLng;\r\n  },\r\n  _getMinDistanceInMeter() {\r\n    return L.PM.Utils.pxRadiusToMeterRadius(\r\n      this.options[this._minRadiusOption],\r\n      this._map,\r\n      this._centerMarker.getLatLng()\r\n    );\r\n  },\r\n  _getMaxDistanceInMeter() {\r\n    return L.PM.Utils.pxRadiusToMeterRadius(\r\n      this.options[this._maxRadiusOption],\r\n      this._map,\r\n      this._centerMarker.getLatLng()\r\n    );\r\n  },\r\n  _handleHintMarkerSnapping() {\r\n    if (this.options[this._editableOption]) {\r\n      if (this._hintMarker._snapped) {\r\n        const latlng = this._centerMarker.getLatLng();\r\n        const secondLatLng = this._hintMarker.getLatLng();\r\n        const distance = this._distanceCalculation(latlng, secondLatLng);\r\n\r\n        if (!this._layerGroup.hasLayer(this._centerMarker)) {\r\n          // do nothing\r\n        } else if (\r\n          this.options[this._minRadiusOption] &&\r\n          distance < this.options[this._minRadiusOption]\r\n        ) {\r\n          this._hintMarker.setLatLng(this._hintMarker._orgLatLng);\r\n        } else if (\r\n          this.options[this._maxRadiusOption] &&\r\n          distance > this.options[this._maxRadiusOption]\r\n        ) {\r\n          this._hintMarker.setLatLng(this._hintMarker._orgLatLng);\r\n        }\r\n      }\r\n      // calculate the new latlng of marker if the snapped latlng radius is out of min/max\r\n      this._hintMarker.setLatLng(this._getNewDestinationOfHintMarker());\r\n    }\r\n  },\r\n  setStyle() {\r\n    const templineStyle = {};\r\n    L.extend(templineStyle, this.options.templineStyle);\r\n    if (this.options[this._editableOption]) {\r\n      templineStyle.radius = 0;\r\n    }\r\n    this._layer?.setStyle(templineStyle);\r\n    this._hintline?.setStyle(this.options.hintlineStyle);\r\n  },\r\n  _distanceCalculation(A, B) {\r\n    return this._map.project(A).distanceTo(this._map.project(B));\r\n  },\r\n});\r\n", "import Draw from './L.PM.Draw';\r\n\r\nDraw.Circle = Draw.CircleMarker.extend({\r\n  initialize(map) {\r\n    this._map = map;\r\n    this._shape = 'Circle';\r\n    this.toolbarButtonName = 'drawCircle';\r\n    this._BaseCircleClass = L.Circle;\r\n    this._minRadiusOption = 'minRadiusCircle';\r\n    this._maxRadiusOption = 'maxRadiusCircle';\r\n    this._editableOption = 'resizeableCircle';\r\n    this._defaultRadius = 100;\r\n  },\r\n  _extendingEnable() {},\r\n  _extendingDisable() {},\r\n  _extendingCreateMarker() {},\r\n  isRelevantMarker() {},\r\n  _getMinDistanceInMeter() {\r\n    return this.options[this._minRadiusOption];\r\n  },\r\n  _getMaxDistanceInMeter() {\r\n    return this.options[this._maxRadiusOption];\r\n  },\r\n  _distanceCalculation(A, B) {\r\n    return this._map.distance(A, B);\r\n  },\r\n});\r\n", "// eslint-disable-next-line prefer-destructuring\r\nconst polygonClipping = window.polygonClipping;\r\nexport function feature(geom) {\r\n  const feat = { type: 'Feature' };\r\n  feat.geometry = geom;\r\n  return feat;\r\n}\r\n\r\nexport function getGeometry(geojson) {\r\n  if (geojson.type === 'Feature') return geojson.geometry;\r\n  return geojson;\r\n}\r\n\r\nexport function getCoords(geojson) {\r\n  if (geojson && geojson.geometry && geojson.geometry.coordinates)\r\n    return geojson.geometry.coordinates;\r\n  return geojson;\r\n}\r\n\r\nexport function turfPoint(coords, precision = -1) {\r\n  if (precision > -1) {\r\n    coords[0] = L.Util.formatNum(coords[0], precision);\r\n    coords[1] = L.Util.formatNum(coords[1], precision);\r\n  }\r\n\r\n  return feature({ type: 'Point', coordinates: coords });\r\n}\r\n\r\nexport function turfLineString(coords) {\r\n  return feature({ type: 'LineString', coordinates: coords });\r\n}\r\n\r\nexport function turfMultiLineString(coords) {\r\n  return feature({ type: 'MultiLineString', coordinates: coords });\r\n}\r\n\r\nexport function turfPolygon(coords) {\r\n  return feature({ type: 'Polygon', coordinates: coords });\r\n}\r\n\r\nexport function turfMultiPolygon(coords) {\r\n  return feature({ type: 'MultiPolygon', coordinates: coords });\r\n}\r\n\r\nexport function turfFeatureCollection(features) {\r\n  return { type: 'FeatureCollection', features };\r\n}\r\n\r\nexport function intersect(poly1, poly2) {\r\n  const geom1 = getGeometry(poly1);\r\n  const geom2 = getGeometry(poly2);\r\n\r\n  const intersection = (polygonClipping || window.polygonClipping).intersection(\r\n    geom1.coordinates,\r\n    geom2.coordinates\r\n  );\r\n  if (intersection.length === 0) return null;\r\n  if (intersection.length === 1) return turfPolygon(intersection[0]);\r\n  return turfMultiPolygon(intersection);\r\n}\r\n\r\nexport function difference(polygon1, polygon2) {\r\n  const geom1 = getGeometry(polygon1);\r\n  const geom2 = getGeometry(polygon2);\r\n\r\n  const differenced = (polygonClipping || window.polygonClipping).difference(\r\n    geom1.coordinates,\r\n    geom2.coordinates\r\n  );\r\n  if (differenced.length === 0) return null;\r\n  if (differenced.length === 1) return turfPolygon(differenced[0]);\r\n  return turfMultiPolygon(differenced);\r\n}\r\n\r\n// LineString coords returns 1\r\n// MultiLineString coords returns 2\r\nexport function getDepthOfCoords(coords) {\r\n  if (Array.isArray(coords)) {\r\n    return 1 + getDepthOfCoords(coords[0]);\r\n  }\r\n  return -1; // return -1 because this is already the lng of the lnglat (geojson) array\r\n}\r\n\r\nexport function flattenPolyline(polyline) {\r\n  if (polyline instanceof L.Polyline) {\r\n    polyline = polyline.toGeoJSON(15);\r\n  }\r\n\r\n  const coords = getCoords(polyline);\r\n  const depth = getDepthOfCoords(coords);\r\n  const features = [];\r\n  if (depth > 1) {\r\n    coords.forEach((coord) => {\r\n      features.push(turfLineString(coord));\r\n    });\r\n  } else {\r\n    features.push(polyline);\r\n  }\r\n\r\n  return features;\r\n}\r\n\r\nexport function groupToMultiLineString(group) {\r\n  const coords = [];\r\n  group.eachLayer((layer) => {\r\n    coords.push(getCoords(layer.toGeoJSON(15)));\r\n  });\r\n  return turfMultiLineString(coords);\r\n}\r\n\r\nexport function convertToLatLng(coords) {\r\n  const lnglat = getCoords(coords);\r\n  return L.latLng(lnglat[1], lnglat[0]);\r\n}\r\n\r\nexport function convertArrayToLatLngs(arr) {\r\n  const latlngs = [];\r\n  if (arr.features) {\r\n    arr.features.forEach((geojson) => {\r\n      latlngs.push(convertToLatLng(geojson));\r\n    });\r\n  }\r\n  return latlngs;\r\n}\r\n", "\r\nimport Draw from './L.PM.Draw';\r\nimport {\r\n  difference,\r\n  flattenPolyline,\r\n  groupToMultiLineString,\r\n  intersect,\r\n} from '../helpers/turfHelper';\r\n\r\n// eslint-disable-next-line prefer-destructuring\r\nconst lineIntersect = window.lineIntersect;\r\n// eslint-disable-next-line prefer-destructuring\r\nconst lineSplit = window.lineSplit;\r\n// eslint-disable-next-line prefer-destructuring\r\nconst booleanContains = window.booleanContains;\r\nconst get = window.getLodash;\r\nDraw.Cut = Draw.Polygon.extend({\r\n  initialize(map) {\r\n    this._map = map;\r\n    this._shape = 'Cut';\r\n    this.toolbarButtonName = 'cutPolygon';\r\n  },\r\n  _finishShape() {\r\n    this._editedLayers = [];\r\n    // if self intersection is not allowed, do not finish the shape!\r\n    if (!this.options.allowSelfIntersection) {\r\n      // Check if polygon intersects when is completed and the line between the last and the first point is drawn\r\n      this._handleSelfIntersection(true, this._layer.getLatLngs()[0]);\r\n\r\n      if (this._doesSelfIntersect) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // If snap finish is required but the last marker wasn't snapped, do not finish the shape!\r\n    if (\r\n      this.options.requireSnapToFinish &&\r\n      !this._hintMarker._snapped &&\r\n      !this._isFirstLayer()\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // get coordinates\r\n    const coords = this._layer.getLatLngs();\r\n\r\n    // only finish the shape if there are 3 or more vertices\r\n    if (coords.length <= 2) {\r\n      return;\r\n    }\r\n\r\n    const polygonLayer = L.polygon(coords, this.options.pathOptions);\r\n    // readout information about the latlngs like snapping points\r\n    polygonLayer._latlngInfos = this._layer._latlngInfo;\r\n    this.cut(polygonLayer);\r\n\r\n    // clean up snapping states\r\n    this._cleanupSnapping();\r\n\r\n    // remove the first vertex from \"other snapping layers\"\r\n    this._otherSnapLayers.splice(this._tempSnapLayerIndex, 1);\r\n    delete this._tempSnapLayerIndex;\r\n\r\n    this._editedLayers.forEach(({ layer, originalLayer }) => {\r\n      // fire pm:cut on the cutted layer\r\n      this._fireCut(originalLayer, layer, originalLayer);\r\n\r\n      // fire pm:cut on the map\r\n      this._fireCut(this._map, layer, originalLayer);\r\n\r\n      // fire edit event after cut\r\n      originalLayer.pm._fireEdit();\r\n    });\r\n    this._editedLayers = [];\r\n\r\n    // disable drawing\r\n    this.disable();\r\n    if (this.options.continueDrawing) {\r\n      this.enable();\r\n    }\r\n  },\r\n  cut(layer) {\r\n    const all = this._map._layers;\r\n    // contains information about snapping points\r\n    const _latlngInfos = layer._latlngInfos || [];\r\n\r\n    // find all layers that intersect with `layer`, the just drawn cutting layer\r\n    const layers = Object.keys(all)\r\n      // convert object to array\r\n      .map((l) => all[l])\r\n      // only layers handled by leaflet-geoman\r\n      .filter((l) => l.pm)\r\n      .filter((l) => !l._pmTempLayer)\r\n      // filter out everything that ignore leaflet-geoman\r\n      .filter(\r\n        (l) =>\r\n          (!L.PM.optIn && !l.options.pmIgnore) || // if optIn is not set / true and pmIgnore is not set / true (default)\r\n          (L.PM.optIn && l.options.pmIgnore === false) // if optIn is true and pmIgnore is false);\r\n      )\r\n      // only polyline instances\r\n      .filter((l) => l instanceof L.Polyline)\r\n      // exclude the drawn one\r\n      .filter((l) => l !== layer)\r\n      // layer is allowed to cut\r\n      .filter((l) => l.pm.options.allowCutting)\r\n      // filter out everything that ignore leaflet-geoman\r\n      .filter((l) => {\r\n        // TODO: after cutting nothing else can be cutted anymore until a new list is passed, because the layers don't exists anymore. Should we remove the cutted layers from the list?\r\n        if (\r\n          this.options.layersToCut &&\r\n          L.Util.isArray(this.options.layersToCut) &&\r\n          this.options.layersToCut.length > 0\r\n        ) {\r\n          return this.options.layersToCut.indexOf(l) > -1;\r\n        }\r\n        return true;\r\n      })\r\n      // filter out everything that ignore leaflet-geoman\r\n      .filter((l) => !this._layerGroup.hasLayer(l))\r\n      // only layers with intersections\r\n      .filter((l) => {\r\n        try {\r\n          const lineInter =\r\n            !!(lineIntersect || window.lineIntersect)(layer.toGeoJSON(15), l.toGeoJSON(15)).features\r\n              .length > 0;\r\n\r\n          if (\r\n            lineInter ||\r\n            (l instanceof L.Polyline && !(l instanceof L.Polygon))\r\n          ) {\r\n            return lineInter;\r\n          }\r\n          return !!intersect(layer.toGeoJSON(15), l.toGeoJSON(15));\r\n        } catch (e) {\r\n          if (l instanceof L.Polygon) {\r\n            /* eslint-disable-next-line no-console */\r\n            console.error(\"You can't cut polygons with self-intersections\");\r\n          }\r\n          return false;\r\n        }\r\n      });\r\n\r\n    // loop through all layers that intersect with the drawn (cutting) layer\r\n    layers.forEach((l) => {\r\n      let newLayer;\r\n      if (l instanceof L.Polygon) {\r\n        // Also for L.Rectangle\r\n        // easiest way to clone the complete latlngs without reference\r\n        newLayer = L.polygon(l.getLatLngs());\r\n        const coords = newLayer.getLatLngs();\r\n\r\n        // snapping points added to the layer, so borders are cutted correct\r\n        _latlngInfos.forEach((info) => {\r\n          if (info && info.snapInfo) {\r\n            const { latlng } = info;\r\n            // get closest layer ( == input layer) with the closest segment to the intersection point\r\n            const closest = this._calcClosestLayer(latlng, [newLayer]);\r\n            if (\r\n              closest &&\r\n              closest.segment &&\r\n              closest.distance < this.options.snapDistance\r\n            ) {\r\n              const { segment } = closest;\r\n              if (segment && segment.length === 2) {\r\n                const { indexPath, parentPath, newIndex } =\r\n                  L.PM.Utils._getIndexFromSegment(coords, segment);\r\n                // define the coordsRing that is edited\r\n                const coordsRing =\r\n                  indexPath.length > 1 ? (get || window.get)(coords, parentPath) : coords;\r\n                coordsRing.splice(newIndex, 0, latlng);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        // L.Polyline\r\n        newLayer = l;\r\n      }\r\n\r\n      // find layer difference\r\n      const diff = this._cutLayer(layer, newLayer);\r\n\r\n      // the resulting layer after the cut\r\n      let resultLayer = L.geoJSON(diff, l.options);\r\n      if (resultLayer.getLayers().length === 1) {\r\n        [resultLayer] = resultLayer.getLayers(); // prevent that a unnecessary layergroup is created\r\n      }\r\n      this._setPane(resultLayer, 'layerPane');\r\n      const resultingLayer = resultLayer.addTo(\r\n        this._map.pm._getContainingLayer()\r\n      );\r\n      // give the new layer the original options\r\n      resultingLayer.pm.enable(l.pm.options);\r\n      resultingLayer.pm.disable();\r\n\r\n      // add templayer prop so pm:remove isn't fired\r\n      l._pmTempLayer = true;\r\n      layer._pmTempLayer = true;\r\n\r\n      // remove old layer and cutting layer\r\n      l.remove();\r\n      l.removeFrom(this._map.pm._getContainingLayer());\r\n      layer.remove();\r\n      layer.removeFrom(this._map.pm._getContainingLayer());\r\n\r\n      // Remove it only if it is a layergroup. It can be only not a layergroup if a layer exists\r\n      if (resultingLayer.getLayers && resultingLayer.getLayers().length === 0) {\r\n        this._map.pm.removeLayer({ target: resultingLayer });\r\n      }\r\n\r\n      if (resultingLayer instanceof L.LayerGroup) {\r\n        resultingLayer.eachLayer((_layer) => {\r\n          this._addDrawnLayerProp(_layer);\r\n        });\r\n        this._addDrawnLayerProp(resultingLayer);\r\n      } else {\r\n        this._addDrawnLayerProp(resultingLayer);\r\n      }\r\n\r\n      if (\r\n        this.options.layersToCut &&\r\n        L.Util.isArray(this.options.layersToCut) &&\r\n        this.options.layersToCut.length > 0\r\n      ) {\r\n        const idx = this.options.layersToCut.indexOf(l);\r\n        if (idx > -1) {\r\n          this.options.layersToCut.splice(idx, 1);\r\n        }\r\n      }\r\n\r\n      this._editedLayers.push({\r\n        layer: resultingLayer,\r\n        originalLayer: l,\r\n      });\r\n    });\r\n  },\r\n  _cutLayer(layer, l) {\r\n    const fg = L.geoJSON();\r\n    let diff;\r\n    // cut\r\n    if (l instanceof L.Polygon) {\r\n      // find layer difference\r\n      diff = difference(l.toGeoJSON(15), layer.toGeoJSON(15));\r\n    } else {\r\n      const features = flattenPolyline(l);\r\n\r\n      features.forEach((feature) => {\r\n        // get splitted line to look which line part is coverd by the cut polygon\r\n        const lineDiff = (lineSplit || window.lineSplit)(feature, layer.toGeoJSON(15));\r\n\r\n        let group;\r\n        if (lineDiff && lineDiff.features.length > 0) {\r\n          group = L.geoJSON(lineDiff);\r\n        } else {\r\n          group = L.geoJSON(feature);\r\n        }\r\n\r\n        group.getLayers().forEach((lay) => {\r\n          // add only parts to the map, they are not covered by the cut polygon\r\n          if (!(booleanContains || window.booleanContains)(layer.toGeoJSON(15), lay.toGeoJSON(15))) {\r\n            lay.addTo(fg);\r\n          }\r\n        });\r\n      });\r\n\r\n      if (features.length > 1) {\r\n        diff = groupToMultiLineString(fg);\r\n      } else {\r\n        diff = fg.toGeoJSON(15);\r\n      }\r\n    }\r\n    return diff;\r\n  },\r\n  _change: L.Util.falseFn,\r\n});\r\n", "import Draw from './L.PM.Draw';\r\nimport { getTranslation } from '../helpers';\r\n\r\nDraw.Text = Draw.extend({\r\n  initialize(map) {\r\n    this._map = map;\r\n    this._shape = 'Text';\r\n    this.toolbarButtonName = 'drawText';\r\n  },\r\n  enable(options) {\r\n    // TODO: Think about if these options could be passed globally for all\r\n    // instances of L.PM.Draw. So a dev could set drawing style one time as some kind of config\r\n    L.Util.setOptions(this, options);\r\n\r\n    // change enabled state\r\n    this._enabled = true;\r\n\r\n    // create a marker on click on the map\r\n    this._map.on('click', this._createMarker, this);\r\n\r\n    // toggle the draw button of the Toolbar in case drawing mode got enabled without the button\r\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, true);\r\n\r\n    // this is the hintmarker on the mouse cursor\r\n    this._hintMarker = L.marker(this._map.getCenter(), {\r\n      interactive: false,\r\n      zIndexOffset: 100,\r\n      icon: L.divIcon({ className: 'marker-icon cursor-marker' }),\r\n    });\r\n    this._setPane(this._hintMarker, 'vertexPane');\r\n    this._hintMarker._pmTempLayer = true;\r\n    this._hintMarker.addTo(this._map);\r\n\r\n    // show the hintmarker if the option is set\r\n    if (this.options.cursorMarker) {\r\n      L.DomUtil.addClass(this._hintMarker._icon, 'visible');\r\n    }\r\n\r\n    // add tooltip to hintmarker\r\n    if (this.options.tooltips) {\r\n      this._hintMarker\r\n        .bindTooltip(getTranslation('tooltips.placeText'), {\r\n          permanent: true,\r\n          offset: L.point(0, 10),\r\n          direction: 'bottom',\r\n\r\n          opacity: 0.8,\r\n        })\r\n        .openTooltip();\r\n    }\r\n\r\n    // this is just to keep the snappable mixin happy\r\n    this._layer = this._hintMarker;\r\n\r\n    // sync hint marker with mouse cursor\r\n    this._map.on('mousemove', this._syncHintMarker, this);\r\n\r\n    this._map.getContainer().classList.add('geoman-draw-cursor');\r\n\r\n    // fire drawstart event\r\n    this._fireDrawStart();\r\n    this._setGlobalDrawMode();\r\n  },\r\n  disable() {\r\n    // cancel, if drawing mode isn't even enabled\r\n    if (!this._enabled) {\r\n      return;\r\n    }\r\n\r\n    // change enabled state\r\n    this._enabled = false;\r\n\r\n    // undbind click event, don't create a marker on click anymore\r\n    this._map.off('click', this._createMarker, this);\r\n\r\n    // remove hint marker\r\n    this._hintMarker?.remove();\r\n\r\n    this._map.getContainer().classList.remove('geoman-draw-cursor');\r\n\r\n    // remove event listener to sync hint marker\r\n    this._map.off('mousemove', this._syncHintMarker, this);\r\n\r\n    // toggle the draw button of the Toolbar in case drawing mode got disabled without the button\r\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, false);\r\n\r\n    // cleanup snapping\r\n    if (this.options.snappable) {\r\n      this._cleanupSnapping();\r\n    }\r\n\r\n    // fire drawend event\r\n    this._fireDrawEnd();\r\n    this._setGlobalDrawMode();\r\n  },\r\n  enabled() {\r\n    return this._enabled;\r\n  },\r\n  toggle(options) {\r\n    if (this.enabled()) {\r\n      this.disable();\r\n    } else {\r\n      this.enable(options);\r\n    }\r\n  },\r\n  _syncHintMarker(e) {\r\n    // move the cursor marker\r\n    this._hintMarker.setLatLng(e.latlng);\r\n\r\n    // if snapping is enabled, do it\r\n    if (this.options.snappable) {\r\n      const fakeDragEvent = e;\r\n      fakeDragEvent.target = this._hintMarker;\r\n      this._handleSnapping(fakeDragEvent);\r\n    }\r\n  },\r\n  _createMarker(e) {\r\n    if (!e.latlng) {\r\n      return;\r\n    }\r\n\r\n    // If snap finish is required but the last marker wasn't snapped, do not finish the shape!\r\n    if (\r\n      this.options.requireSnapToFinish &&\r\n      !this._hintMarker._snapped &&\r\n      !this._isFirstLayer()\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // assign the coordinate of the click to the hintMarker, that's necessary for\r\n    // mobile where the marker can't follow a cursor\r\n    if (!this._hintMarker._snapped) {\r\n      this._hintMarker.setLatLng(e.latlng);\r\n    }\r\n\r\n    // get coordinate for new vertex by hintMarker (cursor marker)\r\n    const latlng = this._hintMarker.getLatLng();\r\n\r\n    this.textArea = this._createTextArea();\r\n\r\n    if (this.options.textOptions?.className) {\r\n      const cssClasses = this.options.textOptions.className.split(' ');\r\n      this.textArea.classList.add(...cssClasses);\r\n    }\r\n\r\n    const textAreaIcon = this._createTextIcon(this.textArea);\r\n\r\n    const marker = new L.Marker(latlng, {\r\n      textMarker: true,\r\n      _textMarkerOverPM: true, // we need to put this into the options, else we can't catch this in the init method\r\n      icon: textAreaIcon,\r\n    });\r\n    this._setPane(marker, 'markerPane');\r\n    this._finishLayer(marker);\r\n\r\n    if (!marker.pm) {\r\n      // if pm is not create we don't apply dragging to the marker (draggable is applied to the marker, when it is added to the map )\r\n      marker.options.draggable = false;\r\n    }\r\n    // add marker to the map\r\n    marker.addTo(this._map.pm._getContainingLayer());\r\n    if (marker.pm) {\r\n      marker.pm.textArea = this.textArea;\r\n      L.setOptions(marker.pm, {\r\n        removeIfEmpty: this.options.textOptions?.removeIfEmpty ?? true,\r\n      });\r\n\r\n      const focusAfterDraw = this.options.textOptions?.focusAfterDraw ?? true;\r\n      marker.pm._createTextMarker(focusAfterDraw);\r\n      if (this.options.textOptions?.text) {\r\n        marker.pm.setText(this.options.textOptions.text);\r\n      }\r\n    }\r\n\r\n    // fire the pm:create event and pass shape and marker\r\n    this._fireCreate(marker);\r\n\r\n    this._cleanupSnapping();\r\n\r\n    // disable drawing\r\n    this.disable();\r\n    if (this.options.continueDrawing) {\r\n      this.enable();\r\n    }\r\n  },\r\n\r\n  _createTextArea() {\r\n    const textArea = document.createElement('textarea');\r\n    textArea.readOnly = true;\r\n    textArea.classList.add('pm-textarea', 'pm-disabled');\r\n    return textArea;\r\n  },\r\n\r\n  _createTextIcon(textArea) {\r\n    return L.divIcon({\r\n      className: 'pm-text-marker',\r\n      html: textArea,\r\n    });\r\n  },\r\n});\r\n", "import { getRenderer } from '../helpers';\r\n\r\nconst DragMixin = {\r\n  enableLayerDrag() {\r\n    // layer is not allowed to dragged or is not on the map\r\n    if (!this.options.draggable || !this._layer._map) {\r\n      return;\r\n    }\r\n\r\n    // before enabling layer drag, disable layer editing\r\n    this.disable();\r\n\r\n    this._layerDragEnabled = true;\r\n\r\n    // if layer never enabled and _map is not set (for snapping)\r\n    if (!this._map) {\r\n      this._map = this._layer._map;\r\n    }\r\n\r\n    if (\r\n      this._layer instanceof L.Marker ||\r\n      this._layer instanceof L.ImageOverlay\r\n    ) {\r\n      // prevents dragging the DOM image instead of the marker\r\n      L.DomEvent.on(this._getDOMElem(), 'dragstart', this._stopDOMImageDrag);\r\n    }\r\n\r\n    // Disable Leaflet Dragging of Markers\r\n    if (this._layer.dragging) {\r\n      this._layer.dragging.disable();\r\n    }\r\n\r\n    // temporary coord variable for delta calculation\r\n    this._tempDragCoord = null;\r\n\r\n    // add CSS class\r\n    if (getRenderer(this._layer) instanceof L.Canvas) {\r\n      this._layer.on('mouseout', this.removeDraggingClass, this);\r\n      this._layer.on('mouseover', this.addDraggingClass, this);\r\n    } else {\r\n      this.addDraggingClass();\r\n    }\r\n\r\n    this._originalMapDragState = this._layer._map.dragging._enabled;\r\n\r\n    // can we reliably save the map's draggable state?\r\n    // (if the mouse up event happens outside the container, then the map can become undraggable)\r\n    this._safeToCacheDragState = true;\r\n\r\n    const container = this._getDOMElem();\r\n\r\n    // check if DOM element exists\r\n    if (container) {\r\n      // add mousedown event to trigger drag\r\n      if (getRenderer(this._layer) instanceof L.Canvas) {\r\n        this._layer.on(\r\n          'touchstart mousedown',\r\n          this._dragMixinOnMouseDown,\r\n          this\r\n        );\r\n        this._map.pm._addTouchEvents(container);\r\n      } else {\r\n        // We can't just use layer.on('mousedown') because on touch devices the event is not fired if user presses on the layer and then drag it.\r\n        // With checking on touchstart and mousedown on the DOM element we can listen on the needed events\r\n        L.DomEvent.on(\r\n          container,\r\n          'touchstart mousedown',\r\n          this._simulateMouseDownEvent,\r\n          this\r\n        );\r\n      }\r\n    }\r\n\r\n    this._fireDragEnable();\r\n  },\r\n  disableLayerDrag() {\r\n    this._layerDragEnabled = false;\r\n\r\n    // remove CSS class\r\n    if (getRenderer(this._layer) instanceof L.Canvas) {\r\n      this._layer.off('mouseout', this.removeDraggingClass, this);\r\n      this._layer.off('mouseover', this.addDraggingClass, this);\r\n    } else {\r\n      this.removeDraggingClass();\r\n    }\r\n\r\n    // if the layer is dragged but now disabled\r\n    if (this._originalMapDragState && this._dragging) {\r\n      this._map.dragging.enable();\r\n    }\r\n\r\n    // no longer save the drag state\r\n    this._safeToCacheDragState = false;\r\n\r\n    // Disable Leaflet Dragging of Markers\r\n    if (this._layer.dragging) {\r\n      this._layer.dragging.disable();\r\n    }\r\n\r\n    const container = this._getDOMElem();\r\n    // check if DOM element exists\r\n    if (container) {\r\n      if (getRenderer(this._layer) instanceof L.Canvas) {\r\n        this._layer.off(\r\n          'touchstart mousedown',\r\n          this._dragMixinOnMouseDown,\r\n          this\r\n        );\r\n        this._map.pm._removeTouchEvents(container);\r\n      } else {\r\n        // disable mousedown event\r\n        L.DomEvent.off(\r\n          container,\r\n          'touchstart mousedown',\r\n          this._simulateMouseDownEvent,\r\n          this\r\n        );\r\n      }\r\n    }\r\n\r\n    if (this._layerDragged) {\r\n      this._fireUpdate();\r\n    }\r\n    this._layerDragged = false;\r\n\r\n    this._fireDragDisable();\r\n  },\r\n  // TODO: make this private in the next major release\r\n  dragging() {\r\n    return this._dragging;\r\n  },\r\n  layerDragEnabled() {\r\n    return !!this._layerDragEnabled;\r\n  },\r\n  // We need to simulate a mousedown event on the layer object. We can't just use layer.on('mousedown') because on touch devices the event is not fired if user presses on the layer and then drag it.\r\n  // With checking on touchstart and mousedown on the DOM element we can listen on the needed events\r\n  _simulateMouseDownEvent(e) {\r\n    const first = e.touches ? e.touches[0] : e;\r\n    const evt = {\r\n      originalEvent: first,\r\n      target: this._layer,\r\n    };\r\n    // we expect in the function to get the clicked latlng / point\r\n    evt.containerPoint = this._map.mouseEventToContainerPoint(first);\r\n    evt.latlng = this._map.containerPointToLatLng(evt.containerPoint);\r\n\r\n    this._dragMixinOnMouseDown(evt);\r\n    return false;\r\n  },\r\n  _simulateMouseMoveEvent(e) {\r\n    const first = e.touches ? e.touches[0] : e;\r\n    const evt = {\r\n      originalEvent: first,\r\n      target: this._layer,\r\n    };\r\n    // we expect in the function to get the clicked latlng / point\r\n    evt.containerPoint = this._map.mouseEventToContainerPoint(first);\r\n    evt.latlng = this._map.containerPointToLatLng(evt.containerPoint);\r\n\r\n    this._dragMixinOnMouseMove(evt);\r\n    return false;\r\n  },\r\n  _simulateMouseUpEvent(e) {\r\n    const first = e.touches ? e.touches[0] : e;\r\n    const evt = {\r\n      originalEvent: first,\r\n      target: this._layer,\r\n    };\r\n    if (e.type.indexOf('touch') === -1) {\r\n      // we expect in the function to get the clicked latlng / point\r\n      evt.containerPoint = this._map.mouseEventToContainerPoint(e);\r\n      evt.latlng = this._map.containerPointToLatLng(evt.containerPoint);\r\n    }\r\n    this._dragMixinOnMouseUp(evt);\r\n    return false;\r\n  },\r\n  _dragMixinOnMouseDown(e) {\r\n    // cancel if mouse button is NOT the left button\r\n    if (e.originalEvent.button > 0) {\r\n      return;\r\n    }\r\n    this._overwriteEventIfItComesFromMarker(e);\r\n\r\n    const fromLayerSync = e._fromLayerSync;\r\n\r\n    // if other layers found, snapping will be disabled\r\n    const layersToSyncFound = this._syncLayers('_dragMixinOnMouseDown', e);\r\n\r\n    if (this._layer instanceof L.Marker) {\r\n      if (this.options.snappable && !fromLayerSync && !layersToSyncFound) {\r\n        this._initSnappableMarkers();\r\n      } else {\r\n        this._disableSnapping();\r\n      }\r\n    }\r\n\r\n    // we need to disable snapping for CircleMarker because they are snapping because of the check in onLayerDrag -> if(_snapped)\r\n    if (this._layer instanceof L.CircleMarker) {\r\n      let _editableOption = 'resizeableCircleMarker';\r\n      if (this._layer instanceof L.Circle) {\r\n        _editableOption = 'resizeableCircle';\r\n      }\r\n\r\n      if (this.options.snappable && !fromLayerSync && !layersToSyncFound) {\r\n        if (!this._layer.pm.options[_editableOption]) {\r\n          this._initSnappableMarkersDrag();\r\n        }\r\n      } else if (this._layer.pm.options[_editableOption]) {\r\n        this._layer.pm._disableSnapping();\r\n      } else {\r\n        this._layer.pm._disableSnappingDrag();\r\n      }\r\n    }\r\n\r\n    // save current map dragging state\r\n    if (this._safeToCacheDragState) {\r\n      this._originalMapDragState = this._layer._map.dragging._enabled;\r\n\r\n      // don't cache the state again until another mouse up is registered\r\n      this._safeToCacheDragState = false;\r\n    }\r\n\r\n    // save for delta calculation\r\n    this._tempDragCoord = e.latlng;\r\n\r\n    L.DomEvent.on(\r\n      this._map.getContainer(),\r\n      'touchend mouseup',\r\n      this._simulateMouseUpEvent,\r\n      this\r\n    );\r\n\r\n    // listen to mousemove on map (instead of polygon),\r\n    // otherwise fast mouse movements stop the drag\r\n    L.DomEvent.on(\r\n      this._map.getContainer(),\r\n      'touchmove mousemove',\r\n      this._simulateMouseMoveEvent,\r\n      this\r\n    );\r\n  },\r\n  _dragMixinOnMouseMove(e) {\r\n    this._overwriteEventIfItComesFromMarker(e);\r\n    const el = this._getDOMElem();\r\n\r\n    this._syncLayers('_dragMixinOnMouseMove', e);\r\n\r\n    if (!this._dragging) {\r\n      // set state\r\n      this._dragging = true;\r\n      L.DomUtil.addClass(el, 'leaflet-pm-dragging');\r\n\r\n      if (!(this._layer instanceof L.Marker)) {\r\n        // bring it to front to prevent drag interception\r\n        this._layer.bringToFront();\r\n      }\r\n\r\n      // disbale map drag\r\n      if (this._originalMapDragState) {\r\n        this._map.dragging.disable();\r\n      }\r\n\r\n      // fire pm:dragstart event\r\n      this._fireDragStart();\r\n    }\r\n\r\n    // if _tempDragCoord is null add the current latlng to prevent throwing a error. This can happen when for example the layer is removed and added to the map while dragging (MarkerCluster)\r\n    if (!this._tempDragCoord) {\r\n      this._tempDragCoord = e.latlng;\r\n    }\r\n\r\n    this._onLayerDrag(e);\r\n\r\n    // update the hidden circle border after dragging\r\n    if (this._layer instanceof L.CircleMarker) {\r\n      this._layer.pm._updateHiddenPolyCircle();\r\n    }\r\n  },\r\n  _dragMixinOnMouseUp(e) {\r\n    const el = this._getDOMElem();\r\n\r\n    this._syncLayers('_dragMixinOnMouseUp', e);\r\n\r\n    // re-enable map drag\r\n    if (this._originalMapDragState) {\r\n      this._map.dragging.enable();\r\n    }\r\n\r\n    // if mouseup event fired, it's safe to cache the map draggable state on the next mouse down\r\n    this._safeToCacheDragState = true;\r\n    // clear up mousemove event\r\n    L.DomEvent.off(\r\n      this._map.getContainer(),\r\n      'touchmove mousemove',\r\n      this._simulateMouseMoveEvent,\r\n      this\r\n    );\r\n\r\n    // clear up mouseup event\r\n    L.DomEvent.off(\r\n      this._map.getContainer(),\r\n      'touchend mouseup',\r\n      this._simulateMouseUpEvent,\r\n      this\r\n    );\r\n\r\n    // if no drag happened, don't do anything\r\n    if (!this._dragging) {\r\n      return false;\r\n    }\r\n\r\n    // update the hidden circle border after dragging\r\n    if (this._layer instanceof L.CircleMarker) {\r\n      this._layer.pm._updateHiddenPolyCircle();\r\n    }\r\n\r\n    this._layerDragged = true;\r\n\r\n    // timeout to prevent click event after drag :-/\r\n    // TODO: do it better as soon as leaflet has a way to do it better :-)\r\n    window.setTimeout(() => {\r\n      // set state\r\n      this._dragging = false;\r\n      // if the layer is not on the map, we have no DOM element\r\n      if (el) {\r\n        L.DomUtil.removeClass(el, 'leaflet-pm-dragging');\r\n      }\r\n\r\n      // fire pm:dragend event\r\n      this._fireDragEnd();\r\n\r\n      // fire edit\r\n      this._fireEdit();\r\n      this._layerEdited = true;\r\n    }, 10);\r\n\r\n    return true;\r\n  },\r\n  _onLayerDrag(e) {\r\n    // latLng of mouse event\r\n    const { latlng } = e;\r\n\r\n    // delta coords (how far was dragged)\r\n    const deltaLatLng = {\r\n      lat: latlng.lat - this._tempDragCoord.lat,\r\n      lng: latlng.lng - this._tempDragCoord.lng,\r\n    };\r\n\r\n    // move the coordinates by the delta\r\n    const moveCoords = (coords) =>\r\n      // alter the coordinates\r\n      coords.map((currentLatLng) => {\r\n        if (Array.isArray(currentLatLng)) {\r\n          // do this recursively as coords might be nested\r\n          return moveCoords(currentLatLng);\r\n        }\r\n\r\n        // move the coord and return it\r\n        const newLatlng = {\r\n          lat: currentLatLng.lat + deltaLatLng.lat,\r\n          lng: currentLatLng.lng + deltaLatLng.lng,\r\n        };\r\n\r\n        if (currentLatLng.alt || currentLatLng.alt === 0) {\r\n          newLatlng.alt = currentLatLng.alt;\r\n        }\r\n        return newLatlng;\r\n      });\r\n\r\n    if (\r\n      (this._layer instanceof L.Circle &&\r\n        this._layer.options.resizeableCircle) ||\r\n      (this._layer instanceof L.CircleMarker &&\r\n        this._layer.options.resizeableCircleMarker)\r\n    ) {\r\n      // create the new coordinates array\r\n      const newCoords = moveCoords([this._layer.getLatLng()]);\r\n      // set new coordinates and redraw\r\n      this._layer.setLatLng(newCoords[0]);\r\n      this._fireChange(this._layer.getLatLng(), 'Edit');\r\n    } else if (\r\n      this._layer instanceof L.CircleMarker ||\r\n      this._layer instanceof L.Marker\r\n    ) {\r\n      let coordsRefernce = this._layer.getLatLng();\r\n      if (this._layer._snapped) {\r\n        // if layer is snapped we use the original latlng for re-calculation, else the layer will not be \"unsnappable\" anymore\r\n        coordsRefernce = this._layer._orgLatLng;\r\n      }\r\n      // create the new coordinates array\r\n      const newCoords = moveCoords([coordsRefernce]);\r\n      // set new coordinates and redraw\r\n      this._layer.setLatLng(newCoords[0]);\r\n      this._fireChange(this._layer.getLatLng(), 'Edit');\r\n    } else if (this._layer instanceof L.ImageOverlay) {\r\n      // create the new coordinates array\r\n      const newCoords = moveCoords([\r\n        this._layer.getBounds().getNorthWest(),\r\n        this._layer.getBounds().getSouthEast(),\r\n      ]);\r\n      // set new coordinates and redraw\r\n      this._layer.setBounds(newCoords);\r\n      this._fireChange(this._layer.getBounds(), 'Edit');\r\n    } else {\r\n      // create the new coordinates array\r\n      const newCoords = moveCoords(this._layer.getLatLngs());\r\n\r\n      // set new coordinates and redraw\r\n      this._layer.setLatLngs(newCoords);\r\n      this._fireChange(this._layer.getLatLngs(), 'Edit');\r\n    }\r\n\r\n    // save current latlng for next delta calculation\r\n    this._tempDragCoord = latlng;\r\n\r\n    e.layer = this._layer;\r\n    // fire pm:dragstart event\r\n    this._fireDrag(e);\r\n  },\r\n  addDraggingClass() {\r\n    const el = this._getDOMElem();\r\n    if (el) {\r\n      L.DomUtil.addClass(el, 'leaflet-pm-draggable');\r\n    }\r\n  },\r\n  removeDraggingClass() {\r\n    const el = this._getDOMElem();\r\n    if (el) {\r\n      L.DomUtil.removeClass(el, 'leaflet-pm-draggable');\r\n    }\r\n  },\r\n  _getDOMElem() {\r\n    let el = null;\r\n    if (this._layer._path) {\r\n      el = this._layer._path;\r\n    } else if (this._layer._renderer && this._layer._renderer._container) {\r\n      el = this._layer._renderer._container;\r\n    } else if (this._layer._image) {\r\n      el = this._layer._image;\r\n    } else if (this._layer._icon) {\r\n      el = this._layer._icon;\r\n    }\r\n    return el;\r\n  },\r\n  _overwriteEventIfItComesFromMarker(e) {\r\n    // e.latlng is not the clicked latlng if the layer is a Marker (or the radius below 10) -> Leaflet definition\r\n    // https://github.com/Leaflet/Leaflet/blob/0f904a515879fcd08f69b7f51799ee7f18f23fd8/src/map/Map.js#L1416\r\n    const isMarker =\r\n      e.target.getLatLng && (!e.target._radius || e.target._radius <= 10);\r\n    if (isMarker) {\r\n      // we want the clicked latlng / point, so we overwrite the property e.latlng\r\n      e.containerPoint = this._map.mouseEventToContainerPoint(e.originalEvent);\r\n      e.latlng = this._map.containerPointToLatLng(e.containerPoint);\r\n    }\r\n  },\r\n  _syncLayers(fnc, e) {\r\n    // if layer is in Edit-Mode it should not be possible to drag other layers too. (Marker & CircleMarker & ImageOverlay)\r\n    if (this.enabled()) {\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      !e._fromLayerSync &&\r\n      this._layer === e.target &&\r\n      this.options.syncLayersOnDrag\r\n    ) {\r\n      e._fromLayerSync = true;\r\n      let layersToSync = [];\r\n      if (L.Util.isArray(this.options.syncLayersOnDrag)) {\r\n        // layers\r\n        layersToSync = this.options.syncLayersOnDrag;\r\n\r\n        this.options.syncLayersOnDrag.forEach((layer) => {\r\n          if (layer instanceof L.LayerGroup) {\r\n            layersToSync = layersToSync.concat(layer.pm.getLayers(true));\r\n          }\r\n        });\r\n      } else if (this.options.syncLayersOnDrag === true) {\r\n        // LayerGroup\r\n        if (this._parentLayerGroup) {\r\n          for (const key in this._parentLayerGroup) {\r\n            const lg = this._parentLayerGroup[key];\r\n            if (lg.pm) {\r\n              layersToSync = lg.pm.getLayers(true);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (L.Util.isArray(layersToSync) && layersToSync.length > 0) {\r\n        // filter out layers that don't have leaflet-geoman and not allowed to drag\r\n        layersToSync = layersToSync\r\n          .filter((layer) => !!layer.pm)\r\n          .filter((layer) => !!layer.pm.options.draggable);\r\n        layersToSync.forEach((layer) => {\r\n          if (layer !== this._layer && layer.pm[fnc]) {\r\n            layer._snapped = false;\r\n            layer.pm[fnc](e);\r\n          }\r\n        });\r\n      }\r\n      return layersToSync.length > 0;\r\n    }\r\n    return false;\r\n  },\r\n  _stopDOMImageDrag(e) {\r\n    e.preventDefault();\r\n    return false;\r\n  },\r\n};\r\n\r\nexport default DragMixin;\r\n", "export function _convertLatLng(latlng, matrix, map, zoom) {\r\n  return map.unproject(matrix.transform(map.project(latlng, zoom)), zoom);\r\n}\r\n\r\nexport function _convertLatLngs(latlng, matrix, map) {\r\n  let zoom = map.getMaxZoom();\r\n  if (zoom === Infinity) {\r\n    zoom = map.getZoom();\r\n  }\r\n  if (L.Util.isArray(latlng)) {\r\n    const latlngs = [];\r\n    latlng.forEach((x) => {\r\n      latlngs.push(_convertLatLngs(x, matrix, map));\r\n    });\r\n    return latlngs;\r\n  }\r\n  if (latlng instanceof L.LatLng) {\r\n    return _convertLatLng(latlng, matrix, map, zoom);\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function _toPoint(map, latlng) {\r\n  if (latlng instanceof L.Layer) {\r\n    latlng = latlng.getLatLng();\r\n  }\r\n  let zoom = map.getMaxZoom();\r\n  if (zoom === Infinity) {\r\n    zoom = map.getZoom();\r\n  }\r\n  return map.project(latlng, zoom);\r\n}\r\n\r\nexport function _toLatLng(map, point) {\r\n  let zoom = map.getMaxZoom();\r\n  if (zoom === Infinity) {\r\n    zoom = map.getZoom();\r\n  }\r\n  return map.unproject(point, zoom);\r\n}\r\n", "import { _convertLatLngs, _toPoint } from '../helpers/ModeHelper';\r\nimport { calcAngle, copyLatLngs } from '../helpers';\r\n\r\nconst get = window.getLodash;\r\nconst RotateMixin = {\r\n  _onRotateStart(e) {\r\n    // prevent that the limit Markers are calculated new\r\n    this._preventRenderingMarkers(true);\r\n    this._rotationOriginLatLng = this._getRotationCenter().clone();\r\n    this._rotationOriginPoint = _toPoint(this._map, this._rotationOriginLatLng);\r\n    this._rotationStartPoint = _toPoint(this._map, e.target.getLatLng());\r\n    // we need to store the initial latlngs so we can always re-calc from the origin latlngs\r\n    this._initialRotateLatLng = copyLatLngs(this._layer);\r\n    this._startAngle = this.getAngle();\r\n\r\n    const originLatLngs = copyLatLngs(\r\n      this._rotationLayer,\r\n      this._rotationLayer.pm._rotateOrgLatLng\r\n    );\r\n\r\n    this._fireRotationStart(this._rotationLayer, originLatLngs);\r\n    this._fireRotationStart(this._map, originLatLngs);\r\n  },\r\n  _onRotate(e) {\r\n    const position = _toPoint(this._map, e.target.getLatLng());\r\n    const previous = this._rotationStartPoint;\r\n    const origin = this._rotationOriginPoint;\r\n\r\n    // rotation diff angle (radiant)\r\n    const angleDiffRadiant =\r\n      Math.atan2(position.y - origin.y, position.x - origin.x) -\r\n      Math.atan2(previous.y - origin.y, previous.x - origin.x);\r\n\r\n    // rotate the temp polygon\r\n    this._layer.setLatLngs(\r\n      this._rotateLayer(\r\n        angleDiffRadiant,\r\n        this._initialRotateLatLng,\r\n        this._rotationOriginLatLng,\r\n        L.PM.Matrix.init(),\r\n        this._map\r\n      )\r\n    );\r\n    // move the helper markers\r\n    const that = this;\r\n    function forEachLatLng(latlng, path = [], _i = -1) {\r\n      if (_i > -1) {\r\n        path.push(_i);\r\n      }\r\n      if (L.Util.isArray(latlng[0])) {\r\n        latlng.forEach((x, i) => forEachLatLng(x, path.slice(), i));\r\n      } else {\r\n        const markers = (get || window.getLodash)(that._markers, path);\r\n        latlng.forEach((_latlng, j) => {\r\n          const marker = markers[j];\r\n          marker.setLatLng(_latlng);\r\n        });\r\n      }\r\n    }\r\n    forEachLatLng(this._layer.getLatLngs());\r\n\r\n    const oldLatLngs = copyLatLngs(this._rotationLayer);\r\n    // rotate the origin layer\r\n    this._rotationLayer.setLatLngs(\r\n      this._rotateLayer(\r\n        angleDiffRadiant,\r\n        this._rotationLayer.pm._rotateOrgLatLng,\r\n        this._rotationOriginLatLng,\r\n        L.PM.Matrix.init(),\r\n        this._map\r\n      )\r\n    );\r\n\r\n    // convert the difference radiant to degrees and add it to the angle before rotation starts\r\n    let angleDiff = (angleDiffRadiant * 180) / Math.PI;\r\n    angleDiff = angleDiff < 0 ? angleDiff + 360 : angleDiff;\r\n    const angle = angleDiff + this._startAngle;\r\n    this._setAngle(angle);\r\n    this._rotationLayer.pm._setAngle(angle);\r\n\r\n    this._fireRotation(this._rotationLayer, angleDiff, oldLatLngs);\r\n    this._fireRotation(this._map, angleDiff, oldLatLngs);\r\n    this._rotationLayer.pm._fireChange(\r\n      this._rotationLayer.getLatLngs(),\r\n      'Rotation'\r\n    );\r\n  },\r\n  _onRotateEnd() {\r\n    const startAngle = this._startAngle;\r\n    delete this._rotationOriginLatLng;\r\n    delete this._rotationOriginPoint;\r\n    delete this._rotationStartPoint;\r\n    delete this._initialRotateLatLng;\r\n    delete this._startAngle;\r\n\r\n    const originLatLngs = copyLatLngs(\r\n      this._rotationLayer,\r\n      this._rotationLayer.pm._rotateOrgLatLng\r\n    );\r\n    // store the new latlngs\r\n    this._rotationLayer.pm._rotateOrgLatLng = copyLatLngs(this._rotationLayer);\r\n\r\n    this._fireRotationEnd(this._rotationLayer, startAngle, originLatLngs);\r\n    this._fireRotationEnd(this._map, startAngle, originLatLngs);\r\n    this._rotationLayer.pm._fireEdit(this._rotationLayer, 'Rotation');\r\n\r\n    this._preventRenderingMarkers(false);\r\n\r\n    this._layerRotated = true;\r\n  },\r\n  _rotateLayer(radiant, latlngs, origin, _matrix, map) {\r\n    const originPoint = _toPoint(map, origin);\r\n    this._matrix = _matrix.clone().rotate(radiant, originPoint).flip();\r\n    return _convertLatLngs(latlngs, this._matrix, map);\r\n  },\r\n  _setAngle(angle) {\r\n    angle = angle < 0 ? angle + 360 : angle;\r\n    this._angle = angle % 360;\r\n  },\r\n  _getRotationCenter() {\r\n    if (this._rotationCenter) {\r\n      return this._rotationCenter;\r\n    }\r\n\r\n    const polygon = L.polygon(this._layer.getLatLngs(), {\r\n      stroke: false,\r\n      fill: false,\r\n      pmIgnore: true,\r\n    }).addTo(this._layer._map);\r\n    const center = polygon.getCenter();\r\n    polygon.removeFrom(this._layer._map);\r\n    return center;\r\n  },\r\n\r\n  /*\r\n   *\r\n   * Public functions f.ex. to disable and enable rotation on the layer directly\r\n   *\r\n   */\r\n  enableRotate() {\r\n    if (!this.options.allowRotation) {\r\n      this.disableRotate();\r\n      return;\r\n    }\r\n\r\n    if (this.rotateEnabled()) {\r\n      this.disableRotate();\r\n    }\r\n\r\n    if (this._layer instanceof L.Rectangle && this._angle === undefined) {\r\n      this.setInitAngle(\r\n        calcAngle(\r\n          this._layer._map,\r\n          this._layer.getLatLngs()[0][0],\r\n          this._layer.getLatLngs()[0][1]\r\n        ) || 0\r\n      );\r\n    }\r\n\r\n    // We create an hidden polygon. We set pmIgnore to false, so that the `pm` property will be always create, also if OptIn == true\r\n    const options = {\r\n      fill: false,\r\n      stroke: false,\r\n      pmIgnore: false,\r\n      snapIgnore: true,\r\n    };\r\n\r\n    // we create a temp polygon for rotation\r\n    this._rotatePoly = L.polygon(this._layer.getLatLngs(), options);\r\n    this._rotatePoly._pmTempLayer = true;\r\n    this._rotatePoly.addTo(this._layer._map);\r\n    this._rotatePoly.pm._setAngle(this.getAngle());\r\n    this._rotatePoly.pm.setRotationCenter(this.getRotationCenter());\r\n    this._rotatePoly.pm.setOptions(this._layer._map.pm.getGlobalOptions());\r\n    this._rotatePoly.pm.setOptions({\r\n      rotate: true,\r\n      snappable: false,\r\n      hideMiddleMarkers: true,\r\n    });\r\n    // we connect the temp polygon (that will be enabled for rotation) with the current layer, so that we can rotate the current layer too\r\n    this._rotatePoly.pm._rotationLayer = this._layer;\r\n    this._rotatePoly.pm.enable();\r\n\r\n    // store the original latlngs\r\n    this._rotateOrgLatLng = copyLatLngs(this._layer);\r\n\r\n    this._rotateEnabled = true;\r\n\r\n    this._layer.on('remove', this.disableRotate, this);\r\n\r\n    this._fireRotationEnable(this._layer);\r\n    // we need to use this._layer._map because this._map can be undefined if layer was never enabled for editing before\r\n    this._fireRotationEnable(this._layer._map);\r\n  },\r\n  disableRotate() {\r\n    if (this.rotateEnabled()) {\r\n      if (this._rotatePoly.pm._layerRotated) {\r\n        this._fireUpdate();\r\n      }\r\n      this._rotatePoly.pm._layerRotated = false;\r\n      // delete the temp polygon\r\n      this._rotatePoly.pm.disable();\r\n      this._rotatePoly.remove();\r\n      this._rotatePoly.pm.setOptions({ rotate: false });\r\n      this._rotatePoly = undefined;\r\n      this._rotateOrgLatLng = undefined;\r\n\r\n      this._layer.off('remove', this.disableRotate, this);\r\n\r\n      this._rotateEnabled = false;\r\n\r\n      this._fireRotationDisable(this._layer);\r\n      // we need to use this._layer._map because this._map can be undefined if layer was never enabled for editing before\r\n      this._fireRotationDisable(this._layer._map);\r\n    }\r\n  },\r\n  rotateEnabled() {\r\n    return !!this._rotateEnabled;\r\n  },\r\n  // angle is clockwise (0-360)\r\n  rotateLayer(degrees) {\r\n    const oldAngle = this.getAngle();\r\n    const oldLatLngs = this._layer.getLatLngs();\r\n    const rads = degrees * (Math.PI / 180);\r\n    this._layer.setLatLngs(\r\n      this._rotateLayer(\r\n        rads,\r\n        this._layer.getLatLngs(),\r\n        this._getRotationCenter(),\r\n        L.PM.Matrix.init(),\r\n        this._layer._map\r\n      )\r\n    );\r\n    // store the new latlngs\r\n    this._rotateOrgLatLng = L.polygon(this._layer.getLatLngs()).getLatLngs();\r\n    this._setAngle(this.getAngle() + degrees);\r\n    if (\r\n      this.rotateEnabled() &&\r\n      this._rotatePoly &&\r\n      this._rotatePoly.pm.enabled()\r\n    ) {\r\n      this._rotatePoly.setLatLngs(\r\n        this._rotateLayer(\r\n          rads,\r\n          this._rotatePoly.getLatLngs(),\r\n          this._getRotationCenter(),\r\n          L.PM.Matrix.init(),\r\n          this._rotatePoly._map\r\n        )\r\n      );\r\n      this._rotatePoly.pm._initMarkers();\r\n    }\r\n\r\n    // TODO: for negative angle change the difference is always (360 - angle), do we want this?\r\n    let angleDiff = this.getAngle() - oldAngle;\r\n    angleDiff = angleDiff < 0 ? angleDiff + 360 : angleDiff;\r\n\r\n    this._startAngle = oldAngle;\r\n    this._fireRotation(this._layer, angleDiff, oldLatLngs, this._layer);\r\n    this._fireRotation(\r\n      this._map || this._layer._map,\r\n      angleDiff,\r\n      oldLatLngs,\r\n      this._layer\r\n    );\r\n    delete this._startAngle;\r\n    this._fireChange(this._layer.getLatLngs(), 'Rotation');\r\n  },\r\n  rotateLayerToAngle(degrees) {\r\n    const newAnlge = degrees - this.getAngle();\r\n    this.rotateLayer(newAnlge);\r\n  },\r\n  // angle is clockwise (0-360)\r\n  getAngle() {\r\n    return this._angle || 0;\r\n  },\r\n  // angle is clockwise (0-360)\r\n  setInitAngle(degrees) {\r\n    this._setAngle(degrees);\r\n  },\r\n  getRotationCenter() {\r\n    return this._getRotationCenter();\r\n  },\r\n  setRotationCenter(center) {\r\n    this._rotationCenter = center;\r\n\r\n    if (this._rotatePoly) {\r\n      this._rotatePoly.pm.setRotationCenter(center);\r\n    }\r\n  },\r\n};\r\n\r\nexport default RotateMixin;\r\n", "import SnapMixin from '../Mixins/Snapping';\r\nimport DragMixin from '../Mixins/Dragging';\r\nimport RotateMixin from '../Mixins/Rotating';\r\nimport EventMixin from '../Mixins/Events';\r\n\r\nconst Edit = L.Class.extend({\r\n  includes: [DragMixin, SnapMixin, RotateMixin, EventMixin],\r\n  options: {\r\n    snappable: true, // TODO: next major Release, rename it to allowSnapping\r\n    snapDistance: 20,\r\n    allowSelfIntersection: true,\r\n    allowSelfIntersectionEdit: false,\r\n    preventMarkerRemoval: false,\r\n    removeLayerBelowMinVertexCount: true,\r\n    limitMarkersToCount: -1,\r\n    hideMiddleMarkers: false,\r\n    snapSegment: true,\r\n    syncLayersOnDrag: false,\r\n    draggable: true, // TODO: next major Release, rename it to allowDragging\r\n    allowEditing: true, // disable all interactions on a layer which are activated with `enable()`. For example a Circle can't be dragged in Edit-Mode\r\n    allowRemoval: true,\r\n    allowCutting: true,\r\n    allowRotation: true,\r\n    addVertexOn: 'click',\r\n    removeVertexOn: 'contextmenu',\r\n    removeVertexValidation: undefined,\r\n    addVertexValidation: undefined,\r\n    moveVertexValidation: undefined,\r\n    resizeableCircleMarker: false,\r\n    resizeableCircle: true,\r\n  },\r\n  setOptions(options) {\r\n    L.Util.setOptions(this, options);\r\n  },\r\n  getOptions() {\r\n    return this.options;\r\n  },\r\n  applyOptions() {},\r\n  isPolygon() {\r\n    // if it's a polygon, it means the coordinates array is multi dimensional\r\n    return this._layer instanceof L.Polygon;\r\n  },\r\n  getShape() {\r\n    return this._shape;\r\n  },\r\n  _setPane(layer, type) {\r\n    if (type === 'layerPane') {\r\n      layer.options.pane =\r\n        (this._map.pm.globalOptions.panes &&\r\n          this._map.pm.globalOptions.panes.layerPane) ||\r\n        'overlayPane';\r\n    } else if (type === 'vertexPane') {\r\n      layer.options.pane =\r\n        (this._map.pm.globalOptions.panes &&\r\n          this._map.pm.globalOptions.panes.vertexPane) ||\r\n        'markerPane';\r\n    } else if (type === 'markerPane') {\r\n      layer.options.pane =\r\n        (this._map.pm.globalOptions.panes &&\r\n          this._map.pm.globalOptions.panes.markerPane) ||\r\n        'markerPane';\r\n    }\r\n  },\r\n  remove() {\r\n    const map = this._map || this._layer._map;\r\n    map.pm.removeLayer({ target: this._layer });\r\n  },\r\n  _vertexValidation(type, e) {\r\n    const marker = e.target;\r\n    const args = { layer: this._layer, marker, event: e };\r\n\r\n    let validationFnc = '';\r\n    if (type === 'move') {\r\n      validationFnc = 'moveVertexValidation';\r\n    } else if (type === 'add') {\r\n      validationFnc = 'addVertexValidation';\r\n    } else if (type === 'remove') {\r\n      validationFnc = 'removeVertexValidation';\r\n    }\r\n\r\n    // if validation goes wrong, we return false\r\n    if (\r\n      this.options[validationFnc] &&\r\n      typeof this.options[validationFnc] === 'function' &&\r\n      !this.options[validationFnc](args)\r\n    ) {\r\n      if (type === 'move') {\r\n        marker._cancelDragEventChain = marker.getLatLng();\r\n      }\r\n      return false;\r\n    }\r\n\r\n    marker._cancelDragEventChain = null;\r\n    return true;\r\n  },\r\n  _vertexValidationDrag(marker) {\r\n    // we reset the marker to the place before it was dragged. We need this, because we can't stop the drag process in a `dragstart` | `movestart` listener\r\n    if (marker._cancelDragEventChain) {\r\n      marker._latlng = marker._cancelDragEventChain;\r\n      marker.update();\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n  _vertexValidationDragEnd(marker) {\r\n    if (marker._cancelDragEventChain) {\r\n      marker._cancelDragEventChain = null;\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n});\r\n\r\nexport default Edit;\r\n", "import Edit from './L.PM.Edit';\r\n\r\n// LayerGroup doesn't inherit from L.PM.Edit because it's just calling L.PM.Edit.Polygon\r\n// (which inherits from L.PM.Edit) for each layer,\r\n// so it's not really a parent class\r\nEdit.LayerGroup = L.Class.extend({\r\n  initialize(layerGroup) {\r\n    this._layerGroup = layerGroup;\r\n    this._layers = this.getLayers();\r\n    this._getMap();\r\n\r\n    // init all layers of the group\r\n    this._layers.forEach((layer) => this._initLayer(layer));\r\n\r\n    // if a new layer is added to the group, reinitialize\r\n    // This only works for FeatureGroups, not LayerGroups\r\n    // https://github.com/Leaflet/Leaflet/issues/4861\r\n\r\n    const addThrottle = (e) => {\r\n      if (e.layer._pmTempLayer) {\r\n        return;\r\n      }\r\n      this._layers = this.getLayers();\r\n      const _initLayers = this._layers.filter(\r\n        (layer) =>\r\n          !layer.pm._parentLayerGroup ||\r\n          !(this._layerGroup._leaflet_id in layer.pm._parentLayerGroup)\r\n      );\r\n      // init the newly added layers (can be multiple because of the throttle)\r\n      _initLayers.forEach((layer) => {\r\n        this._initLayer(layer);\r\n      });\r\n      // if editing was already enabled for this group, enable it again\r\n      // so the new layers are enabled\r\n      if (\r\n        _initLayers.length > 0 &&\r\n        this._getMap() &&\r\n        this._getMap().pm.globalEditModeEnabled()\r\n      ) {\r\n        if (this.enabled()) {\r\n          this.enable(this.getOptions());\r\n        }\r\n      }\r\n    };\r\n    this._layerGroup.on(\r\n      'layeradd',\r\n      L.Util.throttle(addThrottle, 100, this),\r\n      this\r\n    );\r\n\r\n    // Remove the layergroup from the layer\r\n    this._layerGroup.on(\r\n      'layerremove',\r\n      (e) => {\r\n        this._removeLayerFromGroup(e.target);\r\n      },\r\n      this\r\n    );\r\n\r\n    const removeThrottle = (e) => {\r\n      if (e.target._pmTempLayer) {\r\n        return;\r\n      }\r\n      this._layers = this.getLayers();\r\n    };\r\n    // if a layer is removed from the group, calc the layers list again.\r\n    // we run this as throttle because the findLayers() is a larger function\r\n    this._layerGroup.on(\r\n      'layerremove',\r\n      L.Util.throttle(removeThrottle, 100, this),\r\n      this\r\n    );\r\n  },\r\n  enable(options, _layerIds = []) {\r\n    if (_layerIds.length === 0) {\r\n      this._layers = this.getLayers();\r\n    }\r\n    this._options = options;\r\n    this._layers.forEach((layer) => {\r\n      if (layer instanceof L.LayerGroup) {\r\n        if (_layerIds.indexOf(layer._leaflet_id) === -1) {\r\n          _layerIds.push(layer._leaflet_id);\r\n          layer.pm.enable(options, _layerIds);\r\n        }\r\n      } else {\r\n        layer.pm.enable(options);\r\n      }\r\n    });\r\n  },\r\n  disable(_layerIds = []) {\r\n    if (_layerIds.length === 0) {\r\n      this._layers = this.getLayers();\r\n    }\r\n    this._layers.forEach((layer) => {\r\n      if (layer instanceof L.LayerGroup) {\r\n        if (_layerIds.indexOf(layer._leaflet_id) === -1) {\r\n          _layerIds.push(layer._leaflet_id);\r\n          layer.pm.disable(_layerIds);\r\n        }\r\n      } else {\r\n        layer.pm.disable();\r\n      }\r\n    });\r\n  },\r\n  enabled(_layerIds = []) {\r\n    if (_layerIds.length === 0) {\r\n      this._layers = this.getLayers();\r\n    }\r\n    const enabled = this._layers.find((layer) => {\r\n      if (layer instanceof L.LayerGroup) {\r\n        if (_layerIds.indexOf(layer._leaflet_id) === -1) {\r\n          _layerIds.push(layer._leaflet_id);\r\n          return layer.pm.enabled(_layerIds);\r\n        }\r\n        return false; // enabled is already returned because this is not the first time, so we can return always false\r\n      }\r\n      return layer.pm.enabled();\r\n    });\r\n    return !!enabled;\r\n  },\r\n  toggleEdit(options, _layerIds = []) {\r\n    if (_layerIds.length === 0) {\r\n      this._layers = this.getLayers();\r\n    }\r\n    this._options = options;\r\n    this._layers.forEach((layer) => {\r\n      if (layer instanceof L.LayerGroup) {\r\n        if (_layerIds.indexOf(layer._leaflet_id) === -1) {\r\n          _layerIds.push(layer._leaflet_id);\r\n          layer.pm.toggleEdit(options, _layerIds);\r\n        }\r\n      } else {\r\n        layer.pm.toggleEdit(options);\r\n      }\r\n    });\r\n  },\r\n  _initLayer(layer) {\r\n    // add reference for the group to each layer inside said group by id, a layer can have multiple groups\r\n    const id = L.Util.stamp(this._layerGroup);\r\n    if (!layer.pm._parentLayerGroup) {\r\n      layer.pm._parentLayerGroup = {};\r\n    }\r\n    layer.pm._parentLayerGroup[id] = this._layerGroup;\r\n  },\r\n  _removeLayerFromGroup(layer) {\r\n    if (layer.pm && layer.pm._layerGroup) {\r\n      const id = L.Util.stamp(this._layerGroup);\r\n      delete layer.pm._layerGroup[id];\r\n    }\r\n  },\r\n  dragging() {\r\n    this._layers = this.getLayers();\r\n    if (this._layers) {\r\n      const dragging = this._layers.find((layer) => layer.pm.dragging());\r\n      return !!dragging;\r\n    }\r\n    return false;\r\n  },\r\n  getOptions() {\r\n    return this.options;\r\n  },\r\n  _getMap() {\r\n    return this._map || this._layers.find((l) => !!l._map)?._map || null;\r\n  },\r\n  getLayers(\r\n    deep = false,\r\n    filterGeoman = true,\r\n    filterGroupsOut = true,\r\n    _layerIds = []\r\n  ) {\r\n    let layers = [];\r\n    if (deep) {\r\n      // get the layers of LayerGroup children\r\n      this._layerGroup.getLayers().forEach((layer) => {\r\n        layers.push(layer);\r\n        if (layer instanceof L.LayerGroup) {\r\n          if (_layerIds.indexOf(layer._leaflet_id) === -1) {\r\n            _layerIds.push(layer._leaflet_id);\r\n            layers = layers.concat(\r\n              layer.pm.getLayers(true, true, true, _layerIds)\r\n            );\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      // get all layers of the layer group\r\n      layers = this._layerGroup.getLayers();\r\n    }\r\n\r\n    if (filterGroupsOut) {\r\n      layers = layers.filter((layer) => !(layer instanceof L.LayerGroup));\r\n    }\r\n    if (filterGeoman) {\r\n      // filter out layers that don't have leaflet-geoman\r\n      layers = layers.filter((layer) => !!layer.pm);\r\n      // filter out everything that's leaflet-geoman specific temporary stuff\r\n      layers = layers.filter((layer) => !layer._pmTempLayer);\r\n      // filter out everything that ignore leaflet-geoman\r\n      layers = layers.filter(\r\n        (layer) =>\r\n          (!L.PM.optIn && !layer.options.pmIgnore) || // if optIn is not set / true and pmIgnore is not set / true (default)\r\n          (L.PM.optIn && layer.options.pmIgnore === false) // if optIn is true and pmIgnore is false);\r\n      );\r\n    }\r\n    return layers;\r\n  },\r\n  setOptions(options, _layerIds = []) {\r\n    if (_layerIds.length === 0) {\r\n      this._layers = this.getLayers();\r\n    }\r\n    this.options = options;\r\n    this._layers.forEach((layer) => {\r\n      if (layer.pm) {\r\n        if (layer instanceof L.LayerGroup) {\r\n          if (_layerIds.indexOf(layer._leaflet_id) === -1) {\r\n            _layerIds.push(layer._leaflet_id);\r\n            layer.pm.setOptions(options, _layerIds);\r\n          }\r\n        } else {\r\n          layer.pm.setOptions(options);\r\n        }\r\n      }\r\n    });\r\n  },\r\n});\r\n", "import Edit from './L.PM.Edit';\r\n\r\nEdit.Marker = Edit.extend({\r\n  _shape: 'Marker',\r\n  initialize(layer) {\r\n    // layer is a marker in this case :-)\r\n    this._layer = layer;\r\n    this._enabled = false;\r\n\r\n    // register dragend event e.g. to fire pm:edit\r\n    this._layer.on('dragend', this._onDragEnd, this);\r\n  },\r\n  // TODO: remove default option in next major Release\r\n  enable(options = { draggable: true }) {\r\n    L.Util.setOptions(this, options);\r\n\r\n    // layer is not allowed to edit\r\n    if (!this.options.allowEditing || !this._layer._map) {\r\n      this.disable();\r\n      return;\r\n    }\r\n\r\n    this._map = this._layer._map;\r\n\r\n    if (this.enabled()) {\r\n      this.disable();\r\n    }\r\n    this.applyOptions();\r\n\r\n    // if shape gets removed from map, disable edit mode\r\n    this._layer.on('remove', this.disable, this);\r\n\r\n    this._enabled = true;\r\n\r\n    this._fireEnable();\r\n  },\r\n  disable() {\r\n    // if it's not enabled, it doesn't need to be disabled\r\n    if (!this.enabled()) {\r\n      return;\r\n    }\r\n\r\n    // disable dragging, as this could have been active even without being enabled\r\n    this.disableLayerDrag();\r\n\r\n    // remove listener\r\n    this._layer.off('remove', this.disable, this);\r\n    this._layer.off('contextmenu', this._removeMarker, this);\r\n\r\n    if (this._layerEdited) {\r\n      this._fireUpdate();\r\n    }\r\n    this._layerEdited = false;\r\n    this._fireDisable();\r\n\r\n    this._enabled = false;\r\n  },\r\n  enabled() {\r\n    return this._enabled;\r\n  },\r\n  toggleEdit(options) {\r\n    if (!this.enabled()) {\r\n      this.enable(options);\r\n    } else {\r\n      this.disable();\r\n    }\r\n  },\r\n  applyOptions() {\r\n    if (this.options.snappable) {\r\n      this._initSnappableMarkers();\r\n    } else {\r\n      this._disableSnapping();\r\n    }\r\n\r\n    if (this.options.draggable) {\r\n      this.enableLayerDrag();\r\n    } else {\r\n      this.disableLayerDrag();\r\n    }\r\n    // enable removal for the marker\r\n    if (!this.options.preventMarkerRemoval) {\r\n      this._layer.on('contextmenu', this._removeMarker, this);\r\n    }\r\n  },\r\n  _removeMarker(e) {\r\n    const marker = e.target;\r\n    marker.remove();\r\n    // TODO: find out why this is fired manually, shouldn't it be catched by L.PM.Map 'layerremove'?\r\n    this._fireRemove(marker);\r\n    this._fireRemove(this._map, marker);\r\n  },\r\n  _onDragEnd() {\r\n    this._fireEdit();\r\n    this._layerEdited = true;\r\n  },\r\n  // overwrite initSnappableMarkers from Snapping.js Mixin\r\n  _initSnappableMarkers() {\r\n    const marker = this._layer;\r\n\r\n    this.options.snapDistance = this.options.snapDistance || 30;\r\n    this.options.snapSegment =\r\n      this.options.snapSegment === undefined ? true : this.options.snapSegment;\r\n\r\n    marker.off('pm:drag', this._handleSnapping, this);\r\n    marker.on('pm:drag', this._handleSnapping, this);\r\n\r\n    marker.off('pm:dragend', this._cleanupSnapping, this);\r\n    marker.on('pm:dragend', this._cleanupSnapping, this);\r\n\r\n    marker.off('pm:dragstart', this._unsnap, this);\r\n    marker.on('pm:dragstart', this._unsnap, this);\r\n  },\r\n  _disableSnapping() {\r\n    const marker = this._layer;\r\n    marker.off('pm:drag', this._handleSnapping, this);\r\n    marker.off('pm:dragend', this._cleanupSnapping, this);\r\n    marker.off('pm:dragstart', this._unsnap, this);\r\n  },\r\n});\r\n", "const MarkerLimits = {\r\n  filterMarkerGroup() {\r\n    // define cache of markers\r\n    this.markerCache = [];\r\n    this.createCache();\r\n\r\n    // refresh cache when layer was edited (e.g. when a vertex was added or removed)\r\n    this._layer.on('pm:edit', this.createCache, this);\r\n\r\n    // apply filter for the first time\r\n    this.applyLimitFilters({});\r\n\r\n    if (!this.throttledApplyLimitFilters) {\r\n      this.throttledApplyLimitFilters = L.Util.throttle(\r\n        this.applyLimitFilters,\r\n        100,\r\n        this\r\n      );\r\n    }\r\n\r\n    // remove events when edit mode is disabled\r\n    this._layer.on('pm:disable', this._removeMarkerLimitEvents, this);\r\n    this._layer.on('remove', this._removeMarkerLimitEvents, this);\r\n\r\n    // add markers closest to the mouse\r\n    if (this.options.limitMarkersToCount > -1) {\r\n      // re-init markers when a vertex is removed.\r\n      // The reason is that syncing this cache with a removed marker was impossible to do\r\n      this._layer.on('pm:vertexremoved', this._initMarkers, this);\r\n\r\n      this._map.on('mousemove', this.throttledApplyLimitFilters, this);\r\n    }\r\n  },\r\n  _removeMarkerLimitEvents() {\r\n    this._map.off('mousemove', this.throttledApplyLimitFilters, this);\r\n    this._layer.off('pm:edit', this.createCache, this);\r\n    this._layer.off('pm:disable', this._removeMarkerLimitEvents, this);\r\n    this._layer.off('pm:vertexremoved', this._initMarkers, this);\r\n  },\r\n  createCache() {\r\n    const allMarkers = [...this._markerGroup.getLayers(), ...this.markerCache];\r\n    this.markerCache = allMarkers.filter((v, i, s) => s.indexOf(v) === i);\r\n  },\r\n  _removeFromCache(marker) {\r\n    const markerCacheIndex = this.markerCache.indexOf(marker);\r\n    if (markerCacheIndex > -1) {\r\n      this.markerCache.splice(markerCacheIndex, 1);\r\n    }\r\n  },\r\n  renderLimits(markers) {\r\n    this.markerCache.forEach((l) => {\r\n      if (markers.includes(l)) {\r\n        this._markerGroup.addLayer(l);\r\n      } else {\r\n        this._markerGroup.removeLayer(l);\r\n      }\r\n    });\r\n  },\r\n  applyLimitFilters({ latlng = { lat: 0, lng: 0 } }) {\r\n    if (this._preventRenderMarkers) {\r\n      return;\r\n    }\r\n    // find markers near the cursor\r\n    const makersNearCursor = this._filterClosestMarkers(latlng);\r\n\r\n    // all markers that we want to show\r\n    const markersToAdd = [...makersNearCursor];\r\n\r\n    this.renderLimits(markersToAdd);\r\n  },\r\n  _filterClosestMarkers(latlng) {\r\n    const markers = [...this.markerCache];\r\n    const limit = this.options.limitMarkersToCount;\r\n\r\n    if (limit === -1) {\r\n      return markers;\r\n    }\r\n\r\n    // sort markers by distance to cursor\r\n    markers.sort((l, t) => {\r\n      const distanceA = l._latlng.distanceTo(latlng);\r\n      const distanceB = t._latlng.distanceTo(latlng);\r\n\r\n      return distanceA - distanceB;\r\n    });\r\n\r\n    // reduce markers to number of limit\r\n    const closest = markers.filter((l, i) => (limit > -1 ? i < limit : true));\r\n\r\n    return closest;\r\n  },\r\n  _preventRenderMarkers: false,\r\n  _preventRenderingMarkers(value) {\r\n    this._preventRenderMarkers = !!value;\r\n  },\r\n};\r\n\r\nexport default MarkerLimits;\r\n", "import Edit from './L.PM.Edit';\r\nimport { copyLatLngs, hasValues, removeEmptyCoordRings } from '../helpers';\r\n\r\nimport MarkerLimits from '../Mixins/MarkerLimits';\r\n\r\n// eslint-disable-next-line prefer-destructuring\r\nconst lineIntersect = window.lineIntersect;\r\nconst get = window.getLodash;\r\n\r\n// eslint-disable-next-line prefer-destructuring\r\nconst kinks = window.kinks;\r\nEdit.Line = Edit.extend({\r\n  includes: [MarkerLimits],\r\n  _shape: 'Line',\r\n  initialize(layer) {\r\n    this._layer = layer;\r\n    this._enabled = false;\r\n  },\r\n  enable(options) {\r\n    L.Util.setOptions(this, options);\r\n\r\n    this._map = this._layer._map;\r\n\r\n    // cancel when map isn't available, this happens when the polygon is removed before this fires\r\n    if (!this._map) {\r\n      return;\r\n    }\r\n\r\n    // layer is not allowed to edit\r\n    if (!this.options.allowEditing) {\r\n      this.disable();\r\n      return;\r\n    }\r\n\r\n    if (this.enabled()) {\r\n      // if it was already enabled, disable first\r\n      // we don't block enabling again because new options might be passed\r\n      this.disable();\r\n    }\r\n\r\n    // change state\r\n    this._enabled = true;\r\n\r\n    // init markers\r\n    this._initMarkers();\r\n\r\n    this.applyOptions();\r\n\r\n    // if shape gets removed from map, disable edit mode\r\n    this._layer.on('remove', this.disable, this);\r\n\r\n    if (!this.options.allowSelfIntersection) {\r\n      this._layer.on(\r\n        'pm:vertexremoved',\r\n        this._handleSelfIntersectionOnVertexRemoval,\r\n        this\r\n      );\r\n    }\r\n\r\n    if (!this.options.allowSelfIntersection) {\r\n      if (this._layer.options.color !== '#f00000ff') {\r\n        this.cachedColor = this._layer.options.color;\r\n        this.isRed = false;\r\n      } else {\r\n        this.isRed = true;\r\n      }\r\n      this._handleLayerStyle();\r\n    } else {\r\n      this.cachedColor = undefined;\r\n    }\r\n    this._fireEnable();\r\n  },\r\n  disable() {\r\n    // if it's not enabled, it doesn't need to be disabled\r\n    if (!this.enabled()) {\r\n      return;\r\n    }\r\n\r\n    // prevent disabling if polygon is being dragged\r\n    if (this._dragging) {\r\n      return;\r\n    }\r\n    this._enabled = false;\r\n    this._markerGroup.clearLayers();\r\n    this._markerGroup.removeFrom(this._map);\r\n\r\n    // remove listener\r\n    this._layer.off('remove', this.disable, this);\r\n\r\n    if (!this.options.allowSelfIntersection) {\r\n      this._layer.off(\r\n        'pm:vertexremoved',\r\n        this._handleSelfIntersectionOnVertexRemoval,\r\n        this\r\n      );\r\n    }\r\n\r\n    // remove draggable class\r\n    const el = this._layer._path\r\n      ? this._layer._path\r\n      : this._layer._renderer._container;\r\n    L.DomUtil.removeClass(el, 'leaflet-pm-draggable');\r\n\r\n    if (this._layerEdited) {\r\n      this._fireUpdate();\r\n    }\r\n    this._layerEdited = false;\r\n    this._fireDisable();\r\n  },\r\n  enabled() {\r\n    return this._enabled;\r\n  },\r\n  toggleEdit(options) {\r\n    if (!this.enabled()) {\r\n      this.enable(options);\r\n    } else {\r\n      this.disable();\r\n    }\r\n    return this.enabled();\r\n  },\r\n  applyOptions() {\r\n    if (this.options.snappable) {\r\n      this._initSnappableMarkers();\r\n    } else {\r\n      this._disableSnapping();\r\n    }\r\n  },\r\n  _initMarkers() {\r\n    const map = this._map;\r\n    const coords = this._layer.getLatLngs();\r\n\r\n    // cleanup old ones first\r\n    if (this._markerGroup) {\r\n      this._markerGroup.clearLayers();\r\n    }\r\n\r\n    // add markerGroup to map, markerGroup includes regular and middle markers\r\n    this._markerGroup = new L.FeatureGroup();\r\n    this._markerGroup._pmTempLayer = true;\r\n\r\n    // handle coord-rings (outer, inner, etc)\r\n    const handleRing = (coordsArr) => {\r\n      // if there is another coords ring, go a level deep and do this again\r\n      if (Array.isArray(coordsArr[0])) {\r\n        return coordsArr.map(handleRing, this);\r\n      }\r\n\r\n      // the marker array, it includes only the markers of vertexes (no middle markers)\r\n      const ringArr = coordsArr.map(this._createMarker, this);\r\n\r\n      if (this.options.hideMiddleMarkers !== true) {\r\n        // create small markers in the middle of the regular markers\r\n        coordsArr.map((v, k) => {\r\n          // find the next index fist\r\n          const nextIndex = this.isPolygon()\r\n            ? (k + 1) % coordsArr.length\r\n            : k + 1;\r\n          // create the marker\r\n          return this._createMiddleMarker(ringArr[k], ringArr[nextIndex]);\r\n        });\r\n      }\r\n\r\n      return ringArr;\r\n    };\r\n\r\n    // create markers\r\n    this._markers = handleRing(coords);\r\n\r\n    // handle possible limitation: maximum number of markers\r\n    this.filterMarkerGroup();\r\n\r\n    // add markerGroup to map\r\n    map.addLayer(this._markerGroup);\r\n  },\r\n\r\n  // creates initial markers for coordinates\r\n  _createMarker(latlng) {\r\n    const marker = new L.Marker(latlng, {\r\n      draggable: true,\r\n      icon: L.divIcon({ className: 'marker-icon' }),\r\n    });\r\n    this._setPane(marker, 'vertexPane');\r\n\r\n    marker._pmTempLayer = true;\r\n\r\n    if (this.options.rotate) {\r\n      marker.on('dragstart', this._onRotateStart, this);\r\n      marker.on('drag', this._onRotate, this);\r\n      marker.on('dragend', this._onRotateEnd, this);\r\n    } else {\r\n      marker.on('click', this._onVertexClick, this);\r\n      marker.on('dragstart', this._onMarkerDragStart, this);\r\n      marker.on('move', this._onMarkerDrag, this);\r\n      marker.on('dragend', this._onMarkerDragEnd, this);\r\n\r\n      if (!this.options.preventMarkerRemoval) {\r\n        marker.on(this.options.removeVertexOn, this._removeMarker, this);\r\n      }\r\n    }\r\n\r\n    this._markerGroup.addLayer(marker);\r\n\r\n    return marker;\r\n  },\r\n\r\n  // creates the middle markes between coordinates\r\n  _createMiddleMarker(leftM, rightM) {\r\n    // cancel if there are no two markers\r\n    if (!leftM || !rightM) {\r\n      return false;\r\n    }\r\n\r\n    const latlng = L.PM.Utils.calcMiddleLatLng(\r\n      this._map,\r\n      leftM.getLatLng(),\r\n      rightM.getLatLng()\r\n    );\r\n\r\n    const middleMarker = this._createMarker(latlng);\r\n    const middleIcon = L.divIcon({\r\n      className: 'marker-icon marker-icon-middle',\r\n    });\r\n    middleMarker.setIcon(middleIcon);\r\n    middleMarker.leftM = leftM;\r\n    middleMarker.rightM = rightM;\r\n\r\n    // save reference to this middle markers on the neighboor regular markers\r\n    leftM._middleMarkerNext = middleMarker;\r\n    rightM._middleMarkerPrev = middleMarker;\r\n\r\n    middleMarker.on(this.options.addVertexOn, this._onMiddleMarkerClick, this);\r\n    middleMarker.on('movestart', this._onMiddleMarkerMoveStart, this);\r\n\r\n    return middleMarker;\r\n  },\r\n  _onMiddleMarkerClick(e) {\r\n    const middleMarker = e.target;\r\n\r\n    if (!this._vertexValidation('add', e)) {\r\n      return;\r\n    }\r\n    // TODO: move the next two lines inside _addMarker() as soon as\r\n    // https://github.com/Leaflet/Leaflet/issues/4484\r\n    // is fixed\r\n    const icon = L.divIcon({ className: 'marker-icon' });\r\n    middleMarker.setIcon(icon);\r\n    this._addMarker(middleMarker, middleMarker.leftM, middleMarker.rightM);\r\n  },\r\n  _onMiddleMarkerMoveStart(e) {\r\n    const middleMarker = e.target;\r\n    middleMarker.on('moveend', this._onMiddleMarkerMoveEnd, this);\r\n    if (!this._vertexValidation('add', e)) {\r\n      middleMarker.on('move', this._onMiddleMarkerMovePrevent, this);\r\n      return;\r\n    }\r\n\r\n    middleMarker._dragging = true;\r\n    // TODO: This is a workaround. Remove the moveend listener and\r\n    // callback as soon as this is fixed:\r\n    // https://github.com/Leaflet/Leaflet/issues/4484\r\n    this._addMarker(middleMarker, middleMarker.leftM, middleMarker.rightM);\r\n  },\r\n  _onMiddleMarkerMovePrevent(e) {\r\n    const middleMarker = e.target;\r\n    this._vertexValidationDrag(middleMarker);\r\n  },\r\n  _onMiddleMarkerMoveEnd(e) {\r\n    const middleMarker = e.target;\r\n    middleMarker.off('move', this._onMiddleMarkerMovePrevent, this);\r\n    middleMarker.off('moveend', this._onMiddleMarkerMoveEnd, this);\r\n    if (!this._vertexValidationDragEnd(middleMarker)) {\r\n      return;\r\n    }\r\n    const icon = L.divIcon({ className: 'marker-icon' });\r\n    middleMarker.setIcon(icon);\r\n    // timeout is needed else this._onVertexClick fires the event because it is called after deleting the flag\r\n    setTimeout(() => {\r\n      delete middleMarker._dragging;\r\n    }, 100);\r\n  },\r\n  // adds a new marker from a middlemarker\r\n  _addMarker(newM, leftM, rightM) {\r\n    // first, make this middlemarker a regular marker\r\n    newM.off('movestart', this._onMiddleMarkerMoveStart, this);\r\n    newM.off(this.options.addVertexOn, this._onMiddleMarkerClick, this);\r\n    // now, create the polygon coordinate point for that marker\r\n    // and push into marker array\r\n    // and associate polygon coordinate with marker coordinate\r\n    const latlng = newM.getLatLng();\r\n    const coords = this._layer._latlngs;\r\n\r\n    // remove linked markers\r\n    delete newM.leftM;\r\n    delete newM.rightM;\r\n\r\n    // the index path to the marker inside the multidimensional marker array\r\n    const { indexPath, index, parentPath } = L.PM.Utils.findDeepMarkerIndex(\r\n      this._markers,\r\n      leftM\r\n    );\r\n\r\n    // define the coordsRing that is edited\r\n    const coordsRing = indexPath.length > 1 ? (get || window.getLodash)(coords, parentPath) : coords;\r\n\r\n    // define the markers array that is edited\r\n    const markerArr =\r\n      indexPath.length > 1 ? (get || window.getLodash)(this._markers, parentPath) : this._markers;\r\n\r\n    // add coordinate to coordinate array\r\n    coordsRing.splice(index + 1, 0, latlng);\r\n\r\n    // add marker to marker array\r\n    markerArr.splice(index + 1, 0, newM);\r\n\r\n    // set new latlngs to update polygon\r\n    this._layer.setLatLngs(coords);\r\n\r\n    // create the new middlemarkers\r\n    if (this.options.hideMiddleMarkers !== true) {\r\n      this._createMiddleMarker(leftM, newM);\r\n      this._createMiddleMarker(newM, rightM);\r\n    }\r\n\r\n    // fire edit event\r\n    this._fireEdit();\r\n    this._layerEdited = true;\r\n    this._fireChange(this._layer.getLatLngs(), 'Edit');\r\n\r\n    this._fireVertexAdded(\r\n      newM,\r\n      L.PM.Utils.findDeepMarkerIndex(this._markers, newM).indexPath,\r\n      latlng\r\n    );\r\n\r\n    if (this.options.snappable) {\r\n      this._initSnappableMarkers();\r\n    }\r\n  },\r\n\r\n  hasSelfIntersection() {\r\n    // check for self intersection of the layer and return true/false\r\n    const selfIntersection = (kinks || window.kinks)(this._layer.toGeoJSON(15));\r\n    return selfIntersection.features.length > 0;\r\n  },\r\n\r\n  _handleSelfIntersectionOnVertexRemoval() {\r\n    // check for selfintersection again (mainly to reset the style)\r\n    const selfIntersection = this._handleLayerStyle(true);\r\n\r\n    if (selfIntersection) {\r\n      // reset coordinates\r\n      this._layer.setLatLngs(this._coordsBeforeEdit);\r\n      this._coordsBeforeEdit = null;\r\n\r\n      // re-enable markers for the new coords\r\n      this._initMarkers();\r\n    }\r\n  },\r\n\r\n  _handleLayerStyle(flash) {\r\n    const layer = this._layer;\r\n\r\n    let selfIntersection;\r\n    let intersection;\r\n    if (this.options.allowSelfIntersection) {\r\n      selfIntersection = false;\r\n    } else {\r\n      intersection = kinks(this._layer.toGeoJSON(15));\r\n      selfIntersection = intersection.features.length > 0;\r\n    }\r\n\r\n    if (selfIntersection) {\r\n      if (\r\n        !this.options.allowSelfIntersection &&\r\n        this.options.allowSelfIntersectionEdit\r\n      ) {\r\n        this._updateDisabledMarkerStyle(this._markers, true);\r\n      }\r\n\r\n      if (this.isRed) {\r\n        return selfIntersection;\r\n      }\r\n\r\n      // if it does self-intersect, mark or flash it red\r\n      if (flash) {\r\n        this._flashLayer();\r\n      } else {\r\n        layer.setStyle({ color: '#f00000ff' });\r\n        this.isRed = true;\r\n      }\r\n\r\n      // fire intersect event\r\n      this._fireIntersect(intersection);\r\n    } else {\r\n      // if not, reset the style to the default color\r\n      layer.setStyle({ color: this.cachedColor });\r\n      this.isRed = false;\r\n      if (\r\n        !this.options.allowSelfIntersection &&\r\n        this.options.allowSelfIntersectionEdit\r\n      ) {\r\n        this._updateDisabledMarkerStyle(this._markers, false);\r\n      }\r\n    }\r\n    return selfIntersection;\r\n  },\r\n  _flashLayer() {\r\n    if (!this.cachedColor) {\r\n      this.cachedColor = this._layer.options.color;\r\n    }\r\n\r\n    this._layer.setStyle({ color: '#f00000ff' });\r\n    this.isRed = true;\r\n\r\n    window.setTimeout(() => {\r\n      this._layer.setStyle({ color: this.cachedColor });\r\n      this.isRed = false;\r\n    }, 200);\r\n  },\r\n  _updateDisabledMarkerStyle(markers, disabled) {\r\n    markers.forEach((marker) => {\r\n      if (Array.isArray(marker)) {\r\n        this._updateDisabledMarkerStyle(marker, disabled);\r\n      } else if (marker._icon) {\r\n        if (disabled && !this._checkMarkerAllowedToDrag(marker)) {\r\n          L.DomUtil.addClass(marker._icon, 'vertexmarker-disabled');\r\n        } else {\r\n          L.DomUtil.removeClass(marker._icon, 'vertexmarker-disabled');\r\n        }\r\n      }\r\n    });\r\n  },\r\n  _removeMarker(e) {\r\n    // the marker that should be removed\r\n    const marker = e.target;\r\n\r\n    if (!this._vertexValidation('remove', e)) {\r\n      return;\r\n    }\r\n\r\n    // if self intersection isn't allowed, save the coords upon dragstart\r\n    // in case we need to reset the layer\r\n    if (!this.options.allowSelfIntersection) {\r\n      this._coordsBeforeEdit = copyLatLngs(\r\n        this._layer,\r\n        this._layer.getLatLngs()\r\n      );\r\n    }\r\n\r\n    // coords of the layer\r\n    let coords = this._layer.getLatLngs();\r\n\r\n    // the index path to the marker inside the multidimensional marker array\r\n    const { indexPath, index, parentPath } = L.PM.Utils.findDeepMarkerIndex(\r\n      this._markers,\r\n      marker\r\n    );\r\n\r\n    // only continue if this is NOT a middle marker (those can't be deleted)\r\n    if (!indexPath) {\r\n      return;\r\n    }\r\n\r\n    // define the coordsRing that is edited\r\n    const coordsRing = indexPath.length > 1 ? (get || window.getLodash)(coords, parentPath) : coords;\r\n\r\n    // define the markers array that is edited\r\n    let markerArr =\r\n      indexPath.length > 1 ? (get || window.getLodash)(this._markers, parentPath) : this._markers;\r\n\r\n    // prevent removal of the layer if the vertex count is below minimum\r\n    if (!this.options.removeLayerBelowMinVertexCount) {\r\n      // if on a line only 2 vertices left or on a polygon 3 vertices left, don't allow to delete\r\n      if (\r\n        coordsRing.length <= 2 ||\r\n        (this.isPolygon() && coordsRing.length <= 3)\r\n      ) {\r\n        this._flashLayer();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // remove coordinate\r\n    coordsRing.splice(index, 1);\r\n\r\n    // set new latlngs to the polygon\r\n    this._layer.setLatLngs(coords);\r\n\r\n    // if a polygon has less than 3 vertices, remove all of them. We will remove only one here, the if-clause after that will handle the rest\r\n    if (this.isPolygon() && coordsRing.length <= 2) {\r\n      coordsRing.splice(0, coordsRing.length);\r\n    }\r\n\r\n    let layerRemoved = false;\r\n    // if the ring of the line has no coordinates left, remove the last coord too\r\n    if (coordsRing.length <= 1) {\r\n      coordsRing.splice(0, coordsRing.length);\r\n\r\n      // Clean up MultiPolygon\r\n      if (parentPath.length > 1 && indexPath.length > 1) {\r\n        coords = removeEmptyCoordRings(coords);\r\n      }\r\n\r\n      // set new coords\r\n      this._layer.setLatLngs(coords);\r\n\r\n      // re-enable editing so unnecessary markers are removed\r\n      this._initMarkers();\r\n      layerRemoved = true;\r\n    }\r\n\r\n    // if no coords are left, remove the layer\r\n    if (!hasValues(coords)) {\r\n      this._layer.remove();\r\n    }\r\n\r\n    // remove all empty coord-rings\r\n    coords = removeEmptyCoordRings(coords);\r\n    this._layer.setLatLngs(coords);\r\n    // remove empty marker arrays\r\n    this._markers = removeEmptyCoordRings(this._markers);\r\n\r\n    // No need to calculate the middle marker when the layer was removed\r\n    if (!layerRemoved) {\r\n      // get new markerArr because we cleaned up coords and markers array\r\n      markerArr =\r\n        indexPath.length > 1 ? (get || window.getLodash)(this._markers, parentPath) : this._markers;\r\n\r\n      // now handle the middle markers\r\n      // remove the marker and the middlemarkers next to it from the map\r\n      if (marker._middleMarkerPrev) {\r\n        this._markerGroup.removeLayer(marker._middleMarkerPrev);\r\n        this._removeFromCache(marker._middleMarkerPrev);\r\n      }\r\n      if (marker._middleMarkerNext) {\r\n        this._markerGroup.removeLayer(marker._middleMarkerNext);\r\n        this._removeFromCache(marker._middleMarkerNext);\r\n      }\r\n\r\n      // remove the marker from the map\r\n      this._markerGroup.removeLayer(marker);\r\n      this._removeFromCache(marker);\r\n\r\n      if (markerArr) {\r\n        let rightMarkerIndex;\r\n        let leftMarkerIndex;\r\n\r\n        if (this.isPolygon()) {\r\n          // find neighbor marker-indexes\r\n          rightMarkerIndex = (index + 1) % markerArr.length;\r\n          leftMarkerIndex = (index + (markerArr.length - 1)) % markerArr.length;\r\n        } else {\r\n          // find neighbor marker-indexes\r\n          leftMarkerIndex = index - 1 < 0 ? undefined : index - 1;\r\n          rightMarkerIndex =\r\n            index + 1 >= markerArr.length ? undefined : index + 1;\r\n        }\r\n\r\n        // don't create middlemarkers if there is only one marker left\r\n        if (rightMarkerIndex !== leftMarkerIndex) {\r\n          const leftM = markerArr[leftMarkerIndex];\r\n          const rightM = markerArr[rightMarkerIndex];\r\n          if (this.options.hideMiddleMarkers !== true) {\r\n            this._createMiddleMarker(leftM, rightM);\r\n          }\r\n        }\r\n\r\n        // remove the marker from the markers array\r\n        markerArr.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    // fire edit event\r\n    this._fireEdit();\r\n    this._layerEdited = true;\r\n\r\n    // fire vertex removal event\r\n    // TODO: maybe fire latlng as well?\r\n    this._fireVertexRemoved(marker, indexPath);\r\n    this._fireChange(this._layer.getLatLngs(), 'Edit');\r\n  },\r\n  updatePolygonCoordsFromMarkerDrag(marker) {\r\n    // update polygon coords\r\n    const coords = this._layer.getLatLngs();\r\n\r\n    // get marker latlng\r\n    const latlng = marker.getLatLng();\r\n\r\n    // get indexPath of Marker\r\n    const { indexPath, index, parentPath } = L.PM.Utils.findDeepMarkerIndex(\r\n      this._markers,\r\n      marker\r\n    );\r\n\r\n    // update coord\r\n    const parent = indexPath.length > 1 ? (get || window.getLodash)(coords, parentPath) : coords;\r\n    parent.splice(index, 1, latlng);\r\n\r\n    // set new coords on layer\r\n    this._layer.setLatLngs(coords);\r\n  },\r\n\r\n  _getNeighborMarkers(marker) {\r\n    const { indexPath, index, parentPath } = L.PM.Utils.findDeepMarkerIndex(\r\n      this._markers,\r\n      marker\r\n    );\r\n\r\n    // the markers neighbors\r\n    const markerArr =\r\n      indexPath.length > 1 ? (get || window.getLodash)(this._markers, parentPath) : this._markers;\r\n\r\n    // find the indizes of next and previous markers\r\n    const nextMarkerIndex = (index + 1) % markerArr.length;\r\n    const prevMarkerIndex = (index + (markerArr.length - 1)) % markerArr.length;\r\n\r\n    // get prev and next marker\r\n    const prevMarker = markerArr[prevMarkerIndex];\r\n    const nextMarker = markerArr[nextMarkerIndex];\r\n\r\n    return { prevMarker, nextMarker };\r\n  },\r\n  _checkMarkerAllowedToDrag(marker) {\r\n    const { prevMarker, nextMarker } = this._getNeighborMarkers(marker);\r\n\r\n    const prevLine = L.polyline([prevMarker.getLatLng(), marker.getLatLng()]);\r\n    const nextLine = L.polyline([marker.getLatLng(), nextMarker.getLatLng()]);\r\n\r\n    let prevLineIntersectionLen = (lineIntersect || window.lineIntersect)(\r\n      this._layer.toGeoJSON(15),\r\n      prevLine.toGeoJSON(15)\r\n    ).features.length;\r\n    let nextLineIntersectionLen = (lineIntersect || window.lineIntersect)(\r\n      this._layer.toGeoJSON(15),\r\n      nextLine.toGeoJSON(15)\r\n    ).features.length;\r\n\r\n    // The first and last line has one intersection fewer because they are not connected\r\n    if (marker.getLatLng() === this._markers[0][0].getLatLng()) {\r\n      nextLineIntersectionLen += 1;\r\n    } else if (\r\n      marker.getLatLng() ===\r\n      this._markers[0][this._markers[0].length - 1].getLatLng()\r\n    ) {\r\n      prevLineIntersectionLen += 1;\r\n    }\r\n\r\n    // <= 2 the start and end point of the line always intersecting because they have the same coords.\r\n    if (prevLineIntersectionLen <= 2 && nextLineIntersectionLen <= 2) {\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n  _onMarkerDragStart(e) {\r\n    const marker = e.target;\r\n\r\n    // When intersection is true while calling enable(), the cachedColor is already set\r\n    if (!this.cachedColor) {\r\n      this.cachedColor = this._layer.options.color;\r\n    }\r\n\r\n    if (!this._vertexValidation('move', e)) {\r\n      return;\r\n    }\r\n\r\n    const { indexPath } = L.PM.Utils.findDeepMarkerIndex(this._markers, marker);\r\n\r\n    this._fireMarkerDragStart(e, indexPath);\r\n\r\n    // if self intersection isn't allowed, save the coords upon dragstart\r\n    // in case we need to reset the layer\r\n    if (!this.options.allowSelfIntersection) {\r\n      this._coordsBeforeEdit = copyLatLngs(\r\n        this._layer,\r\n        this._layer.getLatLngs()\r\n      );\r\n    }\r\n\r\n    if (\r\n      !this.options.allowSelfIntersection &&\r\n      this.options.allowSelfIntersectionEdit &&\r\n      this.hasSelfIntersection()\r\n    ) {\r\n      this._markerAllowedToDrag = this._checkMarkerAllowedToDrag(marker);\r\n    } else {\r\n      this._markerAllowedToDrag = null;\r\n    }\r\n  },\r\n  _onMarkerDrag(e) {\r\n    // dragged marker\r\n    const marker = e.target;\r\n\r\n    if (!this._vertexValidationDrag(marker)) {\r\n      return;\r\n    }\r\n\r\n    const { indexPath, index, parentPath } = L.PM.Utils.findDeepMarkerIndex(\r\n      this._markers,\r\n      marker\r\n    );\r\n\r\n    // only continue if this is NOT a middle marker\r\n    if (!indexPath) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !this.options.allowSelfIntersection &&\r\n      this.options.allowSelfIntersectionEdit &&\r\n      this.hasSelfIntersection() &&\r\n      this._markerAllowedToDrag === false\r\n    ) {\r\n      this._layer.setLatLngs(this._coordsBeforeEdit);\r\n      // re-enable markers for the new coords\r\n      this._initMarkers();\r\n      // check for selfintersection again (mainly to reset the style)\r\n      this._handleLayerStyle();\r\n      return;\r\n    }\r\n\r\n    this.updatePolygonCoordsFromMarkerDrag(marker);\r\n\r\n    // the dragged markers neighbors\r\n    const markerArr =\r\n      indexPath.length > 1 ? (get || window.getLodash)(this._markers, parentPath) : this._markers;\r\n\r\n    // find the indizes of next and previous markers\r\n    const nextMarkerIndex = (index + 1) % markerArr.length;\r\n    const prevMarkerIndex = (index + (markerArr.length - 1)) % markerArr.length;\r\n\r\n    // update middle markers on the left and right\r\n    // be aware that \"next\" and \"prev\" might be interchanged, depending on the geojson array\r\n    const markerLatLng = marker.getLatLng();\r\n\r\n    // get latlng of prev and next marker\r\n    const prevMarkerLatLng = markerArr[prevMarkerIndex].getLatLng();\r\n    const nextMarkerLatLng = markerArr[nextMarkerIndex].getLatLng();\r\n\r\n    if (marker._middleMarkerNext) {\r\n      const middleMarkerNextLatLng = L.PM.Utils.calcMiddleLatLng(\r\n        this._map,\r\n        markerLatLng,\r\n        nextMarkerLatLng\r\n      );\r\n      marker._middleMarkerNext.setLatLng(middleMarkerNextLatLng);\r\n    }\r\n\r\n    if (marker._middleMarkerPrev) {\r\n      const middleMarkerPrevLatLng = L.PM.Utils.calcMiddleLatLng(\r\n        this._map,\r\n        markerLatLng,\r\n        prevMarkerLatLng\r\n      );\r\n      marker._middleMarkerPrev.setLatLng(middleMarkerPrevLatLng);\r\n    }\r\n\r\n    // if self intersection is not allowed, handle it\r\n    if (!this.options.allowSelfIntersection) {\r\n      this._handleLayerStyle();\r\n    }\r\n    this._fireMarkerDrag(e, indexPath);\r\n    this._fireChange(this._layer.getLatLngs(), 'Edit');\r\n  },\r\n  _onMarkerDragEnd(e) {\r\n    const marker = e.target;\r\n\r\n    if (!this._vertexValidationDragEnd(marker)) {\r\n      return;\r\n    }\r\n\r\n    const { indexPath } = L.PM.Utils.findDeepMarkerIndex(this._markers, marker);\r\n\r\n    // if self intersection is not allowed but this edit caused a self intersection,\r\n    // reset and cancel; do not fire events\r\n    let intersection = this.hasSelfIntersection();\r\n    if (\r\n      intersection &&\r\n      this.options.allowSelfIntersectionEdit &&\r\n      this._markerAllowedToDrag\r\n    ) {\r\n      intersection = false;\r\n    }\r\n\r\n    const intersectionReset =\r\n      !this.options.allowSelfIntersection && intersection;\r\n\r\n    this._fireMarkerDragEnd(e, indexPath, intersectionReset);\r\n\r\n    if (intersectionReset) {\r\n      // reset coordinates\r\n      this._layer.setLatLngs(this._coordsBeforeEdit);\r\n      this._coordsBeforeEdit = null;\r\n\r\n      // re-enable markers for the new coords\r\n      this._initMarkers();\r\n\r\n      if (this.options.snappable) {\r\n        this._initSnappableMarkers();\r\n      }\r\n\r\n      // check for selfintersection again (mainly to reset the style)\r\n      this._handleLayerStyle();\r\n\r\n      this._fireLayerReset(e, indexPath);\r\n      return;\r\n    }\r\n    if (\r\n      !this.options.allowSelfIntersection &&\r\n      this.options.allowSelfIntersectionEdit\r\n    ) {\r\n      this._handleLayerStyle();\r\n    }\r\n    // fire edit event\r\n    this._fireEdit();\r\n    this._layerEdited = true;\r\n    this._fireChange(this._layer.getLatLngs(), 'Edit');\r\n  },\r\n  _onVertexClick(e) {\r\n    const vertex = e.target;\r\n    if (vertex._dragging) {\r\n      return;\r\n    }\r\n\r\n    const { indexPath } = L.PM.Utils.findDeepMarkerIndex(this._markers, vertex);\r\n\r\n    this._fireVertexClick(e, indexPath);\r\n  },\r\n});\r\n", "import Edit from './L.PM.Edit';\r\n\r\n// eslint-disable-next-line prefer-destructuring\r\nconst lineIntersect = window.lineIntersect;\r\nEdit.Polygon = Edit.Line.extend({\r\n  _shape: 'Polygon',\r\n  _checkMarkerAllowedToDrag(marker) {\r\n    const { prevMarker, nextMarker } = this._getNeighborMarkers(marker);\r\n\r\n    const prevLine = L.polyline([prevMarker.getLatLng(), marker.getLatLng()]);\r\n    const nextLine = L.polyline([marker.getLatLng(), nextMarker.getLatLng()]);\r\n\r\n    const prevLineIntersectionLen = (lineIntersect || window.lineIntersect)(\r\n      this._layer.toGeoJSON(15),\r\n      prevLine.toGeoJSON(15)\r\n    ).features.length;\r\n    const nextLineIntersectionLen = (lineIntersect || window.lineIntersect)(\r\n      this._layer.toGeoJSON(15),\r\n      nextLine.toGeoJSON(15)\r\n    ).features.length;\r\n\r\n    // <= 2 the start and end point of the line always intersecting because they have the same coords.\r\n    if (prevLineIntersectionLen <= 2 && nextLineIntersectionLen <= 2) {\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n});\r\n", "// Corner detection based on Leaflet Draw's Edit.Rectangle.js Class:\r\n// https://github.com/Leaflet/Leaflet.draw/blob/master/src/edit/handler/Edit.Rectangle.js\r\nimport Edit from './L.PM.Edit';\r\nimport { calcAngle } from '../helpers';\r\n\r\nEdit.Rectangle = Edit.Polygon.extend({\r\n  _shape: 'Rectangle',\r\n  // initializes Rectangle Markers\r\n  _initMarkers() {\r\n    const map = this._map;\r\n    const corners = this._findCorners();\r\n\r\n    // cleanup old ones first\r\n    if (this._markerGroup) {\r\n      this._markerGroup.clearLayers();\r\n    }\r\n\r\n    // add markerGroup to map, markerGroup includes regular and middle markers\r\n    this._markerGroup = new L.FeatureGroup();\r\n    this._markerGroup._pmTempLayer = true;\r\n    map.addLayer(this._markerGroup);\r\n\r\n    // create markers for four corners of rectangle\r\n    this._markers = [];\r\n\r\n    // nest set of corner markers in a 2D array so that we can Cut this Rectangle, if needed\r\n    this._markers[0] = corners.map(this._createMarker, this);\r\n\r\n    // convenience alias, for better readability\r\n    [this._cornerMarkers] = this._markers;\r\n\r\n    // Update the marker latlngs if the rectangle is rotated\r\n    this._layer.getLatLngs()[0].forEach((latlng, index) => {\r\n      const marker = this._cornerMarkers.find((m) => m._index === index);\r\n      if (marker) {\r\n        marker.setLatLng(latlng);\r\n      }\r\n    });\r\n  },\r\n  applyOptions() {\r\n    if (this.options.snappable) {\r\n      this._initSnappableMarkers();\r\n    } else {\r\n      this._disableSnapping();\r\n    }\r\n    this._addMarkerEvents();\r\n  },\r\n\r\n  // creates initial markers for coordinates\r\n  _createMarker(latlng, index) {\r\n    const marker = new L.Marker(latlng, {\r\n      draggable: true,\r\n      icon: L.divIcon({ className: 'marker-icon' }),\r\n    });\r\n    this._setPane(marker, 'vertexPane');\r\n\r\n    marker._origLatLng = latlng;\r\n    marker._index = index;\r\n    marker._pmTempLayer = true;\r\n\r\n    marker.on('click', this._onVertexClick, this);\r\n\r\n    this._markerGroup.addLayer(marker);\r\n\r\n    return marker;\r\n  },\r\n  // Add marker events after adding the snapping events to the markers, beacause of the execution order\r\n  _addMarkerEvents() {\r\n    this._markers[0].forEach((marker) => {\r\n      marker.on('dragstart', this._onMarkerDragStart, this);\r\n      marker.on('drag', this._onMarkerDrag, this);\r\n      marker.on('dragend', this._onMarkerDragEnd, this);\r\n\r\n      // TODO: Can we remove this? The _removeMarker Event is a empty function\r\n      if (!this.options.preventMarkerRemoval) {\r\n        marker.on('contextmenu', this._removeMarker, this);\r\n      }\r\n    });\r\n  },\r\n  // Empty callback for 'contextmenu' binding set in L.PM.Edit.Line.js's _createMarker method (AKA, right-click on marker event)\r\n  // (A Rectangle is designed to always remain a \"true\" rectangle -- if you want it editable, use Polygon Tool instead!!!)\r\n  _removeMarker() {\r\n    // The method, it does nothing!!!\r\n    return null;\r\n  },\r\n\r\n  _onMarkerDragStart(e) {\r\n    if (!this._vertexValidation('move', e)) {\r\n      return;\r\n    }\r\n\r\n    // dragged marker\r\n    const draggedMarker = e.target;\r\n    // Store/update a reference to marker in opposite corner\r\n    const corners = this._cornerMarkers;\r\n    draggedMarker._oppositeCornerLatLng = corners\r\n      .find((m) => m._index === (draggedMarker._index + 2) % 4)\r\n      .getLatLng();\r\n\r\n    // Automatically unsnap all markers on drag start (they'll snap back if close enough to another snappable object)\r\n    // (Without this, it's occasionally possible for a marker to get stuck as 'snapped,' which prevents Rectangle resizing)\r\n    draggedMarker._snapped = false;\r\n\r\n    const { indexPath } = L.PM.Utils.findDeepMarkerIndex(\r\n      this._markers,\r\n      draggedMarker\r\n    );\r\n\r\n    this._fireMarkerDragStart(e, indexPath);\r\n  },\r\n\r\n  _onMarkerDrag(e) {\r\n    // dragged marker\r\n    const draggedMarker = e.target;\r\n\r\n    if (!this._vertexValidationDrag(draggedMarker)) {\r\n      return;\r\n    }\r\n\r\n    // only continue if this is NOT a middle marker (should NEVER be one, but this is just a safety check)\r\n    if (draggedMarker._index === undefined) {\r\n      return;\r\n    }\r\n\r\n    this._adjustRectangleForMarkerMove(draggedMarker);\r\n\r\n    const { indexPath } = L.PM.Utils.findDeepMarkerIndex(\r\n      this._markers,\r\n      draggedMarker\r\n    );\r\n    this._fireMarkerDrag(e, indexPath);\r\n    this._fireChange(this._layer.getLatLngs(), 'Edit');\r\n  },\r\n\r\n  _onMarkerDragEnd(e) {\r\n    // dragged marker\r\n    const draggedMarker = e.target;\r\n    if (!this._vertexValidationDragEnd(draggedMarker)) {\r\n      return;\r\n    }\r\n\r\n    // Clean-up data attributes\r\n    this._cornerMarkers.forEach((m) => {\r\n      delete m._oppositeCornerLatLng;\r\n    });\r\n\r\n    const { indexPath } = L.PM.Utils.findDeepMarkerIndex(\r\n      this._markers,\r\n      draggedMarker\r\n    );\r\n    this._fireMarkerDragEnd(e, indexPath);\r\n\r\n    // fire edit event\r\n    this._fireEdit();\r\n    this._layerEdited = true;\r\n    this._fireChange(this._layer.getLatLngs(), 'Edit');\r\n  },\r\n\r\n  // adjusts the rectangle's size and bounds whenever a marker is moved\r\n  // params: movedMarker -- the Marker object\r\n  _adjustRectangleForMarkerMove(movedMarker) {\r\n    // update moved marker coordinates\r\n    L.extend(movedMarker._origLatLng, movedMarker._latlng);\r\n\r\n    // update rectangle boundaries, based on moved marker's new LatLng and cached opposite corner's LatLng\r\n    const corners = L.PM.Utils._getRotatedRectangle(\r\n      movedMarker.getLatLng(),\r\n      movedMarker._oppositeCornerLatLng,\r\n      this.getAngle(),\r\n      this._map\r\n    );\r\n    this._layer.setLatLngs(corners);\r\n\r\n    // Reposition the markers at each corner\r\n    this._adjustAllMarkers();\r\n\r\n    // Redraw the shape (to update altered rectangle)\r\n    this._layer.redraw();\r\n  },\r\n\r\n  // adjusts the position of all Markers\r\n  // params: markerLatLngs -- an array of exactly LatLng objects\r\n  _adjustAllMarkers() {\r\n    const markerLatLngs = this._layer.getLatLngs()[0];\r\n\r\n    if (\r\n      markerLatLngs &&\r\n      markerLatLngs.length !== 4 &&\r\n      markerLatLngs.length > 0\r\n    ) {\r\n      // The layers is currently to small and has not enough latlngs.\r\n      // Leaflet destroys the valid Rectangle by removing the last latlng if the last and first latlng are equal. See: Leaflet#7464 V1.7.1\r\n\r\n      // update all possible markers\r\n      markerLatLngs.forEach((latlng, index) => {\r\n        this._cornerMarkers[index].setLatLng(latlng);\r\n      });\r\n\r\n      // apply to all markers with no latlng on the layer, the first latlng\r\n      const restMarkers = this._cornerMarkers.slice(markerLatLngs.length);\r\n      restMarkers.forEach((marker) => {\r\n        marker.setLatLng(markerLatLngs[0]);\r\n      });\r\n    } else if (!markerLatLngs || !markerLatLngs.length) {\r\n      // eslint-disable-next-line\r\n      console.error('The layer has no LatLngs');\r\n    } else {\r\n      this._cornerMarkers.forEach((marker) => {\r\n        marker.setLatLng(markerLatLngs[marker._index]);\r\n      });\r\n    }\r\n  },\r\n  // finds the 4 corners of the current bounding box\r\n  // returns array of 4 LatLng objects in this order: Northwest corner, Northeast corner, Southeast corner, Southwest corner\r\n  _findCorners() {\r\n    if (this._angle === undefined) {\r\n      this.setInitAngle(\r\n        calcAngle(\r\n          this._map,\r\n          this._layer.getLatLngs()[0][0],\r\n          this._layer.getLatLngs()[0][1]\r\n        ) || 0\r\n      );\r\n    }\r\n\r\n    const latlngs = this._layer.getLatLngs()[0];\r\n    return L.PM.Utils._getRotatedRectangle(\r\n      latlngs[0],\r\n      latlngs[2],\r\n      this.getAngle(),\r\n      this._map || this\r\n    );\r\n  },\r\n});\r\n", "import Edit from './L.PM.Edit';\r\nimport { destinationOnLine } from '../helpers';\r\n\r\nEdit.CircleMarker = Edit.extend({\r\n  _shape: 'CircleMarker',\r\n  initialize(layer) {\r\n    this._layer = layer;\r\n    this._enabled = false;\r\n\r\n    this._minRadiusOption = 'minRadiusCircleMarker';\r\n    this._maxRadiusOption = 'maxRadiusCircleMarker';\r\n    this._editableOption = 'resizeableCircleMarker';\r\n\r\n    // create polygon around the circle border\r\n    this._updateHiddenPolyCircle();\r\n  },\r\n  // TODO: remove default option in next major Release\r\n  enable(options = { draggable: true, snappable: true }) {\r\n    L.Util.setOptions(this, options);\r\n    // TODO: remove with next major release\r\n    if (this.options.editable) {\r\n      this.options.resizeableCircleMarker = this.options.editable;\r\n      delete this.options.editable;\r\n    }\r\n\r\n    // layer is not allowed to edit\r\n    // cancel when map isn't available, this happens when it is removed before this fires\r\n    if (!this.options.allowEditing || !this._layer._map) {\r\n      this.disable();\r\n      return;\r\n    }\r\n\r\n    this._map = this._layer._map;\r\n\r\n    if (this.enabled()) {\r\n      // if it was already enabled, disable first\r\n      // we don't block enabling again because new options might be passed\r\n      this.disable();\r\n    }\r\n    this.applyOptions();\r\n\r\n    // if shape gets removed from map, disable edit mode\r\n    this._layer.on('remove', this.disable, this);\r\n\r\n    // change state\r\n    this._enabled = true;\r\n\r\n    this._extendingEnable();\r\n\r\n    // create polygon around the circle border\r\n    this._updateHiddenPolyCircle();\r\n\r\n    this._fireEnable();\r\n  },\r\n  _extendingEnable() {\r\n    // if CircleMarker is dragged while draw mode\r\n    this._layer.on('pm:dragstart', this._onDragStart, this);\r\n    this._layer.on('pm:drag', this._onMarkerDrag, this);\r\n    this._layer.on('pm:dragend', this._onMarkerDragEnd, this);\r\n  },\r\n  disable() {\r\n    // prevent disabling if layer is being dragged\r\n    if (this.dragging()) {\r\n      return;\r\n    }\r\n\r\n    // Add map if it is not already set. This happens when disable() is called before enable()\r\n    if (!this._map) {\r\n      this._map = this._layer._map;\r\n    }\r\n\r\n    if (!this._map) {\r\n      return;\r\n    }\r\n\r\n    // if it's not enabled, it doesn't need to be disabled\r\n    if (!this.enabled()) {\r\n      return;\r\n    }\r\n\r\n    // disable dragging of non-editable circle\r\n    if (this.layerDragEnabled()) {\r\n      this.disableLayerDrag();\r\n    }\r\n\r\n    if (this.options[this._editableOption]) {\r\n      if (this._helperLayers) {\r\n        this._helperLayers.clearLayers();\r\n      }\r\n      this._map.off('move', this._syncMarkers, this);\r\n      this._outerMarker.off('drag', this._handleOuterMarkerSnapping, this);\r\n    } else {\r\n      this._map.off('move', this._updateHiddenPolyCircle, this);\r\n    }\r\n\r\n    this._extendingDisable();\r\n\r\n    this._layer.off('remove', this.disable, this);\r\n\r\n    if (this._layerEdited) {\r\n      this._fireUpdate();\r\n    }\r\n    this._layerEdited = false;\r\n    this._fireDisable();\r\n\r\n    this._enabled = false;\r\n  },\r\n  _extendingDisable() {\r\n    this._layer.off('contextmenu', this._removeMarker, this);\r\n  },\r\n  enabled() {\r\n    return this._enabled;\r\n  },\r\n  toggleEdit(options) {\r\n    if (!this.enabled()) {\r\n      this.enable(options);\r\n    } else {\r\n      this.disable();\r\n    }\r\n  },\r\n  applyOptions() {\r\n    if (this.options[this._editableOption]) {\r\n      this._initMarkers();\r\n      this._map.on('move', this._syncMarkers, this);\r\n\r\n      // init snapping in different ways\r\n      if (this.options.snappable) {\r\n        this._initSnappableMarkers();\r\n        // update marker latlng when snapped latlng radius is out of min/max\r\n        this._outerMarker.on('drag', this._handleOuterMarkerSnapping, this);\r\n        // sync the hintline with hint marker\r\n        this._outerMarker.on('move', this._syncHintLine, this);\r\n        this._outerMarker.on('move', this._syncCircleRadius, this);\r\n        this._centerMarker.on('move', this._moveCircle, this);\r\n      } else {\r\n        this._disableSnapping();\r\n      }\r\n    } else {\r\n      if (this.options.draggable) {\r\n        this.enableLayerDrag();\r\n      }\r\n      // only update the circle border poly\r\n      this._map.on('move', this._updateHiddenPolyCircle, this);\r\n\r\n      if (this.options.snappable) {\r\n        this._initSnappableMarkersDrag();\r\n      } else {\r\n        this._disableSnappingDrag();\r\n      }\r\n    }\r\n\r\n    this._extendingApplyOptions();\r\n  },\r\n  _extendingApplyOptions() {\r\n    // enable removal for the marker\r\n    if (!this.options.preventMarkerRemoval) {\r\n      this._layer.on('contextmenu', this._removeMarker, this);\r\n    }\r\n  },\r\n  _initMarkers() {\r\n    const map = this._map;\r\n\r\n    // cleanup old ones first\r\n    if (this._helperLayers) {\r\n      this._helperLayers.clearLayers();\r\n    }\r\n\r\n    // add markerGroup to map, markerGroup includes regular and middle markers\r\n    this._helperLayers = new L.FeatureGroup();\r\n    this._helperLayers._pmTempLayer = true;\r\n    this._helperLayers.addTo(map);\r\n\r\n    // create marker for each coordinate\r\n    const center = this._layer.getLatLng();\r\n    const radius = this._layer._radius;\r\n\r\n    const outer = this._getLatLngOnCircle(center, radius);\r\n\r\n    this._centerMarker = this._createCenterMarker(center);\r\n    this._outerMarker = this._createOuterMarker(outer);\r\n    this._markers = [this._centerMarker, this._outerMarker];\r\n    this._createHintLine(this._centerMarker, this._outerMarker);\r\n  },\r\n  _getLatLngOnCircle(center, radius) {\r\n    const pointA = this._map.project(center);\r\n    const pointB = L.point(pointA.x + radius, pointA.y);\r\n    return this._map.unproject(pointB);\r\n  },\r\n  _createHintLine(markerA, markerB) {\r\n    const A = markerA.getLatLng();\r\n    const B = markerB.getLatLng();\r\n    this._hintline = L.polyline([A, B], this.options.hintlineStyle);\r\n    this._setPane(this._hintline, 'layerPane');\r\n    this._hintline._pmTempLayer = true;\r\n    this._helperLayers.addLayer(this._hintline);\r\n  },\r\n  _createCenterMarker(latlng) {\r\n    const marker = this._createMarker(latlng);\r\n    if (this.options.draggable) {\r\n      L.DomUtil.addClass(marker._icon, 'leaflet-pm-draggable');\r\n    } else {\r\n      marker.dragging.disable();\r\n    }\r\n    return marker;\r\n  },\r\n  _createOuterMarker(latlng) {\r\n    const marker = this._createMarker(latlng);\r\n    marker.on('drag', this._resizeCircle, this);\r\n    return marker;\r\n  },\r\n  _createMarker(latlng) {\r\n    const marker = new L.Marker(latlng, {\r\n      draggable: true,\r\n      icon: L.divIcon({ className: 'marker-icon' }),\r\n    });\r\n    this._setPane(marker, 'vertexPane');\r\n\r\n    marker._origLatLng = latlng;\r\n    marker._pmTempLayer = true;\r\n\r\n    marker.on('dragstart', this._onMarkerDragStart, this);\r\n    marker.on('drag', this._onMarkerDrag, this);\r\n    marker.on('dragend', this._onMarkerDragEnd, this);\r\n    marker.on('click', this._onVertexClick, this);\r\n\r\n    this._helperLayers.addLayer(marker);\r\n\r\n    return marker;\r\n  },\r\n\r\n  _moveCircle(e) {\r\n    const draggedMarker = e.target;\r\n    if (draggedMarker._cancelDragEventChain) {\r\n      return;\r\n    }\r\n\r\n    const center = this._centerMarker.getLatLng();\r\n    this._layer.setLatLng(center);\r\n\r\n    const radius = this._layer._radius;\r\n\r\n    const outer = this._getLatLngOnCircle(center, radius);\r\n    // don't call .setLatLng() because it fires the `move` event and then the radius is changed because of _syncCircleRadius #892\r\n    this._outerMarker._latlng = outer;\r\n    this._outerMarker.update();\r\n    this._syncHintLine();\r\n\r\n    this._updateHiddenPolyCircle();\r\n\r\n    this._fireCenterPlaced('Edit');\r\n    this._fireChange(this._layer.getLatLng(), 'Edit');\r\n  },\r\n  _syncMarkers() {\r\n    const center = this._layer.getLatLng();\r\n    const radius = this._layer._radius;\r\n    const outer = this._getLatLngOnCircle(center, radius);\r\n    this._outerMarker.setLatLng(outer);\r\n    this._centerMarker.setLatLng(center);\r\n    this._syncHintLine();\r\n    this._updateHiddenPolyCircle();\r\n  },\r\n  _resizeCircle() {\r\n    this._outerMarker.setLatLng(this._getNewDestinationOfOuterMarker());\r\n    this._syncHintLine();\r\n    this._syncCircleRadius();\r\n  },\r\n  _syncCircleRadius() {\r\n    const A = this._centerMarker.getLatLng();\r\n    const B = this._outerMarker.getLatLng();\r\n\r\n    const distance = this._distanceCalculation(A, B);\r\n\r\n    if (\r\n      this.options[this._minRadiusOption] &&\r\n      distance < this.options[this._minRadiusOption]\r\n    ) {\r\n      this._layer.setRadius(this.options[this._minRadiusOption]);\r\n    } else if (\r\n      this.options[this._maxRadiusOption] &&\r\n      distance > this.options[this._maxRadiusOption]\r\n    ) {\r\n      this._layer.setRadius(this.options[this._maxRadiusOption]);\r\n    } else {\r\n      this._layer.setRadius(distance);\r\n    }\r\n\r\n    this._updateHiddenPolyCircle();\r\n    this._fireChange(this._layer.getLatLng(), 'Edit');\r\n  },\r\n  _syncHintLine() {\r\n    const A = this._centerMarker.getLatLng();\r\n    const B = this._outerMarker.getLatLng();\r\n    // set coords for hintline from marker to last vertex of drawin polyline\r\n    this._hintline.setLatLngs([A, B]);\r\n  },\r\n  _removeMarker() {\r\n    if (this.options[this._editableOption]) {\r\n      this.disable();\r\n    }\r\n    this._layer.remove();\r\n    this._fireRemove(this._layer);\r\n    this._fireRemove(this._map, this._layer);\r\n  },\r\n  _onDragStart() {\r\n    this._map.pm.Draw.CircleMarker._layerIsDragging = true;\r\n  },\r\n  _onMarkerDragStart(e) {\r\n    if (!this._vertexValidation('move', e)) {\r\n      return;\r\n    }\r\n\r\n    this._fireMarkerDragStart(e);\r\n  },\r\n  _onMarkerDrag(e) {\r\n    // dragged marker\r\n    const draggedMarker = e.target;\r\n    if (\r\n      draggedMarker instanceof L.Marker &&\r\n      !this._vertexValidationDrag(draggedMarker)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this._fireMarkerDrag(e);\r\n  },\r\n  _onMarkerDragEnd(e) {\r\n    this._extedingMarkerDragEnd();\r\n\r\n    // dragged marker\r\n    const draggedMarker = e.target;\r\n    if (!this._vertexValidationDragEnd(draggedMarker)) {\r\n      return;\r\n    }\r\n    if (this.options[this._editableOption]) {\r\n      this._fireEdit();\r\n      this._layerEdited = true;\r\n    }\r\n    this._fireMarkerDragEnd(e);\r\n  },\r\n  _extedingMarkerDragEnd() {\r\n    this._map.pm.Draw.CircleMarker._layerIsDragging = false;\r\n  },\r\n  // _initSnappableMarkers when option editable is not true\r\n  _initSnappableMarkersDrag() {\r\n    const marker = this._layer;\r\n\r\n    this.options.snapDistance = this.options.snapDistance || 30;\r\n    this.options.snapSegment =\r\n      this.options.snapSegment === undefined ? true : this.options.snapSegment;\r\n\r\n    marker.off('pm:drag', this._handleSnapping, this);\r\n    marker.on('pm:drag', this._handleSnapping, this);\r\n\r\n    marker.off('pm:dragend', this._cleanupSnapping, this);\r\n    marker.on('pm:dragend', this._cleanupSnapping, this);\r\n\r\n    marker.off('pm:dragstart', this._unsnap, this);\r\n    marker.on('pm:dragstart', this._unsnap, this);\r\n  },\r\n  // _disableSnapping when option editable is not true\r\n  _disableSnappingDrag() {\r\n    const marker = this._layer;\r\n\r\n    marker.off('pm:drag', this._handleSnapping, this);\r\n    marker.off('pm:dragend', this._cleanupSnapping, this);\r\n    marker.off('pm:dragstart', this._unsnap, this);\r\n  },\r\n  _updateHiddenPolyCircle() {\r\n    const map = this._layer._map || this._map;\r\n    if (map) {\r\n      const radius = L.PM.Utils.pxRadiusToMeterRadius(\r\n        this._layer.getRadius(),\r\n        map,\r\n        this._layer.getLatLng()\r\n      );\r\n      const _layer = L.circle(this._layer.getLatLng(), this._layer.options);\r\n      _layer.setRadius(radius);\r\n\r\n      const crsSimple = map && map.pm._isCRSSimple();\r\n      if (this._hiddenPolyCircle) {\r\n        this._hiddenPolyCircle.setLatLngs(\r\n          L.PM.Utils.circleToPolygon(_layer, 200, !crsSimple).getLatLngs()\r\n        );\r\n      } else {\r\n        this._hiddenPolyCircle = L.PM.Utils.circleToPolygon(\r\n          _layer,\r\n          200,\r\n          !crsSimple\r\n        );\r\n      }\r\n\r\n      if (!this._hiddenPolyCircle._parentCopy) {\r\n        this._hiddenPolyCircle._parentCopy = this._layer;\r\n      }\r\n    }\r\n  },\r\n  _getNewDestinationOfOuterMarker() {\r\n    const latlng = this._centerMarker.getLatLng();\r\n    let secondLatLng = this._outerMarker.getLatLng();\r\n\r\n    const distance = this._distanceCalculation(latlng, secondLatLng);\r\n\r\n    if (\r\n      this.options[this._minRadiusOption] &&\r\n      distance < this.options[this._minRadiusOption]\r\n    ) {\r\n      secondLatLng = destinationOnLine(\r\n        this._map,\r\n        latlng,\r\n        secondLatLng,\r\n        this._getMinDistanceInMeter(latlng)\r\n      );\r\n    } else if (\r\n      this.options[this._maxRadiusOption] &&\r\n      distance > this.options[this._maxRadiusOption]\r\n    ) {\r\n      secondLatLng = destinationOnLine(\r\n        this._map,\r\n        latlng,\r\n        secondLatLng,\r\n        this._getMaxDistanceInMeter(latlng)\r\n      );\r\n    }\r\n    return secondLatLng;\r\n  },\r\n  _handleOuterMarkerSnapping() {\r\n    if (this._outerMarker._snapped) {\r\n      const latlng = this._centerMarker.getLatLng();\r\n      const secondLatLng = this._outerMarker.getLatLng();\r\n      const distance = this._distanceCalculation(latlng, secondLatLng);\r\n      if (\r\n        this.options[this._minRadiusOption] &&\r\n        distance < this.options[this._minRadiusOption]\r\n      ) {\r\n        this._outerMarker.setLatLng(this._outerMarker._orgLatLng);\r\n      } else if (\r\n        this.options[this._maxRadiusOption] &&\r\n        distance > this.options[this._maxRadiusOption]\r\n      ) {\r\n        this._outerMarker.setLatLng(this._outerMarker._orgLatLng);\r\n      }\r\n    }\r\n    // calculate the new latlng of marker if radius is out of min/max\r\n    this._outerMarker.setLatLng(this._getNewDestinationOfOuterMarker());\r\n  },\r\n  _distanceCalculation(A, B) {\r\n    return this._map.project(A).distanceTo(this._map.project(B));\r\n  },\r\n  _getMinDistanceInMeter(latlng) {\r\n    return L.PM.Utils.pxRadiusToMeterRadius(\r\n      this.options[this._minRadiusOption],\r\n      this._map,\r\n      latlng\r\n    );\r\n  },\r\n  _getMaxDistanceInMeter(latlng) {\r\n    return L.PM.Utils.pxRadiusToMeterRadius(\r\n      this.options[this._maxRadiusOption],\r\n      this._map,\r\n      latlng\r\n    );\r\n  },\r\n  _onVertexClick(e) {\r\n    const vertex = e.target;\r\n    if (vertex._dragging) {\r\n      return;\r\n    }\r\n\r\n    this._fireVertexClick(e, undefined);\r\n  },\r\n});\r\n", "import Edit from './L.PM.Edit';\r\n\r\nEdit.Circle = Edit.CircleMarker.extend({\r\n  _shape: 'Circle',\r\n  initialize(layer) {\r\n    this._layer = layer;\r\n    this._enabled = false;\r\n\r\n    this._minRadiusOption = 'minRadiusCircle';\r\n    this._maxRadiusOption = 'maxRadiusCircle';\r\n    this._editableOption = 'resizeableCircle';\r\n    // create polygon around the circle border\r\n    this._updateHiddenPolyCircle();\r\n  },\r\n  enable(options) {\r\n    // TODO: this can be removed after the default options of CircleMarker.enable are removed\r\n    L.PM.Edit.CircleMarker.prototype.enable.call(this, options || {});\r\n  },\r\n  _extendingEnable() {},\r\n  _extendingDisable() {\r\n    this._layer.off('remove', this.disable, this);\r\n\r\n    // remove draggable class\r\n    const el = this._layer._path\r\n      ? this._layer._path\r\n      : this._layer._renderer._container;\r\n    L.DomUtil.removeClass(el, 'leaflet-pm-draggable');\r\n  },\r\n  _extendingApplyOptions() {},\r\n  _syncMarkers() {},\r\n  _removeMarker() {},\r\n  _onDragStart() {},\r\n  _extedingMarkerDragEnd() {},\r\n  _updateHiddenPolyCircle() {\r\n    const crsSimple = this._map && this._map.pm._isCRSSimple();\r\n    if (this._hiddenPolyCircle) {\r\n      this._hiddenPolyCircle.setLatLngs(\r\n        L.PM.Utils.circleToPolygon(this._layer, 200, !crsSimple).getLatLngs()\r\n      );\r\n    } else {\r\n      this._hiddenPolyCircle = L.PM.Utils.circleToPolygon(\r\n        this._layer,\r\n        200,\r\n        !crsSimple\r\n      );\r\n    }\r\n\r\n    if (!this._hiddenPolyCircle._parentCopy) {\r\n      this._hiddenPolyCircle._parentCopy = this._layer;\r\n    }\r\n  },\r\n  _distanceCalculation(A, B) {\r\n    return this._map.distance(A, B);\r\n  },\r\n  _getMinDistanceInMeter() {\r\n    return this.options[this._minRadiusOption];\r\n  },\r\n  _getMaxDistanceInMeter() {\r\n    return this.options[this._maxRadiusOption];\r\n  },\r\n  _onVertexClick(e) {\r\n    const vertex = e.target;\r\n    if (vertex._dragging) {\r\n      return;\r\n    }\r\n\r\n    this._fireVertexClick(e, undefined);\r\n  },\r\n});\r\n", "import Edit from './L.PM.Edit';\r\n\r\nEdit.ImageOverlay = Edit.extend({\r\n  _shape: 'ImageOverlay',\r\n  initialize(layer) {\r\n    this._layer = layer;\r\n    this._enabled = false;\r\n  },\r\n  toggleEdit(options) {\r\n    if (!this.enabled()) {\r\n      this.enable(options);\r\n    } else {\r\n      this.disable();\r\n    }\r\n  },\r\n  enabled() {\r\n    return this._enabled;\r\n  },\r\n  // TODO: remove default option in next major Release\r\n  enable(options = { draggable: true, snappable: true }) {\r\n    L.Util.setOptions(this, options);\r\n    this._map = this._layer._map;\r\n    // cancel when map isn't available, this happens when the polygon is removed before this fires\r\n    if (!this._map) {\r\n      return;\r\n    }\r\n\r\n    // layer is not allowed to edit\r\n    if (!this.options.allowEditing) {\r\n      this.disable();\r\n      return;\r\n    }\r\n\r\n    if (!this.enabled()) {\r\n      // if it was already enabled, disable first\r\n      // we don't block enabling again because new options might be passed\r\n      this.disable();\r\n    }\r\n\r\n    this.enableLayerDrag();\r\n\r\n    // if shape gets removed from map, disable edit mode\r\n    this._layer.on('remove', this.disable, this);\r\n\r\n    // change state\r\n    this._enabled = true;\r\n\r\n    // create markers for four corners of ImageOverlay\r\n    this._otherSnapLayers = this._findCorners();\r\n\r\n    this._fireEnable();\r\n  },\r\n  disable() {\r\n    // prevent disabling if layer is being dragged\r\n    if (this._dragging) {\r\n      return;\r\n    }\r\n\r\n    // Add map if it is not already set. This happens when disable() is called before enable()\r\n    if (!this._map) {\r\n      this._map = this._layer._map;\r\n    }\r\n    // disable dragging, as this could have been active even without being enabled\r\n    this.disableLayerDrag();\r\n\r\n    // remove listener\r\n    this._layer.off('remove', this.disable, this);\r\n\r\n    // only fire events if it was enabled before\r\n    if (!this.enabled()) {\r\n      if (this._layerEdited) {\r\n        this._fireUpdate();\r\n      }\r\n      this._layerEdited = false;\r\n      this._fireDisable();\r\n    }\r\n\r\n    this._enabled = false;\r\n  },\r\n  _findCorners() {\r\n    const corners = this._layer.getBounds();\r\n\r\n    const northwest = corners.getNorthWest();\r\n    const northeast = corners.getNorthEast();\r\n    const southeast = corners.getSouthEast();\r\n    const southwest = corners.getSouthWest();\r\n\r\n    return [northwest, northeast, southeast, southwest];\r\n  },\r\n});\r\n", "import Edit from './L.PM.Edit';\r\n\r\nEdit.Text = Edit.extend({\r\n  _shape: 'Text',\r\n  initialize(layer) {\r\n    this._layer = layer;\r\n    this._enabled = false;\r\n  },\r\n  enable(options) {\r\n    L.Util.setOptions(this, options);\r\n\r\n    if (!this.textArea) {\r\n      return;\r\n    }\r\n\r\n    // layer is not allowed to edit\r\n    if (!this.options.allowEditing || !this._layer._map) {\r\n      this.disable();\r\n      return;\r\n    }\r\n\r\n    this._map = this._layer._map;\r\n\r\n    if (this.enabled()) {\r\n      this.disable();\r\n    }\r\n    this.applyOptions();\r\n\r\n    this._safeToCacheDragState = true;\r\n\r\n    this._focusChange();\r\n    this.textArea.readOnly = false;\r\n    this.textArea.classList.remove('pm-disabled');\r\n\r\n    // if shape gets removed from map, disable edit mode\r\n    this._layer.on('remove', this.disable, this);\r\n    L.DomEvent.on(this.textArea, 'input', this._autoResize, this);\r\n    L.DomEvent.on(this.textArea, 'focus', this._focusChange, this);\r\n    L.DomEvent.on(this.textArea, 'blur', this._focusChange, this);\r\n    this._layer.on('dblclick', L.DomEvent.stop);\r\n\r\n    L.DomEvent.off(this.textArea, 'mousedown', this._preventTextSelection);\r\n\r\n    this._enabled = true;\r\n\r\n    this._fireEnable();\r\n  },\r\n  disable() {\r\n    // if it's not enabled, it doesn't need to be disabled\r\n    if (!this.enabled()) {\r\n      return;\r\n    }\r\n\r\n    // remove listener\r\n    this._layer.off('remove', this.disable, this);\r\n    L.DomEvent.off(this.textArea, 'input', this._autoResize, this);\r\n    L.DomEvent.off(this.textArea, 'focus', this._focusChange, this);\r\n    L.DomEvent.off(this.textArea, 'blur', this._focusChange, this);\r\n    L.DomEvent.off(document, 'click', this._documentClick, this);\r\n\r\n    this._focusChange();\r\n    this.textArea.readOnly = true;\r\n    this.textArea.classList.add('pm-disabled');\r\n\r\n    // remove selection\r\n    const focusedElement = document.activeElement;\r\n    // Chrome needs the focus on the element to change the selection\r\n    this.textArea.focus();\r\n    this.textArea.selectionStart = 0;\r\n    this.textArea.selectionEnd = 0;\r\n    L.DomEvent.on(this.textArea, 'mousedown', this._preventTextSelection);\r\n    focusedElement.focus();\r\n\r\n    this._disableOnBlurActive = false;\r\n\r\n    if (this._layerEdited) {\r\n      this._fireUpdate();\r\n    }\r\n    this._layerEdited = false;\r\n    this._fireDisable();\r\n\r\n    this._enabled = false;\r\n  },\r\n  enabled() {\r\n    return this._enabled;\r\n  },\r\n  toggleEdit(options) {\r\n    if (!this.enabled()) {\r\n      this.enable(options);\r\n    } else {\r\n      this.disable();\r\n    }\r\n  },\r\n  applyOptions() {\r\n    if (this.options.snappable) {\r\n      this._initSnappableMarkers();\r\n    } else {\r\n      this._disableSnapping();\r\n    }\r\n  },\r\n  // overwrite initSnappableMarkers from Snapping.js Mixin\r\n  _initSnappableMarkers() {\r\n    const marker = this._layer;\r\n\r\n    this.options.snapDistance = this.options.snapDistance || 30;\r\n    this.options.snapSegment =\r\n      this.options.snapSegment === undefined ? true : this.options.snapSegment;\r\n\r\n    marker.off('pm:drag', this._handleSnapping, this);\r\n    marker.on('pm:drag', this._handleSnapping, this);\r\n\r\n    marker.off('pm:dragend', this._cleanupSnapping, this);\r\n    marker.on('pm:dragend', this._cleanupSnapping, this);\r\n\r\n    marker.off('pm:dragstart', this._unsnap, this);\r\n    marker.on('pm:dragstart', this._unsnap, this);\r\n  },\r\n  _disableSnapping() {\r\n    const marker = this._layer;\r\n    marker.off('pm:drag', this._handleSnapping, this);\r\n    marker.off('pm:dragend', this._cleanupSnapping, this);\r\n    marker.off('pm:dragstart', this._unsnap, this);\r\n  },\r\n  _autoResize() {\r\n    this.textArea.style.height = '1px';\r\n    this.textArea.style.width = '1px';\r\n    const height =\r\n      this.textArea.scrollHeight > 21 ? this.textArea.scrollHeight : 21;\r\n    const width =\r\n      this.textArea.scrollWidth > 16 ? this.textArea.scrollWidth : 16;\r\n    this.textArea.style.height = `${height}px`;\r\n    this.textArea.style.width = `${width}px`;\r\n    this._layer.options.text = this.getText();\r\n    this._fireTextChange(this.getText());\r\n  },\r\n\r\n  _disableOnBlur() {\r\n    this._disableOnBlurActive = true;\r\n    // we need this timeout because else the place click event is triggered here too.\r\n    setTimeout(() => {\r\n      if (this.enabled()) {\r\n        L.DomEvent.on(document, 'click', this._documentClick, this);\r\n      }\r\n    }, 100);\r\n  },\r\n  _documentClick(e) {\r\n    if (e.target !== this.textArea) {\r\n      this.disable();\r\n      if (!this.getText() && this.options.removeIfEmpty) {\r\n        this.remove();\r\n      }\r\n    }\r\n  },\r\n\r\n  _focusChange(e = {}) {\r\n    const focusAlreadySet = this._hasFocus;\r\n    this._hasFocus = e.type === 'focus';\r\n    if (!focusAlreadySet !== !this._hasFocus) {\r\n      if (this._hasFocus) {\r\n        this._applyFocus();\r\n        this._focusText = this.getText();\r\n        this._fireTextFocus();\r\n      } else {\r\n        this._removeFocus();\r\n        this._fireTextBlur();\r\n        if (this._focusText !== this.getText()) {\r\n          this._fireEdit();\r\n          this._layerEdited = true;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  _applyFocus() {\r\n    this.textArea.classList.add('pm-hasfocus');\r\n\r\n    if (this._map.dragging) {\r\n      // save current map dragging state\r\n      if (this._safeToCacheDragState) {\r\n        this._originalMapDragState = this._map.dragging._enabled;\r\n        // don't cache the state again until another mouse up is registered\r\n        this._safeToCacheDragState = false;\r\n      }\r\n      this._map.dragging.disable();\r\n    }\r\n  },\r\n  _removeFocus() {\r\n    if (this._map.dragging) {\r\n      if (this._originalMapDragState) {\r\n        this._map.dragging.enable();\r\n      }\r\n      this._safeToCacheDragState = true;\r\n    }\r\n\r\n    this.textArea.classList.remove('pm-hasfocus');\r\n  },\r\n\r\n  focus() {\r\n    if (!this.enabled()) {\r\n      throw new TypeError('Layer is not enabled');\r\n    }\r\n    this.textArea.focus();\r\n  },\r\n\r\n  blur() {\r\n    if (!this.enabled()) {\r\n      throw new TypeError('Layer is not enabled');\r\n    }\r\n    this.textArea.blur();\r\n    if (this._disableOnBlurActive) {\r\n      this.disable();\r\n    }\r\n  },\r\n\r\n  hasFocus() {\r\n    return this._hasFocus;\r\n  },\r\n\r\n  getElement() {\r\n    return this.textArea;\r\n  },\r\n\r\n  setText(text) {\r\n    this.textArea.value = text;\r\n    this._autoResize();\r\n  },\r\n\r\n  getText() {\r\n    return this.textArea.value;\r\n  },\r\n\r\n  _initTextMarker() {\r\n    this.textArea = L.PM.Draw.Text.prototype._createTextArea.call(this);\r\n    if (this.options.className) {\r\n      const cssClasses = this.options.className.split(' ');\r\n      this.textArea.classList.add(...cssClasses);\r\n    }\r\n    const textAreaIcon = L.PM.Draw.Text.prototype._createTextIcon.call(\r\n      this,\r\n      this.textArea\r\n    );\r\n    this._layer.setIcon(textAreaIcon);\r\n\r\n    this._layer.once('add', this._createTextMarker, this);\r\n  },\r\n\r\n  _createTextMarker(enable = false) {\r\n    this._layer.off('add', this._createTextMarker, this);\r\n\r\n    this._layer.getElement().tabIndex = -1;\r\n\r\n    this.textArea.wrap = 'off';\r\n    this.textArea.style.overflow = 'hidden';\r\n    this.textArea.style.height = L.DomUtil.getStyle(this.textArea, 'font-size');\r\n    this.textArea.style.width = '1px';\r\n\r\n    if (this._layer.options.text) {\r\n      this.setText(this._layer.options.text);\r\n    }\r\n\r\n    this._autoResize();\r\n\r\n    if (enable === true) {\r\n      // enable editing for the marker\r\n      this.enable();\r\n      this.focus();\r\n      this._disableOnBlur();\r\n    }\r\n  },\r\n\r\n  // Chrome ignores `user-select: none`, so we need to disable text selection manually\r\n  _preventTextSelection(e) {\r\n    e.preventDefault();\r\n  },\r\n});\r\n", "/**\r\n * Copyright (c) https://github.com/w8r/Leaflet.Path.Transform\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n */\r\n\r\n/**\r\n * @class  L.PM.Matrix\r\n *\r\n * @param {Number} a\r\n * @param {Number} b\r\n * @param {Number} c\r\n * @param {Number} d\r\n * @param {Number} e\r\n * @param {Number} f\r\n */\r\nconst Matrix = function Matrix(a, b, c, d, e, f) {\r\n  /**\r\n   * @type {Array.<Number>}\r\n   */\r\n  this._matrix = [a, b, c, d, e, f];\r\n};\r\n\r\nMatrix.init = () => new L.PM.Matrix(1, 0, 0, 1, 0, 0);\r\n\r\nMatrix.prototype = {\r\n  /**\r\n   * @param  {L.Point} point\r\n   * @return {L.Point}\r\n   */\r\n  transform(point) {\r\n    return this._transform(point.clone());\r\n  },\r\n\r\n  /**\r\n   * Destructive\r\n   *\r\n   * [ x ] = [ a  b  tx ] [ x ] = [ a * x + b * y + tx ]\r\n   * [ y ] = [ c  d  ty ] [ y ] = [ c * x + d * y + ty ]\r\n   *\r\n   * @param  {L.Point} point\r\n   * @return {L.Point}\r\n   */\r\n  _transform(point) {\r\n    const matrix = this._matrix;\r\n    const { x, y } = point;\r\n    point.x = matrix[0] * x + matrix[1] * y + matrix[4];\r\n    point.y = matrix[2] * x + matrix[3] * y + matrix[5];\r\n    return point;\r\n  },\r\n\r\n  /**\r\n   * @param  {L.Point} point\r\n   * @return {L.Point}\r\n   */\r\n  untransform(point) {\r\n    const matrix = this._matrix;\r\n    return new L.Point(\r\n      (point.x / matrix[0] - matrix[4]) / matrix[0],\r\n      (point.y / matrix[2] - matrix[5]) / matrix[2]\r\n    );\r\n  },\r\n\r\n  /**\r\n   * @return {L.PM.Matrix}\r\n   */\r\n  clone() {\r\n    const matrix = this._matrix;\r\n    return new L.PM.Matrix(\r\n      matrix[0],\r\n      matrix[1],\r\n      matrix[2],\r\n      matrix[3],\r\n      matrix[4],\r\n      matrix[5]\r\n    );\r\n  },\r\n\r\n  /**\r\n   * @param {L.Point|Number} translate\r\n   * @return {L.PM.Matrix|L.Point}\r\n   */\r\n  translate(translate) {\r\n    if (translate === undefined) {\r\n      return new L.Point(this._matrix[4], this._matrix[5]);\r\n    }\r\n\r\n    let translateX;\r\n    let translateY;\r\n    if (typeof translate === 'number') {\r\n      translateX = translate;\r\n      translateY = translate;\r\n    } else {\r\n      translateX = translate.x;\r\n      translateY = translate.y;\r\n    }\r\n\r\n    return this._add(1, 0, 0, 1, translateX, translateY);\r\n  },\r\n\r\n  /**\r\n   * @param {L.Point|Number} scale\r\n   * @param {L.Point|Number} origin\r\n   * @return {L.PM.Matrix|L.Point}\r\n   */\r\n  scale(scale, origin) {\r\n    if (scale === undefined) {\r\n      return new L.Point(this._matrix[0], this._matrix[3]);\r\n    }\r\n\r\n    let scaleX;\r\n    let scaleY;\r\n    origin = origin || L.point(0, 0);\r\n    if (typeof scale === 'number') {\r\n      scaleX = scale;\r\n      scaleY = scale;\r\n    } else {\r\n      scaleX = scale.x;\r\n      scaleY = scale.y;\r\n    }\r\n\r\n    return this._add(scaleX, 0, 0, scaleY, origin.x, origin.y)._add(\r\n      1,\r\n      0,\r\n      0,\r\n      1,\r\n      -origin.x,\r\n      -origin.y\r\n    );\r\n  },\r\n\r\n  /**\r\n   * m00  m01  x - m00 * x - m01 * y\r\n   * m10  m11  y - m10 * x - m11 * y\r\n   * @param {Number}   angle\r\n   * @param {L.Point=} origin\r\n   * @return {L.PM.Matrix}\r\n   */\r\n  rotate(angle, origin) {\r\n    const cos = Math.cos(angle);\r\n    const sin = Math.sin(angle);\r\n\r\n    origin = origin || new L.Point(0, 0);\r\n\r\n    return this._add(cos, sin, -sin, cos, origin.x, origin.y)._add(\r\n      1,\r\n      0,\r\n      0,\r\n      1,\r\n      -origin.x,\r\n      -origin.y\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Invert rotation\r\n   * @return {L.PM.Matrix}\r\n   */\r\n  flip() {\r\n    this._matrix[1] *= -1;\r\n    this._matrix[2] *= -1;\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * @param {Number|L.PM.Matrix} a\r\n   * @param {Number} b\r\n   * @param {Number} c\r\n   * @param {Number} d\r\n   * @param {Number} e\r\n   * @param {Number} f\r\n   */\r\n  _add(a, b, c, d, e, f) {\r\n    const result = [[], [], []];\r\n    let src = this._matrix;\r\n    const m = [\r\n      [src[0], src[2], src[4]],\r\n      [src[1], src[3], src[5]],\r\n      [0, 0, 1],\r\n    ];\r\n    let other = [\r\n      [a, c, e],\r\n      [b, d, f],\r\n      [0, 0, 1],\r\n    ];\r\n    let val;\r\n\r\n    if (a && a instanceof L.PM.Matrix) {\r\n      src = a._matrix;\r\n      other = [\r\n        [src[0], src[2], src[4]],\r\n        [src[1], src[3], src[5]],\r\n        [0, 0, 1],\r\n      ];\r\n    }\r\n\r\n    for (let i = 0; i < 3; i += 1) {\r\n      for (let j = 0; j < 3; j += 1) {\r\n        val = 0;\r\n        for (let k = 0; k < 3; k += 1) {\r\n          val += m[i][k] * other[k][j];\r\n        }\r\n        result[i][j] = val;\r\n      }\r\n    }\r\n\r\n    this._matrix = [\r\n      result[0][0],\r\n      result[1][0],\r\n      result[0][1],\r\n      result[1][1],\r\n      result[0][2],\r\n      result[1][2],\r\n    ];\r\n    return this;\r\n  },\r\n};\r\n\r\nexport default Matrix;\r\n", "import { createGeodesicPolygon, getTranslation } from './helpers';\r\nimport { _toLatLng, _toPoint } from './helpers/ModeHelper';\r\n\r\nconst Utils = {\r\n  calcMiddleLatLng(map, latlng1, latlng2) {\r\n    // calculate the middle coordinates between two markers\r\n\r\n    const p1 = map.project(latlng1);\r\n    const p2 = map.project(latlng2);\r\n\r\n    return map.unproject(p1._add(p2)._divideBy(2));\r\n  },\r\n  findLayers(map) {\r\n    let layers = [];\r\n    map.eachLayer((layer) => {\r\n      if (\r\n        layer instanceof L.Polyline ||\r\n        layer instanceof L.Marker ||\r\n        layer instanceof L.Circle ||\r\n        layer instanceof L.CircleMarker ||\r\n        layer instanceof L.ImageOverlay\r\n      ) {\r\n        layers.push(layer);\r\n      }\r\n    });\r\n\r\n    // filter out layers that don't have the leaflet-geoman instance\r\n    layers = layers.filter((layer) => !!layer.pm);\r\n\r\n    // filter out everything that's leaflet-geoman specific temporary stuff\r\n    layers = layers.filter((layer) => !layer._pmTempLayer);\r\n\r\n    // filter out everything that ignore leaflet-geoman\r\n    layers = layers.filter(\r\n      (layer) =>\r\n        (!L.PM.optIn && !layer.options.pmIgnore) || // if optIn is not set / true and pmIgnore is not set / true (default)\r\n        (L.PM.optIn && layer.options.pmIgnore === false) // if optIn is true and pmIgnore is false);\r\n    );\r\n\r\n    return layers;\r\n  },\r\n  circleToPolygon(circle, sides = 60, withBearing = true) {\r\n    const origin = circle.getLatLng();\r\n    const radius = circle.getRadius();\r\n    const polys = createGeodesicPolygon(origin, radius, sides, 0, withBearing); // these are the points that make up the circle\r\n    const polygon = [];\r\n    for (let i = 0; i < polys.length; i += 1) {\r\n      const geometry = [polys[i].lat, polys[i].lng];\r\n      polygon.push(geometry);\r\n    }\r\n    return L.polygon(polygon, circle.options);\r\n  },\r\n  disablePopup(layer) {\r\n    if (layer.getPopup()) {\r\n      layer._tempPopupCopy = layer.getPopup();\r\n      layer.unbindPopup();\r\n    }\r\n  },\r\n  enablePopup(layer) {\r\n    if (layer._tempPopupCopy) {\r\n      layer.bindPopup(layer._tempPopupCopy);\r\n      delete layer._tempPopupCopy;\r\n    }\r\n  },\r\n  _fireEvent(layer, type, data, propagate = false) {\r\n    layer.fire(type, data, propagate);\r\n\r\n    // fire event to all parent layers\r\n    const { groups } = this.getAllParentGroups(layer);\r\n    groups.forEach((group) => {\r\n      group.fire(type, data, propagate);\r\n    });\r\n  },\r\n  getAllParentGroups(layer) {\r\n    const groupIds = [];\r\n    const groups = [];\r\n\r\n    // get every group layer once\r\n    const loopThroughParents = (_layer) => {\r\n      for (const _id in _layer._eventParents) {\r\n        if (groupIds.indexOf(_id) === -1) {\r\n          groupIds.push(_id);\r\n          const group = _layer._eventParents[_id];\r\n          groups.push(group);\r\n          loopThroughParents(group);\r\n        }\r\n      }\r\n    };\r\n\r\n    // check if the last group fetch is under 1 sec, then we use the groups from before\r\n    if (\r\n      !layer._pmLastGroupFetch ||\r\n      !layer._pmLastGroupFetch.time ||\r\n      new Date().getTime() - layer._pmLastGroupFetch.time > 1000\r\n    ) {\r\n      loopThroughParents(layer);\r\n      layer._pmLastGroupFetch = {\r\n        time: new Date().getTime(),\r\n        groups,\r\n        groupIds,\r\n      };\r\n      return {\r\n        groupIds,\r\n        groups,\r\n      };\r\n    }\r\n    return {\r\n      groups: layer._pmLastGroupFetch.groups,\r\n      groupIds: layer._pmLastGroupFetch.groupIds,\r\n    };\r\n  },\r\n  createGeodesicPolygon,\r\n  getTranslation,\r\n  findDeepCoordIndex(arr, latlng, exact = true) {\r\n    // find latlng in arr and return its location as path\r\n    // thanks for the function, Felix Heck\r\n    let result;\r\n\r\n    const run = (path) => (v, i) => {\r\n      const iRes = path.concat(i);\r\n\r\n      if (exact) {\r\n        if (v.lat && v.lat === latlng.lat && v.lng === latlng.lng) {\r\n          result = iRes;\r\n          return true;\r\n        }\r\n      } else if (v.lat && L.latLng(v).equals(latlng)) {\r\n        result = iRes;\r\n        return true;\r\n      }\r\n\r\n      return Array.isArray(v) && v.some(run(iRes));\r\n    };\r\n    arr.some(run([]));\r\n\r\n    let returnVal = {};\r\n\r\n    if (result) {\r\n      returnVal = {\r\n        indexPath: result,\r\n        index: result[result.length - 1],\r\n        parentPath: result.slice(0, result.length - 1),\r\n      };\r\n    }\r\n\r\n    return returnVal;\r\n  },\r\n  findDeepMarkerIndex(arr, marker) {\r\n    // thanks for the function, Felix Heck\r\n    let result;\r\n\r\n    const run = (path) => (v, i) => {\r\n      const iRes = path.concat(i);\r\n\r\n      if (v._leaflet_id === marker._leaflet_id) {\r\n        result = iRes;\r\n        return true;\r\n      }\r\n\r\n      return Array.isArray(v) && v.some(run(iRes));\r\n    };\r\n    arr.some(run([]));\r\n\r\n    let returnVal = {};\r\n\r\n    if (result) {\r\n      returnVal = {\r\n        indexPath: result,\r\n        index: result[result.length - 1],\r\n        parentPath: result.slice(0, result.length - 1),\r\n      };\r\n    }\r\n\r\n    return returnVal;\r\n  },\r\n  _getIndexFromSegment(coords, segment) {\r\n    if (segment && segment.length === 2) {\r\n      const indexA = this.findDeepCoordIndex(coords, segment[0]);\r\n      const indexB = this.findDeepCoordIndex(coords, segment[1]);\r\n      let newIndex = Math.max(indexA.index, indexB.index);\r\n      if ((indexA.index === 0 || indexB.index === 0) && newIndex !== 1) {\r\n        newIndex += 1;\r\n      }\r\n      return {\r\n        indexA,\r\n        indexB,\r\n        newIndex,\r\n        indexPath: indexA.indexPath,\r\n        parentPath: indexA.parentPath,\r\n      };\r\n    }\r\n    return null;\r\n  },\r\n  // Returns the corners of the rectangle with a given rotation\r\n  // degrees: Between marker A and the marker counterclockwise before. Same for marker B\r\n  _getRotatedRectangle(A, B, rotation, map) {\r\n    const startPoint = _toPoint(map, A);\r\n    const endPoint = _toPoint(map, B);\r\n    const theta = (rotation * Math.PI) / 180;\r\n    const cos = Math.cos(theta);\r\n    const sin = Math.sin(theta);\r\n\r\n    const width =\r\n      (endPoint.x - startPoint.x) * cos + (endPoint.y - startPoint.y) * sin;\r\n    const height =\r\n      (endPoint.y - startPoint.y) * cos - (endPoint.x - startPoint.x) * sin;\r\n    const x0 = width * cos + startPoint.x;\r\n    const y0 = width * sin + startPoint.y;\r\n    const x1 = -height * sin + startPoint.x;\r\n    const y1 = height * cos + startPoint.y;\r\n\r\n    const p0 = _toLatLng(map, startPoint);\r\n    const p1 = _toLatLng(map, { x: x0, y: y0 });\r\n    const p2 = _toLatLng(map, endPoint);\r\n    const p3 = _toLatLng(map, { x: x1, y: y1 });\r\n    return [p0, p1, p2, p3];\r\n  },\r\n  pxRadiusToMeterRadius(radiusInPx, map, center) {\r\n    const pointA = map.project(center);\r\n    const pointB = L.point(pointA.x + radiusInPx, pointA.y);\r\n    return map.distance(map.unproject(pointB), center);\r\n  },\r\n};\r\n\r\nexport default Utils;\r\n", "/* A Leaflet Plugin For Editing Geometry Layers in Leaflet 1.0\r\n * Copyright (C) Geoman.io and Sumit Kumar - All Rights Reserved\r\n * Unauthorized copying of this file, via any medium is strictly prohibited\r\n * Proprietary and confidential\r\n * Written by Sumit Kumar <sumit@geoman.io>, January 2020\r\n * Twitter: @TweetsOfSumit\r\n * OSS Repo: https://github.com/geoman-io/leaflet-geoman\r\n * Get Pro: https://geoman.io\r\n */\r\n\r\nimport './polyfills';\r\nimport packageInfo from '../../package.json';\r\n\r\nimport Map from './L.PM.Map';\r\nimport Toolbar from './Toolbar/L.PM.Toolbar';\r\n\r\nimport Draw from './Draw/L.PM.Draw';\r\nimport './Draw/L.PM.Draw.Marker';\r\nimport './Draw/L.PM.Draw.Line';\r\nimport './Draw/L.PM.Draw.Polygon';\r\nimport './Draw/L.PM.Draw.Rectangle';\r\nimport './Draw/L.PM.Draw.CircleMarker';\r\nimport './Draw/L.PM.Draw.Circle';\r\nimport './Draw/L.PM.Draw.Cut';\r\nimport './Draw/L.PM.Draw.Text';\r\n\r\nimport Edit from './Edit/L.PM.Edit';\r\nimport './Edit/L.PM.Edit.LayerGroup';\r\nimport './Edit/L.PM.Edit.Marker';\r\nimport './Edit/L.PM.Edit.Line';\r\nimport './Edit/L.PM.Edit.Polygon';\r\nimport './Edit/L.PM.Edit.Rectangle';\r\nimport './Edit/L.PM.Edit.CircleMarker';\r\nimport './Edit/L.PM.Edit.Circle';\r\nimport './Edit/L.PM.Edit.ImageOverlay';\r\nimport './Edit/L.PM.Edit.Text';\r\n\r\nimport '../css/layers.css';\r\nimport '../css/controls.css';\r\n\r\nimport Matrix from './helpers/Matrix';\r\n\r\nimport Utils from './L.PM.Utils';\r\n\r\nL.PM = L.PM || {\r\n  version: packageInfo.version,\r\n  Map,\r\n  Toolbar,\r\n  Draw,\r\n  Edit,\r\n  Utils,\r\n  Matrix,\r\n  activeLang: 'en',\r\n  optIn: false,\r\n  initialize(options) {\r\n    this.addInitHooks(options);\r\n  },\r\n  setOptIn(value) {\r\n    this.optIn = !!value;\r\n  },\r\n  addInitHooks() {\r\n    function initMap() {\r\n      this.pm = undefined;\r\n\r\n      if (L.PM.optIn) {\r\n        if (this.options.pmIgnore === false) {\r\n          this.pm = new L.PM.Map(this);\r\n        }\r\n      } else if (!this.options.pmIgnore) {\r\n        this.pm = new L.PM.Map(this);\r\n      }\r\n\r\n      if (this.pm) {\r\n        this.pm.setGlobalOptions({});\r\n      }\r\n    }\r\n\r\n    L.Map.addInitHook(initMap);\r\n\r\n    function initLayerGroup() {\r\n      this.pm = undefined;\r\n      if (L.PM.optIn) {\r\n        if (this.options.pmIgnore === false) {\r\n          this.pm = new L.PM.Edit.LayerGroup(this);\r\n        }\r\n      } else if (!this.options.pmIgnore) {\r\n        this.pm = new L.PM.Edit.LayerGroup(this);\r\n      }\r\n    }\r\n\r\n    L.LayerGroup.addInitHook(initLayerGroup);\r\n\r\n    function initMarker() {\r\n      this.pm = undefined;\r\n\r\n      if (L.PM.optIn) {\r\n        if (this.options.pmIgnore === false) {\r\n          if (this.options.textMarker) {\r\n            this.pm = new L.PM.Edit.Text(this);\r\n            if (!this.options._textMarkerOverPM) {\r\n              this.pm._initTextMarker();\r\n            }\r\n            delete this.options._textMarkerOverPM;\r\n          } else {\r\n            this.pm = new L.PM.Edit.Marker(this);\r\n          }\r\n        }\r\n      } else if (!this.options.pmIgnore) {\r\n        if (this.options.textMarker) {\r\n          this.pm = new L.PM.Edit.Text(this);\r\n          if (!this.options._textMarkerOverPM) {\r\n            this.pm._initTextMarker();\r\n          }\r\n          delete this.options._textMarkerOverPM;\r\n        } else {\r\n          this.pm = new L.PM.Edit.Marker(this);\r\n        }\r\n      }\r\n    }\r\n    L.Marker.addInitHook(initMarker);\r\n\r\n    function initCircleMarker() {\r\n      this.pm = undefined;\r\n\r\n      if (L.PM.optIn) {\r\n        if (this.options.pmIgnore === false) {\r\n          this.pm = new L.PM.Edit.CircleMarker(this);\r\n        }\r\n      } else if (!this.options.pmIgnore) {\r\n        this.pm = new L.PM.Edit.CircleMarker(this);\r\n      }\r\n    }\r\n    L.CircleMarker.addInitHook(initCircleMarker);\r\n\r\n    function initPolyline() {\r\n      this.pm = undefined;\r\n\r\n      if (L.PM.optIn) {\r\n        if (this.options.pmIgnore === false) {\r\n          this.pm = new L.PM.Edit.Line(this);\r\n        }\r\n      } else if (!this.options.pmIgnore) {\r\n        this.pm = new L.PM.Edit.Line(this);\r\n      }\r\n    }\r\n\r\n    L.Polyline.addInitHook(initPolyline);\r\n\r\n    function initPolygon() {\r\n      this.pm = undefined;\r\n\r\n      if (L.PM.optIn) {\r\n        if (this.options.pmIgnore === false) {\r\n          this.pm = new L.PM.Edit.Polygon(this);\r\n        }\r\n      } else if (!this.options.pmIgnore) {\r\n        this.pm = new L.PM.Edit.Polygon(this);\r\n      }\r\n    }\r\n\r\n    L.Polygon.addInitHook(initPolygon);\r\n\r\n    function initRectangle() {\r\n      this.pm = undefined;\r\n\r\n      if (L.PM.optIn) {\r\n        if (this.options.pmIgnore === false) {\r\n          this.pm = new L.PM.Edit.Rectangle(this);\r\n        }\r\n      } else if (!this.options.pmIgnore) {\r\n        this.pm = new L.PM.Edit.Rectangle(this);\r\n      }\r\n    }\r\n\r\n    L.Rectangle.addInitHook(initRectangle);\r\n\r\n    function initCircle() {\r\n      this.pm = undefined;\r\n\r\n      if (L.PM.optIn) {\r\n        if (this.options.pmIgnore === false) {\r\n          this.pm = new L.PM.Edit.Circle(this);\r\n        }\r\n      } else if (!this.options.pmIgnore) {\r\n        this.pm = new L.PM.Edit.Circle(this);\r\n      }\r\n    }\r\n\r\n    L.Circle.addInitHook(initCircle);\r\n\r\n    function initImageOverlay() {\r\n      this.pm = undefined;\r\n\r\n      if (L.PM.optIn) {\r\n        if (this.options.pmIgnore === false) {\r\n          this.pm = new L.PM.Edit.ImageOverlay(this);\r\n        }\r\n      } else if (!this.options.pmIgnore) {\r\n        this.pm = new L.PM.Edit.ImageOverlay(this);\r\n      }\r\n    }\r\n\r\n    L.ImageOverlay.addInitHook(initImageOverlay);\r\n  },\r\n  reInitLayer(layer) {\r\n    if (layer instanceof L.LayerGroup) {\r\n      layer.eachLayer((_layer) => {\r\n        this.reInitLayer(_layer);\r\n      });\r\n    }\r\n    if (layer.pm) {\r\n      // PM is already added to the layer\r\n    } else if (L.PM.optIn && layer.options.pmIgnore !== false) {\r\n      // Opt-In is true and pmIgnore is not false\r\n    } else if (layer.options.pmIgnore) {\r\n      // pmIgnore is true\r\n    } else if (layer instanceof L.Map) {\r\n      layer.pm = new L.PM.Map(layer);\r\n    } else if (layer instanceof L.Marker) {\r\n      if (layer.options.textMarker) {\r\n        layer.pm = new L.PM.Edit.Text(layer);\r\n        layer.pm._initTextMarker();\r\n        layer.pm._createTextMarker(false);\r\n      } else {\r\n        layer.pm = new L.PM.Edit.Marker(layer);\r\n      }\r\n    } else if (layer instanceof L.Circle) {\r\n      layer.pm = new L.PM.Edit.Circle(layer);\r\n    } else if (layer instanceof L.CircleMarker) {\r\n      layer.pm = new L.PM.Edit.CircleMarker(layer);\r\n    } else if (layer instanceof L.Rectangle) {\r\n      layer.pm = new L.PM.Edit.Rectangle(layer);\r\n    } else if (layer instanceof L.Polygon) {\r\n      layer.pm = new L.PM.Edit.Polygon(layer);\r\n    } else if (layer instanceof L.Polyline) {\r\n      layer.pm = new L.PM.Edit.Line(layer);\r\n    } else if (layer instanceof L.LayerGroup) {\r\n      layer.pm = new L.PM.Edit.LayerGroup(layer);\r\n    } else if (layer instanceof L.ImageOverlay) {\r\n      layer.pm = new L.PM.Edit.ImageOverlay(layer);\r\n    }\r\n  },\r\n};\r\n\r\nif (L.version === '1.7.1') {\r\n  // Canvas Mode: After dragging the map the target layer can't be dragged anymore until it is clicked\r\n  // https://github.com/Leaflet/Leaflet/issues/7775 a fix is already merged for the Leaflet 1.8.0 version\r\n  L.Canvas.include({\r\n    _onClick(e) {\r\n      const point = this._map.mouseEventToLayerPoint(e);\r\n      let layer;\r\n      let clickedLayer;\r\n\r\n      for (let order = this._drawFirst; order; order = order.next) {\r\n        layer = order.layer;\r\n        if (layer.options.interactive && layer._containsPoint(point)) {\r\n          // changing e.type !== 'preclick' to e.type === 'preclick' fix the issue\r\n          if (\r\n            !(e.type === 'click' || e.type === 'preclick') ||\r\n            !this._map._draggableMoved(layer)\r\n          ) {\r\n            clickedLayer = layer;\r\n          }\r\n        }\r\n      }\r\n      if (clickedLayer) {\r\n        L.DomEvent.fakeStop(e);\r\n        this._fireEvent([clickedLayer], e);\r\n      }\r\n    },\r\n  });\r\n}\r\n\r\n// initialize leaflet-geoman\r\nL.PM.initialize();\r\n"],
  "mappings": "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",
  "names": ["merge", "merge", "get", "feature", "get", "lineIntersect", "get", "kinks", "lineIntersect", "Matrix"]
}
